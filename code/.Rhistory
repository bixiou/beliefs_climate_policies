label(s$gain_fuel_echelle) <<- "gain_fuel_echelle: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe carburants compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
label(s$gain_partielle_echelle) <<- "gain_partielle_echelle: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe partielle (carburants ou chauffage) compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
# cf. consistency_belief_losses.py pour les imputations
temp <- -405.55*(s$gain==-6) - 224.25*(s$gain==-5) - 147.91*(s$gain==-4) - 92.83*(s$gain==-3) - 48.28*(s$gain==-2) - 13.72*(s$gain==-1) + 10.39*(s$gain==1) + 30.36*(s$gain==2) + 49.96*(s$gain==3) + 69.72*(s$gain==4) + 106.89*(s$gain==5) #  - 1.66*(s$gain==0)
s$gain <<- as.item(temp, labels = structure(c(-405.55, -224.25, -147.91, -92.83, -48.28, -13.72, 0, 10.39, 30.36, 49.96, 69.72, 106.89), names = c("<-280", "-280_-190", "-190_-120", "-120_-70", "-70_-30", "-30_0", "0", "0_20", "20_40", "40_60", "60_80", ">80")), annotation=Label(s$gain))
temp <- NA
temp[!is.na(s$gain_fuel)] <- (-248.76*(s$gain_fuel==-6) - 131.21*(s$gain_fuel==-5) - 87.36*(s$gain_fuel==-4) - 53.27*(s$gain_fuel==-3) - 25.49*(s$gain_fuel==-2) - 7.51*(s$gain_fuel==-1) + 5.17*(s$gain_fuel==1) + 14.73*(s$gain_fuel==2) + 24.85*(s$gain_fuel==3) + 34.89*(s$gain_fuel==4) + 57.42*(s$gain_fuel==5))[!is.na(s$gain_fuel)] #  - 1.17*(s$gain_fuel==0)
s$gain_fuel <<- as.item(temp, labels = structure(c(-248.76, -131.21, -87.36, -53.27, -25.49, -7.51, 0, 5.17, 14.73, 24.85, 34.89, 57.42), names = c("<-160", "-160_-110", "-110_-70", "-70_-40", "-40_-15", "-15_0", "0", "0_10", "10_20", "20_30", "30_40", ">40")), annotation=Label(s$gain_fuel))
temp <- NA
temp[!is.na(s$gain_chauffage)] <- (-262.07*(s$gain_chauffage==-6) - 132.69*(s$gain_chauffage==-5) - 87.05*(s$gain_chauffage==-4) - 53.65*(s$gain_chauffage==-3) - 26.57*(s$gain_chauffage==-2) - 7.20*(s$gain_chauffage==-1) + 4.53*(s$gain_chauffage==1) + 15.44*(s$gain_chauffage==2) + 25.26*(s$gain_chauffage==3) + 35.66*(s$gain_chauffage==4) + 54.67*(s$gain_chauffage==5))[!is.na(s$gain_chauffage)] #  - 1.34*(s$gain_chauffage==0)
s$gain_chauffage <<- as.item(temp, labels = structure(c(-262.07, -132.69, -87.05, -53.65, -26.57, -7.20, 0, 4.53, 15.44, 25.26, 35.66, 54.67), names = c("<-160", "-160_-110", "-110_-70", "-70_-40", "-40_-15", "-15_0", "0", "0_10", "10_20", "20_30", "30_40", ">40")), annotation=Label(s$gain_chauffage))
s$Elasticite_chauffage <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_chauffage))))
s$Elasticite_chauffage <<- (s$Elasticite_chauffage==0)*1.5 + (s$Elasticite_chauffage==3)*6.5 + (s$Elasticite_chauffage>3)*(s$Elasticite_chauffage + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_chauffage <<- - round(s$Elasticite_chauffage / 30, 2) # converts into elasticity
label(s$Elasticite_chauffage) <<- "Elasticite_chauffage: Élasticité-prix des dépenses de chauffage des Français, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 30%)"
s$Elasticite_chauffage_perso <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_chauffage_perso))))
s$Elasticite_chauffage_perso <<- (s$Elasticite_chauffage_perso==0)*1.5 + (s$Elasticite_chauffage_perso==3)*6.5 + (s$Elasticite_chauffage_perso>3)*(s$Elasticite_chauffage_perso + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_chauffage_perso <<- - round(s$Elasticite_chauffage_perso / 30, 2) # converts into elasticity
label(s$Elasticite_chauffage_perso) <<- "Elasticite_chauffage_perso: Élasticité-prix des dépenses de chauffage du ménage, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 30%)"
s$Elasticite_fuel <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_fuel))))
s$Elasticite_fuel <<- (s$Elasticite_fuel==0)*1.5 + (s$Elasticite_fuel==3)*6.5 + (s$Elasticite_fuel>3)*(s$Elasticite_fuel + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_fuel <<- - round(s$Elasticite_fuel / 30, 2) # converts into elasticity
label(s$Elasticite_fuel) <<- "Elasticite_fuel: Élasticité-prix des dépenses de carburants des Français, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 0.5€/L)"
s$Elasticite_fuel_perso <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_fuel_perso))))
s$Elasticite_fuel_perso <<- (s$Elasticite_fuel_perso==0)*1.5 + (s$Elasticite_fuel_perso==3)*6.5 + (s$Elasticite_fuel_perso>3)*(s$Elasticite_fuel_perso + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_fuel_perso <<- - round(s$Elasticite_fuel_perso / 30, 2) # converts into elasticity
label(s$Elasticite_fuel_perso) <<- "Elasticite_fuel_perso: Élasticité-prix des dépenses de carburants du ménage, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 0.5€/L)"
s$elasticite_partielle <<- s$elasticite_chauffage
s$elasticite_partielle[!is.na(s$elasticite_fuel)] <<- s$elasticite_fuel[!is.na(s$elasticite_fuel)]
label(s$elasticite_partielle) <<- "elasticite_partielle: Réduction de la conso de fioul et gaz OU de carburants des Français suite à augmentation du prix de 30% (0% - Je n'en consomme déjà presque pas/0% - Je suis contraint sur tous mes déplacements/de 0% à 10%/de 10% à 20%/de 20% à 30%/+ de 30% - Je changerais largement mes habitudes de déplacement)"
s$Elasticite_partielle <<- s$Elasticite_chauffage
s$Elasticite_partielle[!is.na(s$Elasticite_fuel)] <<- s$Elasticite_fuel[!is.na(s$Elasticite_fuel)]
label(s$Elasticite_partielle) <<- "Elasticite_partielle: Élasticité-prix des dépenses de fioul et gaz OU de carburants des Français, calculée en prenant la valeur moyenne des intervalles proposées"
s$elasticite_partielle_perso <<- s$elasticite_chauffage_perso
s$elasticite_partielle_perso[!is.na(s$elasticite_fuel_perso)] <<- s$elasticite_fuel_perso[!is.na(s$elasticite_fuel_perso)]
label(s$elasticite_partielle_perso) <<- "elasticite_partielle_perso: Réduction de la conso de fioul et gaz OU de carburants du ménage suite à augmentation du prix de 30% (0% - Je n'en consomme déjà presque pas/0% - Je suis contraint sur tous mes déplacements/de 0% à 10%/de 10% à 20%/de 20% à 30%/+ de 30% - Je changerais largement mes habitudes de déplacement)"
s$Elasticite_partielle_perso <<- s$Elasticite_chauffage_perso
s$Elasticite_partielle_perso[!is.na(s$Elasticite_fuel_perso)] <<- s$Elasticite_fuel_perso[!is.na(s$Elasticite_fuel_perso)]
label(s$Elasticite_partielle_perso) <<- "Elasticite_partielle_perso: Élasticité-prix des dépenses de fioul et gaz OU de carburants du ménage, calculée en prenant la valeur moyenne des intervalles proposées"
s$variante_taxe_info <<- "p"
s$variante_taxe_info[s$gagnant_feedback_categorie!=""] <<- "f"
label(s$variante_taxe_info) <<- "variante_taxe_info: (f/p) Variante aléatoire entre f: feedback (=simulation, 2/3) et p: progressivité (1/3), dans l'information donnée sur la taxe compensée avant de demander à nouveau le gain et l'approbation, ainsi que les bénéfices et problèmes"
for (v in c('CC', 'sante', 'circulation', 'revenu', 'pauvres', 'independance', 'enjeu', 'aucun', 'autre_choix', 'autre')) {
s[[paste('benefices_', v, sep="")]] <<- s[paste('benefices_', v, '_p', sep="")][[1]]
s[[paste('benefices_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('benefices_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('benefices_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('benefices_', v, '_f', sep="")][[1]]))
}
for (v in c('inefficace', 'alternatives', 'ruraux', 'revenu', 'pauvres', 'economie', 'pretexte', 'aucun', 'autre_choix', 'autre')) {
s[[paste('problemes_', v, sep="")]] <<- s[paste('problemes_', v, '_p', sep="")][[1]]
s[[paste('problemes_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('problemes_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('problemes_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('problemes_', v, '_f', sep="")][[1]]))
}
s$gagnant_info_categorie <<- s$gagnant_feedback_categorie
s$gagnant_info_categorie[!is.na(s$gagnant_progressif_categorie)] <<- s$gagnant_progressif_categorie[!is.na(s$gagnant_progressif_categorie)]
label(s$gagnant_info_categorie) <<- "gagnant_info_categorie: après info simule_gagnant et/ou progressivité: Ménage Gagnant/Non affecté/Perdant par hausse taxe carbone redistribuée à tous (+110€/an /adulte, +13/15% gaz/fioul, +0.11/13 €/L diesel/essence)"
s$taxe_info_approbation <<- s$taxe_feedback_approbation
s$taxe_info_approbation[!is.na(s$taxe_progressif_approbation)] <<- s$taxe_progressif_approbation[!is.na(s$taxe_progressif_approbation)]
annotation(s$taxe_info_approbation) <<- "taxe_info_approbation: après info simule_gagnant et/ou progressivité - Approbation d'une hausse de la taxe carbone compensée (+110€/an /adulte, +13/15% gaz/fioul, +0.11/13 €/L diesel/essence)"
s$cible[s$cible20==1] <<- '20'
s$cible[s$cible30==1] <<- '30'
s$cible[s$cible40==1] <<- '40'
s$cible[s$cible50==1] <<- '50'
s$cible <<- relevel(as.factor(s$cible), '50')
label(s$cible) <<- "cible: Ciblage du recyclage de la hausse de la taxe carbone, attribué en fonction du revenu du répondant et de son ménage (20/30/40/50% les plus modestes)"
# TODO: manage to use tidyverse without erasing observations
# s <<- merge(s, s %>% gather(key = temp, value = gain_cible, c(gagnant__20_categorie, gagnant_20_30_categorie, gagnant_30_40_categorie, gagnant_40_50_categorie, gagnant_50_70_categorie, gagnant_70__categorie)) %>% filter(gain_cible != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$gain_cible) <<- "gain_cible: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
# s <<- merge(s, s %>% gather(key = temp, value = taxe_cible_approbation, c(taxe__20_approbation, taxe_20_30_approbation, taxe_30_40_approbation, taxe_40_50_approbation, taxe_50_70_approbation, taxe_70__approbation)) %>% filter(taxe_cible_approbation != "") %>% select(-temp), sort=FALSE)
# label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
#
#   # s <<- s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp) # erases km_0, km_1, km_2
# s <<- merge(s, s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
#
# s <<- merge(s, s %>% gather(key = temp, value = conso, c(conso_1, conso_2)) %>% filter(conso != "") %>% select(-temp), sort=FALSE)
# label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$gagnant_cible_categorie[!is.na(s$gagnant__20_categorie)] <<- s$gagnant__20_categorie[!is.na(s$gagnant__20_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_20_30_categorie)] <<- s$gagnant_20_30_categorie[!is.na(s$gagnant_20_30_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_30_40_categorie)] <<- s$gagnant_30_40_categorie[!is.na(s$gagnant_30_40_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_40_50_categorie)] <<- s$gagnant_40_50_categorie[!is.na(s$gagnant_40_50_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_50_70_categorie)] <<- s$gagnant_50_70_categorie[!is.na(s$gagnant_50_70_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_70__categorie)] <<- s$gagnant_70__categorie[!is.na(s$gagnant_70__categorie)]
label(s$gagnant_cible_categorie) <<- "gagnant_cible_categorie: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$taxe_cible_approbation[!is.na(s$taxe__20_approbation)] <<- s$taxe__20_approbation[!is.na(s$taxe__20_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_20_30_approbation)] <<- s$taxe_20_30_approbation[!is.na(s$taxe_20_30_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_30_40_approbation)] <<- s$taxe_30_40_approbation[!is.na(s$taxe_30_40_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_40_50_approbation)] <<- s$taxe_40_50_approbation[!is.na(s$taxe_40_50_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_50_70_approbation)] <<- s$taxe_50_70_approbation[!is.na(s$taxe_50_70_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_70__approbation)] <<- s$taxe_70__approbation[!is.na(s$taxe_70__approbation)]
label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$categorie_cible[!is.na(s$taxe__20_approbation)] <<- '_20'
s$categorie_cible[!is.na(s$taxe_20_30_approbation)] <<- '20_30'
s$categorie_cible[!is.na(s$taxe_30_40_approbation)] <<- '30_40'
s$categorie_cible[!is.na(s$taxe_40_50_approbation)] <<- '40_50'
s$categorie_cible[!is.na(s$taxe_50_70_approbation)] <<- '50_70'
s$categorie_cible[!is.na(s$taxe_70__approbation)] <<- '70_'
label(s$categorie_cible) <<- "categorie_cible: Catégorie de revenu du répondant (et de son ménage) taxe à recyclage ciblé - Catégories: percentile <20/20-30/30-40/40-50/50-70/>70, sachant que revenu_conjoint détermine la catégorie quand percentile de revenu > 70 (780/1140/1430/1670/2220)"
s$traite_cible <<- (s$cible==20)*(s$revenu<780) + (s$cible==30)*(s$revenu<1140) + (s$cible==40)*(s$revenu<1430) + (s$cible==50)*(s$revenu<1670)
s$traite_cible_conjoint <<- (s$nb_adultes > 1)* ((s$cible==20)*(s$revenu_conjoint<780) + (s$cible==30)*(s$revenu_conjoint<1140) + (s$cible==40)*(s$revenu_conjoint<1430) + (s$cible==50)*(s$revenu_conjoint<1670))
label(s$traite_cible) <<- "traite_cible: Indicatrice de transfert reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$traite_cible_conjoint) <<- "traite_cible_conjoint: Indicatrice de transfert reçu par le conjoint du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
s$versement_cible <<- (s$traite_cible + s$traite_cible_conjoint) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
s$versement_cible_sans_conjoint <<- (s$traite_cible) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
label(s$versement_cible) <<- "versement_cible: Versement annuel reçu par le ménage du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/parent pour cible à 20/30/40/50"
label(s$versement_cible_sans_conjoint) <<- "versement_cible_sans_conjoint: Versement annuel reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
s$versement <<- 110 * s$nb_adultes
label(s$versement) <<- "versement: Versement annuel reçu par le ménage suite à une hausse de la taxe carbone compensée (110 * nb_adultes)"
s$km[!is.na(s$km_0)] <<- s$km_0[!is.na(s$km_0)]
s$km[!is.na(s$km_1)] <<- s$km_1[!is.na(s$km_1)]
s$km[!is.na(s$km_2)] <<- s$km_2[!is.na(s$km_2)]
label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
s$conso[!is.na(s$conso_1)] <<- s$conso_1[!is.na(s$conso_1)]
s$conso[!is.na(s$conso_2)] <<- s$conso_2[!is.na(s$conso_2)]
s$conso[is.na(s$conso)] <<- (6.39 + 7.31) / 2
label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$gaz <<- grepl('gaz', s$chauffage, ignore.case = T)
s$fioul <<- grepl('fioul', s$chauffage, ignore.case = T)
s$hausse_chauffage <<- -55.507189 + s$gaz * 124.578484 + s$fioul * 221.145441 + s$surface * 0.652174
s$hausse_diesel[s$nb_vehicules == 0] <<- (0.5*(6.39/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
s$hausse_diesel[s$nb_vehicules == 1] <<- ((s$fuel_1=='Diesel') * (s$conso/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 1]
s$hausse_diesel[s$nb_vehicules == 2] <<- (((s$fuel_2_1=='Diesel')*2/3 + (s$fuel_2_2=='Diesel')/3) * (s$conso/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 2]
s$hausse_essence[s$nb_vehicules == 0] <<- (0.5*(7.31/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
s$hausse_essence[s$nb_vehicules == 1] <<- ((s$fuel_1!='Diesel') * (s$conso/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 1]
s$hausse_essence[s$nb_vehicules == 2] <<- (((s$fuel_2_1!='Diesel')*2/3 + (s$fuel_2_2!='Diesel')/3) * (s$conso/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 2]
s$hausse_carburants <<- s$hausse_diesel + s$hausse_essence
label(s$hausse_carburants) <<- "hausse_carburant: Hausse des dépenses de carburants simulées pour le ménage, suite à la taxe (élasticité de 0.4) (hausse_diesel + hausse_essence)"
s$hausse_depenses <<- s$hausse_carburants + s$hausse_chauffage
s$diesel <<- (!is.na(s$fuel_1) & (s$fuel_1=='Diesel')) | (!is.na(s$fuel_2_2) & ((s$fuel_2_1=='Diesel') | (s$fuel_2_2=='Diesel')))
s$essence <<- (!is.na(s$fuel_1) & (s$fuel_1=='Essence')) | (!is.na(s$fuel_2_2) & ((s$fuel_2_1=='Essence') | (s$fuel_2_2=='Essence')))
label(s$diesel) <<- "diesel: Indicatrice de la possession d'un véhicule diesel par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Diesel')"
label(s$essence) <<- "essence: Indicatrice de la possession d'un véhicule à essence par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Essence')"
s$simule_gain <<- 16.1 + s$nb_adultes * 110 - s$hausse_depenses
s$simule_gain_repondant <<- 16.1 + 110 - s$hausse_depenses
label(s$simule_gain) <<- "simule_gain: Gain net annuel simulé pour le ménage du répondant suite à une hausse de taxe carbone compensée: 16.1 + nb_adultes * 110 - hausse_depenses"
label(s$simule_gain_repondant) <<- "simule_gain_repondant: Gain net annuel simulé pour le répondant (sans tenir compte du potentiel versement reçu par les autres adultes du ménage) suite à une hausse de taxe carbone compensée: 116.1 - hausse_depenses"
s$simule_gain_cible <<- s$versement_cible - s$hausse_depenses
s$simule_gain_cible_sans_conjoint <<- s$versement_cible - s$hausse_depenses
label(s$simule_gain_cible) <<- "simule_gain_cible: Gain net simulé pour le ménage du répondant suite à une hausse de taxe carbone avec compensation ciblée: versement_cible - hausse_depenses"
label(s$simule_gain_cible_sans_conjoint) <<- "simule_gain_cible_sans_conjoint: Gain net simulé pour le répondant (sans tenir compte du potentiel versement reçu par son conjoint) suite à une hausse de taxe carbone avec compensation ciblée: versement_cible - hausse_depenses"
s$simule_gagnant[is.na(s$simule_gagnant)] <<- 1*(s$simule_gain[is.na(s$simule_gagnant)] > 0)
s$progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- s$progressivite_feedback_sans_info[!is.na(s$progressivite_feedback_sans_info)]
s$progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- s$progressivite_feedback_avec_info[!is.na(s$progressivite_feedback_avec_info)]
s$progressivite[!is.na(s$progressivite_progressif)] <<- s$progressivite_progressif[!is.na(s$progressivite_progressif)]
label(s$progressivite) <<- "progressivite: ~ Une hausse de la taxe carbone compensée avantagerait les plus modestes (réunion des trois variante_progressivite: prog/fb_info/fb_no_info où seule fb_no_info est sans information préalable sur la progressivité) - Q206-208"
s$variante_progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- "fb_no_info"
s$variante_progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- "fb_info"
s$variante_progressivite[s$variante_taxe_info=='p'] <<- "prog" # !is.na(s$progressivite_progressif) |
s$variante_progressivite[s$variante_taxe_info=='f' & s$apres_modifs==FALSE] <<- 'fb_no_info'
label(s$variante_progressivite) <<- "variante_progressivite: prog/fb_info/fb_no_info Variante aléatoire du bloc de questions où figure 'progressivite'. prog: info sur la progressivité / fb: feedback sur le statut gagnant/perdant simulé, info/no_info: avec/sans info sur la progressivité de la mesure" # , seulement pour apres_modifs=T
s$info_progressivite <<- FALSE
s$info_progressivite[s$variante_taxe_info=='p' | s$variante_progressivite=='fb_info'] <<- T
label(s$info_progressivite) <<- "info_progressivite: Indicatrice qu'a été montrée l'information que la hausse de la taxe carbone compensée avantagerait les plus modestes"
s$variante_monetaire[is.na(s$variante_monetaire)] <<- 0 # concerne seulement une observation. Évite des complications inutiles.
s$age_18_24 <<- 1*(s$age == '18 à 24 ans')
s$age_25_34 <<- 1*(s$age == '25 à 34 ans')
s$age_35_49 <<- 1*(s$age == '35 à 49 ans')
s$age_50_64 <<- 1*(s$age == '50 à 64 ans')
s$age_65_plus <<- 1*(s$age == '65 ans ou plus')
s$score_ges <<- 1 * (s$ges_CO2 == TRUE) + 1*(s$ges_CH4 == TRUE) + 1*(s$ges_O2 == FALSE) + 1*(s$ges_pm == FALSE)
label(s$score_ges) <<- "score_ges: Somme des bonnes réponses au questionnaire gaz à effet de serre (ges_O2/CH4/pm/CO2)"
s$score_climate_call <<- 1*(s$ges_avion == TRUE) + 1*(s$ges_boeuf == TRUE) + 1*(s$ges_nucleaire == FALSE)
label(s$score_climate_call) <<- "score_climate_call: Somme des bonnes réponses au questionnaire Climate Call (avion-train / boeuf-pates / nucleaire-eolien) ges_avion/boeuf/nucleaire"
s$duree_info[s$info_CC==1 & s$info_PM==1] <<- s$duree_info_CC_PM[s$info_CC==1 & s$info_PM==1]
s$duree_info[s$info_CC==0 & s$info_PM==1] <<- s$duree_info_PM[s$info_CC==0 & s$info_PM==1]
s$duree_info[s$info_CC==1 & s$info_PM==0] <<- s$duree_info_CC[s$info_CC==1 & s$info_PM==0]
s$duree_info[s$info_CC==0 & s$info_PM==0] <<- s$duree_no_info[s$info_CC==0 & s$info_PM==0]
label(s$duree_info) <<- "duree_info: Temps de soumission - Ancrage (information procurée ou non au début sur changement climatique ou particules fines) (duree_info_CC/PM/CC_PM/no_info)"
for (v in c("autonomie", "priorite", "etats", "global", "trop")) {
s[[paste("aide_non", v, sep="_")]] <<- NA
s[[paste("aide_non", v, sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==T & s$aide_2p==T] <<- s[[paste("aide_non", v, "i", sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==T & s$aide_2p==T]
s[[paste("aide_non", v, sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==FALSE & s$aide_2p==T] <<- s[[paste("aide_non", v, "ni", sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==FALSE & s$aide_2p==T]
label(s[[paste("aide_non", v, sep="_")]]) <<- Label(s[[paste("aide_non", v, "i", sep="_")]])
}
categories_depenses <- c("sante", "retraites", "protection", "education", "recherche", "loisirs", "infrastructures", "justice", "armee", "securite", "aide")
# for (i in 0:10) s[[paste('dep', i, 'en_position', sep='_')]] <<- NA
for (i in 0:10) {
s[[paste('dep', i, 'en_position', sep='_')]] <<- (s$en_position_1==i) + 2*(s$en_position_2==i)  + 3*(s$en_position_3==i)  + 4*(s$en_position_4==i)  + 5*(s$en_position_5==i)  + 6*(s$en_position_6==i)  + 7*(s$en_position_7==i)  + 8*(s$en_position_8==i)  + 9*(s$en_position_9==i)  + 10*(s$en_position_10==i)
label(s[[paste('dep', i, 'en_position', sep='_')]]) <<- paste(paste('dep', i, 'en_position', sep='_'), ": Position à laquelle est affichée la catégorie de dépense ", i, "(", categories_depenses[i], ") (cf. en_position_i)", sep="")
# for (o in 1:nrow(s)) {
#   j <- s[[paste('en_position', i, sep='_')]][o]
#   if (!is.na(j)) s[[paste('dep', j, 'en_position', sep='_')]][o] <<- i
#   s[[paste('dep', j, 'en_position', sep='_')]][!is.na(s$en_position_0)] <-
# }
}
s <<- s[, -c(78:97, 100:119, 294:303)]
# TODO: qualité, connaissances CC, opinions CC
}
prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=T) # TODO: let only_finished = FALSE
sa <- s
# prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE)
# se <- s
# prepare_s(exclude_screened=FALSE)
# sp <- s
prepare_s()
write.csv(s, "survey_prepared.csv")
summary(lm(taxe_approbation=='Oui' ~ compris_depenses, data=s))
summary(lm(taxe_approbation=='Oui' ~ Compris_depenses, data=s))
summary(lm(taxe_approbation=='Oui' ~ Cause_CC, data=s))
s$Compris_depenses[is.na(s$Compris_depenses)] <- "NA"
summary(lm(taxe_approbation=='Oui' ~ Schiste_CC, data=s))
summary(lm(taxe_approbation=='Oui' ~ Chauffage, data=s))
variables_taxe_gagnant <- c("taxe_gagnant_personne", "taxe_gagnant_pauvres", "taxe_gagnant_moyennes", "taxe_gagnant_riches", "taxe_gagnant_tous", "taxe_gagnant_citadins", "taxe_gagnant_certains", "taxe_gagnant_NSP")
variables_taxe_perdant <- c("taxe_perdant_personne", "taxe_perdant_pauvres", "taxe_perdant_moyennes", "taxe_perdant_riches", "taxe_perdant_tous", "taxe_perdant_ruraux", "taxe_perdant_certains", "taxe_perdant_NSP")
variables_approbation <- c("taxe_approbation", "taxe_info_approbation", "taxe_cible_approbation") # "taxe_feedback_approbation", "taxe_progressif_approbation",
variables_qualite <- c("duree", "duree_info", "duree_champ_libre") # champ_libre != "", exclu, "test_qualite"
variables_aleatoires <- c("info_CC", "info_PM", "variante_monetaire", "apres_modifs", "variante_taxe_info", "variante_progressivite",
"info_progressivite", "cible", "categorie_cible")
variables_demo <- c("sexe", "age", "statut_emploi", "csp", "region", "diplome", "taille_menage", "revenu", "rev_tot", "nb_14_et_plus", "nb_adultes",
"fume", "actualite", "taille_agglo", "uc", "niveau_vie", "age_18_24", "age_25_34", "age_35_49", "age_50_64", "age_65_plus", "versement_cible") # weight
variables_energie <- c("surface", "Mode_chauffage", "Chauffage", "km", "conso", "diesel", "essence", "nb_vehicules", "gaz", "fioul", "simule_gagnant", # hausse_carburants
"hausse_chauffage", "hausse_diesel", "hausse_essence", "hausse_depenses", "simule_gain", "simule_gain_cible",
"simule_gain_cible_sans_conjoint", "simule_gain_repondant")
variables_transport <- c("Transports_distance", "transports_frequence", "transports_avis", "transports_travail", "transports_courses", "transports_loisirs",
"Transports_travail_commun", "Transports_travail_actif") # TODO: missing values distance, transports_travail_commun/actif
variables_politiques <- c("interet_politique", "conservateur", "liberal", "humaniste", "patriote", "apolitique", "ecologiste", "Gauche_droite")
variables_gilets_jaunes <- c("gilets_jaunes_dedans", "gilets_jaunes_soutien", "gilets_jaunes_compris", "gilets_jaunes_oppose", "gilets_jaunes_NSP", "gilets_jaunes")
variables_gains_subjectifs <- c("perte_relative_tva", "perte_relative_partielle", "gagnant_partielle_categorie", "gain_partielle", "gagnant_categorie", "gain",
"gagnant_info_categorie", "gagnant_cible_categorie", "gain_echelle", "gain_partielle_echelle") # "gagnant_feedback_categorie", "gagnant_progressif_categorie",
variables_Elasticite <- c("Elasticite_partielle", "Elasticite_partielle_perso") # "Elasticite_fuel", "Elasticite_fuel_perso", "Elasticite_chauffage", "Elasticite_chauffage_perso",
variables_elasticite <- c("elasticite_partielle", "elasticite_partielle_perso") # "elasticite_fuel", "elasticite_fuel_perso", "elasticite_chauffage", "elasticite_chauffage_perso",
variables_taxe_croyances <- c("taxe_efficace", variables_taxe_gagnant, variables_taxe_perdant, "progressivite") #  "progressivite_feedback_avec_info", "progressivite_feedback_sans_info", "progressivite_progressif"
variables_benefices <- names(s)[which(grepl("benefice", names(s)))[which(grepl("benefice", names(s)))>300]]
variables_problemes <- names(s)[which(grepl("problemes", names(s)))[which(grepl("problemes", names(s)))>300]]
variables_taxe_condition <- c("si_pauvres", "si_compensee", "si_contraints", "si_baisse_cotsoc", "si_baisse_tva", "si_baisse_deficit", "si_renovation", "si_renouvelables", "si_transports")
variables_politiques_environnementales <- c("taxe_kerosene", "taxe_viande", "normes_isolation", "normes_vehicules", "controle_technique", "interdiction_polluants",
"peages_urbains", "fonds_mondial") # "rattrapage_diesel"
variables_connaissances_CC <- c("Cause_CC", "ges_CO2", "ges_CH4", "ges_O2", "ges_pm", "ges_boeuf", "ges_nucleaire", "ges_avion", "region_CC",
"emission_cible", "score_ges", "score_climate_call")
variables_avis_CC <- c("parle_CC", "effets_CC", "generation_CC_1960", "generation_CC_1990", "generation_CC_2020", "generation_CC_2050", "generation_CC_aucune",
"responsable_CC_chacun", "responsable_CC_riches", "responsable_CC_govts", "responsable_CC_etranger", "responsable_CC_passe",
"responsable_CC_nature", "enfant_CC", "enfant_CC_pour_lui", "enfant_CC_pour_CC") # TODO: generation_min generation_max
variables_comportement_CC <- c("mode_vie_ecolo", "changer_si_politiques", "changer_si_moyens", "changer_si_tous", "changer_non_riches", "changer_non_interet", "changer_non_negation", "changer_deja_fait", "changer_essaie")
variables_schiste <- c("schiste_approbation", "schiste_avantage", "Schiste_CC", "schiste_traite")
variables_transferts_inter <- c("transferts_inter", "aide_2p", "transferts_inter_info", "aide_non_autonomie", "aide_non_priorite", "aide_non_etats",
"aide_non_global", "aide_non_trop", "aide_non_autonomie")
variables_depenses_publiques <- c("depenses_confiant", "Compris_depenses", "duree_depenses", "nombre_clics_depenses", "depense_totale", # budget_eq, regle_or, variations, dep_i_en_position
"depense_sante", "depense_retraites", "depense_protection", "depense_education", "depense_recherche", "depense_loisirs", "depense_infrastructures", "depense_justice", "depense_armee", "depense_securite", "depense_aide", "recette_totale",
"en_position_0", "en_position_1", "en_position_2", "en_position_3", "en_position_4", "en_position_5", "en_position_6", "en_position_7", "en_position_8", "en_position_9", "en_position_10")
variables_toutes <- c(variables_approbation, variables_qualite, variables_aleatoires, variables_demo, variables_energie, variables_transport, variables_politiques,
variables_gilets_jaunes, variables_gains_subjectifs, variables_Elasticite, variables_elasticite, variables_taxe_croyances, variables_benefices,
variables_problemes, variables_taxe_condition, variables_politiques_environnementales, "rattrapage_diesel", variables_connaissances_CC, variables_avis_CC,
variables_comportement_CC, variables_schiste, variables_depenses_publiques)
# TODO: transports_frequence transports_avis parle_CC effets_CC enfant_CC
variables_wo_missing <- variables_toutes
for (v in variables_toutes) { # display and remove variables with missing values
# na_v <- length(which(is.na(s[[v]]) | is.nan(s[[v]]) | is.infinite(s[[v]])))
if ("character.item" %in% class(s[[v]])) {
print(v)
summary(lm(s$taxe_approbation=='Oui' ~ s[[v]]))
}
if (length(intersect(c("labelled", "character.item", "double.item"), class(s[[v]])))) na_v <- length(which(is.na(s[[v]])))
else na_v <- length(which(is.missing(s[[v]])))
if (na_v>0) {
# print(paste(v, na_v))
variables_wo_missing <- variables_wo_missing[variables_wo_missing!=v] }
}
x <- model.matrix(as.formula(paste("(taxe_approbation!='Non') ~", paste(variables_wo_missing, collapse=' + '))),  data=s)
y <- ifelse(s$taxe_approbation=="Oui", 1, 0)
# cexplore other type.measure options
# fit <- glmnet(x, y, alpha=1, family="binomial", weights = s$weight)
lasso_dev <- cv.glmnet(x, y, alpha=1, family="binomial", weights = s$weight) # run parallel computing: parallel = T;  residual deviance: 1705, AIC: 1834
# fit <- glmnet(x, y, alpha=1, family="binomial", weights = s$weight)
lasso_dev <- cv.glmnet(x, y, alpha=1, family="binomial", weights = s$weight) # run parallel computing: parallel = T;  residual deviance: 1705, AIC: 1834
lasso <- lasso_dev
plot(lasso)
min(lasso$cvm) # min deviance. alpha = 1: 0.3399301 / 0.5: 0.3393227 / 0: 0.3456004 ; alpha = 1 and class: 0.064 / mae: 0.18
coefs_lasso <- coef(lasso, s="lambda.1se") # lambda.1se contains less variables than lambda.min
coefs_lasso <- coef(lasso, s="lambda.min")
data.frame(name = coefs_lasso@Dimnames[[1]][coefs_lasso@i + 1], coefficient = coefs_lasso@x) # doesn't work for multinomial
selected_variables <- coefs_lasso@i - 1
selected_variables <- selected_variables[selected_variables > 0 & selected_variables <= length(variables_wo_missing)]
selected_variables <- variables_wo_missing[selected_variables] # length(selected_variables) (.min) when alpha = 1: 58 / 0.5: 62 / 0: 142 (all) ; alpha = 1 and class: 67 / mae: 97
selected_variables[duplicated(selected_variables)]
summary(glm(as.formula(paste("(taxe_approbation!='Non') ~", paste(selected_variables, collapse=' + '))), binomial, data=s, weights=s$weight))
lasso_dev
selected_variables
coefs_lasso <- coef(lasso, s="lambda.1se") # lambda.1se contains less variables than lambda.min
selected_variables <- coefs_lasso@i - 1
data.frame
selected_variables
coefs_lasso <- coef(lasso, s="lambda.1se") # lambda.1se contains less variables than lambda.min
selected_variables <- coefs_lasso@i - 1
selected_variables
coefs_lasso <- coef(lasso, s="lambda.min")
selected_variables <- coefs_lasso@i - 1
selected_variables
variables_wo_missing <- setdiff(variables_toutes, variables_approbation)
variables_toutes_sauf_approbation <- setdiff(variables_toutes, variables_approbation)
variables_wo_missing <- variables_toutes_sauf_approbation
for (v in variables_toutes_sauf_approbation) { # display and remove variables with missing values
# na_v <- length(which(is.na(s[[v]]) | is.nan(s[[v]]) | is.infinite(s[[v]])))
if (length(intersect(c("labelled", "character.item", "double.item"), class(s[[v]])))) na_v <- length(which(is.na(s[[v]])))
else na_v <- length(which(is.missing(s[[v]])))
if (na_v>0) {
# print(paste(v, na_v))
variables_wo_missing <- variables_wo_missing[variables_wo_missing!=v] }
}
x <- model.matrix(as.formula(paste("(taxe_approbation!='Non') ~", paste(variables_wo_missing, collapse=' + '))),  data=s)
y <- ifelse(s$taxe_approbation=="Oui", 1, 0)
# cexplore other type.measure options
# fit <- glmnet(x, y, alpha=1, family="binomial", weights = s$weight)
lasso_dev <- cv.glmnet(x, y, alpha=1, family="binomial", weights = s$weight) # run parallel computing: parallel = T;  residual deviance: 1705, AIC: 1834
lasso <- lasso_dev
plot(lasso)
min(lasso$cvm) # min deviance. alpha = 1: 0.3399301 / 0.5: 0.3393227 / 0: 0.3456004 ; alpha = 1 and class: 0.064 / mae: 0.18
coefs_lasso <- coef(lasso, s="lambda.1se") # lambda.1se contains less variables than lambda.min
coefs_lasso <- coef(lasso, s="lambda.min")
data.frame(name = coefs_lasso@Dimnames[[1]][coefs_lasso@i + 1], coefficient = coefs_lasso@x) # doesn't work for multinomial
selected_variables <- coefs_lasso@i - 1
selected_variables <- selected_variables[selected_variables > 0 & selected_variables <= length(variables_wo_missing)]
selected_variables <- variables_wo_missing[selected_variables] # length(selected_variables) (.min) when alpha = 1: 58 / 0.5: 62 / 0: 142 (all) ; alpha = 1 and class: 67 / mae: 97
selected_variables[duplicated(selected_variables)]
summary(glm(as.formula(paste("(taxe_approbation!='Non') ~", paste(selected_variables, collapse=' + '))), binomial, data=s, weights=s$weight))
for (v in variables_wo_missing) if (length(which(is.na(s[[v]])))>0) print(paste(v, length(which(is.na(s[[v]])))))
for (v in variables_wo_missing) if (length(which(is.missing(s[[v]])))>0) print(paste(v, length(which(is.na(s[[v]])))))
for (v in variables_wo_missing) if (!("labelled" %in% class(s[[v]])) &  length(which(is.missing(s[[v]])))>0) print(paste(v, length(which(is.na(s[[v]])))))
for (v in variables_wo_missing) if (!("labelled" %in% class(s[[v]])) &  length(which(is.missing(s[[v]])))>0) print(paste(v, length(which(is.missing(s[[v]])))))
for (v in variables_wo_missing) if (!("labelled" %in% class(s[[v]]))) if (length(which(is.missing(s[[v]])))>0)) print(paste(v, length(which(is.missing(s[[v]])))))
for (v in variables_wo_missing) if (!("labelled" %in% class(s[[v]]))) if (length(which(is.missing(s[[v]])))>0) print(paste(v, length(which(is.missing(s[[v]])))))
summary(lm(taxe_approbation=='Oui' ~ effets_CC, data=s))
for (v in variables_wo_missing) if (!("labelled" %in% class(s[[v]]))) if (length(which(is.missing(s[[v]])))>0) print(paste(v, class(s[[v]]), length(which(is.missing(s[[v]])))))
summary(lm(taxe_approbation=='Oui' ~ enfant_CC, data=s))
summary(lm(taxe_approbation=='Oui' ~ paste(variables_wo_missing, collapse=' + '), data=s))
summary(lm(paste("(taxe_approbation!='Non') ~", paste(variables_wo_missing, collapse=' + '))), data=s))
summary(lm(as.formula(paste("(taxe_approbation!='Non') ~", paste(variables_wo_missing, collapse=' + '))), data=s))
package("AER")
ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight)
summary(ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight))
ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight, x = TRUE)
ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE)
summary(lm(taxe_approbation=='Oui' ~ enfant_CC, data=s), diagnostics=TRUE)
summary(lm(taxe_approbation=='Oui' ~ enfant_CC, data=s))
summary(lm(taxe_approbation=='Oui' ~ enfant_CC, data=s), diagnostics=FALSE)
summary(ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE))
test <- ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE)
summary(test)
test
test <- ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | simule_gagnant,  data=s, weights = s$weight, x = TRUE)
test <- ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | . - (gagnant_feedback_categorie == 'Gagnant') + simule_gagnant,  data=s, weights = s$weight, x = TRUE)
summary(test)
test <- ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation + simule_gain + I(simule_gain^2) | . - (gagnant_feedback_categorie == 'Gagnant') + simule_gagnant,  data=s, weights = s$weight)
summary(test)
sf <- subset(s, s$variante_taxe_info=='f') # TODO: autre méthode, package?
# 19%***
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +49%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight))
package("ivmodel")
ivmodel((taxe_feedback_approbation == 'Oui'), taxe_approbation + simule_gain + I(simule_gain^2), (gagnant_feedback_categorie == 'Gagnant'),  data=s, weights = s$weight)
summary(test)
test <- ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE)
summary(test)
summary(ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE))
summary(ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant + taxe_approbation +
simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE, y=TRUE))
summary(ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant + taxe_approbation +
simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE, y=TRUE, model=TRUE))
ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant + taxe_approbation +
simule_gain + I(simule_gain^2),  data=s, weights = s$weight, x = TRUE, y=TRUE, model=TRUE)
summary(ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant,  data=s, weights = s$weight, x = TRUE, y=TRUE, model=TRUE))
ivreg((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant,  data=s, weights = s$weight, x = TRUE, y=TRUE, model=TRUE)
summary(ivmodelFormula((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant,  data=s, weights = s$weight, x = TRUE, y=TRUE, model=TRUE))
summary(ivmodelFormula((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant,  data=s))
ivmodelFormula((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant,  data=s)
summary(ivreg.fit((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') | simule_gagnant,  data=s))
sf <- subset(s, s$variante_taxe_info=='f')
# 19%***
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
# 19%***
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
# 19%***
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight, na.action="na.exclude")
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +49%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight))
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +49%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight))
croyances_1 <- lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_categorie!='Perdant')) ~ simule_gagnant, data=s, weights = s$weight, na.action="na.exclude")
summary(croyances_1)
Dgagnant.hat <- fitted.values(croyances_1)
# apprendre qu'on est (simulé) gagnant augmente l'acceptation de 9%***
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ simule_gagnant, data=s, weights = s$weight)) # TODO: rajouter contrôles
# comprendre qu'on est non perdant augmente l'approbation de 41%*** = 9/0.23 (0.407540~0.09224/0.22634)
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=s, weights = s$weight))
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight, na.action="na.exclude")
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +49%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight))
# +32%***
tsls_rdd_feedback_2 <- lm(gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight, na.action="na.exclude")
summary(tsls_rdd_feedback_2)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_2)
# +47%***
summary(lm((taxe_feedback_approbation != 'Non') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight))
rm(sf)
rm(agglos)
rm(d)
rm(s_0_70, s_perte, ss, st)
rm(temp1, temp2, test)
View(anova)
source("packages_functions.R")
s$update_correct <- ((s$simule_gagnant==1 & s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant')
+ (s$simule_gagnant==0 & s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant')
- (s$simule_gagnant==1 & s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant')
- (s$simule_gagnant==0 & s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant'))
label(s$update_correct) <- "update_correct: Différence entre l'indicatrice de ne pas se penser gagnant/perdant et le penser après feedback infirmant, moins la même après feedback confirmant"
s$update_correct_large <- ((s$simule_gagnant==1 & ((s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant') | (s$gagnant_feedback_categorie!='Perdant' & s$gagnant_categorie=='Perdant')))
+ (s$simule_gagnant==0 & ((s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant') | (s$gagnant_feedback_categorie!='Gagnant' & s$gagnant_categorie=='Gagnant')))
- (s$simule_gagnant==1 & ((s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant') | (s$gagnant_feedback_categorie!='Gagnant' & s$gagnant_categorie=='Gagnant')))
- (s$simule_gagnant==0 & ((s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant') | (s$gagnant_feedback_categorie!='Perdant' & s$gagnant_categorie=='Perdant'))))
label(s$update_correct_large) <- "update_correct_large: Différence entre faire un update dans la bonne direction quand le feedback y conduit et faire un update dans la mauvaise direction"
s$feedback_confirme <- (s$gagnant_categorie=='Gagnant' & s$simule_gagnant==1) | (s$gagnant_categorie=='Perdant' & s$simule_gagnant==0)
s$feedback_infirme <- (s$gagnant_categorie=='Perdant' & s$simule_gagnant==1) | (s$gagnant_categorie=='Gagnant' & s$simule_gagnant==0)
s$feedback_confirme_large <- s$feedback_confirme | (s$gagnant_categorie!='Perdant' & s$simule_gagnant==1) | (s$gagnant_categorie!='Gagnant' & s$simule_gagnant==0)
s$feedback_infirme_large <- s$feedback_infirme | (s$gagnant_categorie!='Perdant' & s$simule_gagnant==0) | (s$gagnant_categorie!='Gagnant' & s$simule_gagnant==1)
label(s$feedback_confirme) <- "feedback_confirme: Indicatrice de se penser et être simulé gagnant/perdant (gagnant_categorie, simule_gagnant)"
label(s$feedback_infirme) <- "feedback_infirme: Indicatrice de se penser gagnant et être simulé perdant, ou l'inverse (gagnant_categorie, simule_gagnant)"
label(s$feedback_confirme_large) <- "feedback_confirme_large: Indicatrice de se penser non perdant et être simulé gagnant, ou de se penser non gagnant et être simulé perdant (gagnant_categorie, simule_gagnant)"
label(s$feedback_infirme_large) <- "feedback_infirme_large: Indicatrice de se penser non gagnant et être simulé gagnant, ou de se penser non perdant et être simulé perdant (gagnant_categorie, simule_gagnant)"
proba_gagner <- 0.70
proba_perdre <- 0.30
probas <- c()
for (cru in c('Perdant', 'Gagnant')) {
probas[paste('cru', tolower(cru), sep='_')] <- length(which(s$gagnant_categorie==cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
probas[paste('cru_non', tolower(cru), sep='_')] <- length(which(s$gagnant_categorie!=cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
probas[paste('feedback_cru', tolower(cru), sep='_')] <- length(which(s$gagnant_feedback_categorie==cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
probas[paste('feedback_cru_non', tolower(cru), sep='_')] <- length(which(s$gagnant_feedback_categorie!=cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
for (sim in c(0, 1)) {
sim_nom <- 'perdant'
if (sim==1) sim_nom <- 'gagnant'
for (i in c('', 'non')) {
for (j in c('', 'non')) {
probas[gsub('__', '_', paste('simule', j, sim_nom, sep='_'))] <- (length(which((j=='non' | s$simule_gagnant==sim) & (j=='' | s$simule_gagnant!=sim) &
s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))) # TODO
probas[gsub('__', '_', paste('simule', i, sim_nom, 'quand_cru', j, tolower(cru), sep='_'))] <- (length(which(s$variante_taxe_info=='f' &
(i=='non' | s$gagnant_categorie==cru) & (j=='non' | s$simule_gagnant==sim) & (i=='' | s$gagnant_categorie!=cru) & (j=='' | s$simule_gagnant!=sim)))/
length(which(s$variante_taxe_info=='f' & (i=='non' | s$gagnant_categorie==cru) & (i=='' | s$gagnant_categorie!=cru))))
probas[gsub('__', '_', paste('cru', i, tolower(cru), 'quand_simule', j, sim_nom, sep='_'))] <- (length(which(s$variante_taxe_info=='f' &
(i=='non' | s$gagnant_categorie==cru) & (j=='non' | s$simule_gagnant==sim) & (i=='' | s$gagnant_categorie!=cru) & (j=='' | s$simule_gagnant!=sim)))/
length(which(s$variante_taxe_info=='f' & (j=='non' | s$simule_gagnant==sim) & (j=='' | s$simule_gagnant!=sim))))
probas[gsub('__', '_', paste('feedback_cru', i, tolower(cru), 'quand_simule', j, sim_nom, sep='_'))] <- (length(which(s$variante_taxe_info=='f' &
(i=='non' | s$gagnant_feedback_categorie==cru) & (j=='non' | s$simule_gagnant==sim) & (i=='' | s$gagnant_feedback_categorie!=cru) & (j=='' | s$simule_gagnant!=sim)))/
length(which(s$variante_taxe_info=='f' & (j=='non' | s$simule_gagnant==sim) & (j=='' | s$simule_gagnant!=sim))))
}
}
}
}
proba_gagnant_coherente_Bayes <- (5/6)*probas['simule_gagnant']/probas['simule_gagnant_quand_cru_gagnant'] # 0.72
probas['cru_gagnant_quand_simule_gagnant']
probas['feedback_cru_gagnant']
probas['cru_gagnant']
probas_gagnant_coherente_Bayes
probas['feedback_cru_gagnant_quand_simule_gagnant']
probas['feedback_cru_gagnant_quand_simule_gagnant'] *probas['simule_gagnant']/probas['simule_gagnant_quand_cru_gagnant']) #
probas['feedback_cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_cru_gagnant'] #
probas['cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_cru_gagnant'] #
probas['feedback_cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_feedback_cru_gagnant']) #
probas['feedback_cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_feedback_cru_gagnant'] #
probas['simule_gagnant_quand_feedback_cru_gagnant']
for (cru in c('Perdant', 'Gagnant')) {
probas[paste('cru', tolower(cru), sep='_')] <- length(which(s$gagnant_categorie==cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
probas[paste('cru_non', tolower(cru), sep='_')] <- length(which(s$gagnant_categorie!=cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
probas[paste('feedback_cru', tolower(cru), sep='_')] <- length(which(s$gagnant_feedback_categorie==cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
probas[paste('feedback_cru_non', tolower(cru), sep='_')] <- length(which(s$gagnant_feedback_categorie!=cru & s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))
for (sim in c(0, 1)) {
sim_nom <- 'perdant'
if (sim==1) sim_nom <- 'gagnant'
for (i in c('', 'non')) {
for (j in c('', 'non')) {
probas[gsub('__', '_', paste('simule', j, sim_nom, sep='_'))] <- (length(which((j=='non' | s$simule_gagnant==sim) & (j=='' | s$simule_gagnant!=sim) &
s$variante_taxe_info=='f'))/length(which(s$variante_taxe_info=='f'))) # TODO
probas[gsub('__', '_', paste('simule', i, sim_nom, 'quand_cru', j, tolower(cru), sep='_'))] <- (length(which(s$variante_taxe_info=='f' &
(i=='non' | s$gagnant_categorie==cru) & (j=='non' | s$simule_gagnant==sim) & (i=='' | s$gagnant_categorie!=cru) & (j=='' | s$simule_gagnant!=sim)))/
length(which(s$variante_taxe_info=='f' & (i=='non' | s$gagnant_categorie==cru) & (i=='' | s$gagnant_categorie!=cru))))
probas[gsub('__', '_', paste('simule', i, sim_nom, 'quand_feedback_cru', j, tolower(cru), sep='_'))] <- (length(which(s$variante_taxe_info=='f' &
(i=='non' | s$gagnant_feedback_categorie==cru) & (j=='non' | s$simule_gagnant==sim) & (i=='' | s$gagnant_feedback_categorie!=cru) & (j=='' | s$simule_gagnant!=sim)))/
length(which(s$variante_taxe_info=='f' & (i=='non' | s$gagnant_feedback_categorie==cru) & (i=='' | s$gagnant_categorie!=cru))))
probas[gsub('__', '_', paste('cru', i, tolower(cru), 'quand_simule', j, sim_nom, sep='_'))] <- (length(which(s$variante_taxe_info=='f' &
(i=='non' | s$gagnant_categorie==cru) & (j=='non' | s$simule_gagnant==sim) & (i=='' | s$gagnant_categorie!=cru) & (j=='' | s$simule_gagnant!=sim)))/
length(which(s$variante_taxe_info=='f' & (j=='non' | s$simule_gagnant==sim) & (j=='' | s$simule_gagnant!=sim))))
probas[gsub('__', '_', paste('feedback_cru', i, tolower(cru), 'quand_simule', j, sim_nom, sep='_'))] <- (length(which(s$variante_taxe_info=='f' &
(i=='non' | s$gagnant_feedback_categorie==cru) & (j=='non' | s$simule_gagnant==sim) & (i=='' | s$gagnant_feedback_categorie!=cru) & (j=='' | s$simule_gagnant!=sim)))/
length(which(s$variante_taxe_info=='f' & (j=='non' | s$simule_gagnant==sim) & (j=='' | s$simule_gagnant!=sim))))
}
}
}
}
probas['feedback_cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_feedback_cru_gagnant'] #
probas['cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_feedback_cru_gagnant'] #
probas['feedback_cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_cru_gagnant'] #
probas['cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_cru_gagnant'] #
probas['feedback_cru_gagnant_quand_simule_gagnant']*probas['simule_gagnant']/probas['simule_gagnant_quand_feedback_cru_gagnant'] #
probas_gagnant_coherente_Bayes
probas['cru_gagnant']
probas['feedback_cru_gagnant']
probas['feedback_cru_gagnant_quand_simule_gagnant']
probas['cru_perdant']
probas['feedback_cru_perdant']
probas['feedback_cru_perdant_quand_simule_gagnant']
proba_perdant_coherente_Bayes
probas['cru_perdant_quand_simule_perdant']*probas['simule_perdant']/probas['simule_perdant_quand_cru_perdant']
probas['cru_perdant'] # 0.66
probas['cru_gagnant'] # 0.14
probas_gagnant_coherente_Bayes <- as.numeric((5/6)*probas['simule_gagnant']/probas['simule_gagnant_quand_cru_gagnant']) # 0.73
probas_gagnant_coherente_Bayes # 0.74
