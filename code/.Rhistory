package <- function(p) {
if (!is.element(p, installed.packages()[,1])) {
install.packages(p);
}
library(p, character.only = TRUE)
} # loads packages with automatical install if needed
setwd("/var/www/beliefs_climate_policies")
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep="\t")
communes_agglo <- read_excel("table-appartenance-geo-communes-18_V2.xls")
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls")
package('gdata')
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls")
View(communes_agglo)
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep=";")
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODEGEO")
View(communes_data)
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODEGEO")
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls")
communes_agglo <- communes_agglo[-1:5,]
communes_agglo <- communes_agglo[-c(1:5),]
View(communes_agglo)
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls")
colnames(communes_agglo) <- communes_agglo[5,]
communes_agglo <- communes_agglo[-c(1:5),]
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODGEO")
View(communes_agglo)
communes_agglo <- communes_agglo[,c('CODGEO', 'TUU2015')]
colnames(communes_agglo) <- c('Code.INSEE', 'taille_agglo')
communes_data <- communes_data[,c('Code.INSEE', 'Population')]
communes <- merge(communes_agglo, communes_data)
communes_PLM <- read.xls("table-appartenance-geo-communes-18_V2.xls", sheet=2, pattern="CODGEO")
View(communes_PLM)
communes_PLM <- communes_PLM[,c('CODGEO', 'TUU2015')]
colnames(communes_PLM) <- c('Code.INSEE', 'taille_agglo')
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data)
communes_temp <- merge(communes_agglo, communes_PLM, all=T)
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODGEO")
communes_PLM <- read.xls("table-appartenance-geo-communes-18_V2.xls", sheet=2, pattern="CODGEO")
communes_agglo <- communes_agglo[,c('CODGEO', 'TUU2015')]
communes_PLM <- communes_PLM[,c('CODGEO', 'TUU2015')]
colnames(communes_agglo) <- c('Code.INSEE', 'taille_agglo')
colnames(communes_PLM) <- c('Code.INSEE', 'taille_agglo')
communes_agglo$taille_agglo <- as.numeric(communes_agglo$taille_agglo)
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data)
communes_agglo$Code.INSEE <- as.numeric(communes_agglo$Code.INSEE)
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data)
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODGEO")
communes_PLM <- read.xls("table-appartenance-geo-communes-18_V2.xls", sheet=2, pattern="CODGEO")
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep=";")
communes_agglo <- communes_agglo[,c('CODGEO', 'TUU2015')]
communes_PLM <- communes_PLM[,c('CODGEO', 'TUU2015')]
colnames(communes_agglo) <- c('Code.INSEE', 'taille_agglo')
colnames(communes_PLM) <- c('Code.INSEE', 'taille_agglo')
communes_agglo$Code.INSEE <- as.character(communes_agglo$Code.INSEE)
communes_PLM$Code.INSEE <- as.character(communes_PLM$Code.INSEE)
communes_temp <- merge(communes_agglo, communes_PLM, all=T)
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data)
rm(communes_temp)
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep=";")
communes_data <- communes_data[,c('Code.INSEE', 'Population')]
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data)
sum(communes_data$Population)-sum(communes$Population)
View(communes_data)
View(communes)
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODGEO")
communes_PLM <- read.xls("table-appartenance-geo-communes-18_V2.xls", sheet=2, pattern="CODGEO")
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep=";")
communes_agglo <- communes_agglo[,c('CODGEO', 'TUU2015')]
communes_PLM <- communes_PLM[,c('CODGEO', 'TUU2015')]
colnames(communes_agglo) <- c('Code.INSEE', 'taille_agglo')
colnames(communes_PLM) <- c('Code.INSEE', 'taille_agglo')
communes_agglo$Code.INSEE <- as.character(communes_agglo$Code.INSEE)
communes_PLM$Code.INSEE <- as.character(communes_PLM$Code.INSEE)
communes_data <- communes_data[,c('Code.INSEE', 'Population')]
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data)
sum(communes_data$Population)-sum(communes$Population) # 742k
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODGEO")
communes_PLM <- read.xls("table-appartenance-geo-communes-18_V2.xls", sheet=2, pattern="CODGEO")
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep=";")
communes_agglo <- communes_agglo[,c('CODGEO', 'TUU2015')]
communes_PLM <- communes_PLM[,c('CODGEO', 'TUU2015')]
colnames(communes_agglo) <- c('Code.INSEE', 'taille_agglo')
colnames(communes_PLM) <- c('Code.INSEE', 'taille_agglo')
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data, all=T)
sum(communes_data$Population)-sum(communes$Population) # 742k
communes_agglo$Code.INSEE <- as.character(communes_agglo$Code.INSEE)
communes_PLM$Code.INSEE <- as.character(communes_PLM$Code.INSEE)
communes_data <- communes_data[,c('Code.INSEE', 'Population')]
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data, all=T)
sum(communes_data$Population, na.rm=T)-sum(communes$Population, na.rm=T) # 742k
sum(communes$Population[is.na(communes$taille_agglo)], na.rm=T) # 742k
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep=";")
communes_agglo <- read.xls("table-appartenance-geo-communes-18_V2.xls", pattern="CODGEO")
communes_PLM <- read.xls("table-appartenance-geo-communes-18_V2.xls", sheet=2, pattern="CODGEO")
communes_data <- read.csv("correspondance-code-insee-code-postal.csv", sep=";")
communes_agglo <- communes_agglo[,c('CODGEO', 'TUU2015')]
communes_PLM <- communes_PLM[,c('CODGEO', 'TUU2015')]
colnames(communes_agglo) <- c('Code.INSEE', 'taille_agglo')
colnames(communes_PLM) <- c('Code.INSEE', 'taille_agglo')
communes_agglo$Code.INSEE <- as.character(communes_agglo$Code.INSEE)
communes_PLM$Code.INSEE <- as.character(communes_PLM$Code.INSEE)
communes_data <- communes_data[,c('Code.INSEE', "Code.Postal", 'Population')]
communes <- merge(merge(communes_agglo, communes_PLM, all=T), communes_data, all=T)
sum(communes$Population[is.na(communes$taille_agglo)], na.rm=T) # 750k missing because of Code.INSEE renaming
taille_agglo <- aggregate(Population ~ taille_agglo, communes, sum)
taille_agglo
taille_agglo <- aggregate(Population ~ taille_agglo, communes, 1000*sum)
taille_agglo <- aggregate(1000*Population ~ taille_agglo, communes, sum)
taille_agglo
taille_agglo$share <- taille_agglo$Population / sum(taille_agglo$Population)
colnames(taille_agglo) <- c('taille_agglo', 'pop')
taille_agglo$share <- taille_agglo$pop / sum(taille_agglo$pop)
sum(taille_agglo$pop)
taille_agglo
taille_agglo$share[taille_agglo$taille_agglo==0] # rural
taille_agglo$share[taille_agglo$taille_agglo<=3 & taille_agglo$taille_agglo>0] # <20k
taille_agglo$share[taille_agglo$taille_agglo==0] # rural
sum(taille_agglo$share[taille_agglo$taille_agglo<=3 & taille_agglo$taille_agglo>0]) # <20k
sum(taille_agglo$share[taille_agglo$taille_agglo<=5 & taille_agglo$taille_agglo>3]) # <100k
sum(taille_agglo$share[taille_agglo$taille_agglo<=8 & taille_agglo$taille_agglo>5]) # >1=00k
taille_agglo$share[taille_agglo$taille_agglo==8] # Paris
sum(taille_agglo$share[taille_agglo$taille_agglo<8 & taille_agglo$taille_agglo>5]) # >100k
9*60
options(download.file.method = "wget"); # For Ubuntu 14.04
package <- function(p) {
if (!is.element(p, installed.packages()[,1])) {
install.packages(p);
}
library(p, character.only = TRUE)
} # loads packages with automatical install if needed
package('pwr')
package("foreign")
package("memisc")
package("Hmisc")
package("DT")
package("pastecs")
package("lsr")
package("ggplot2")
package("stringr")
package("survey")
package("plotly")
package('gdata')
Ff <- function(QID) { f[QID][[1]] }
Vf <- function(QID) { as.vector(Ff(QID))  }
n <- function(var) { as.numeric(as.vector(var)) }
ff <- function(id) { f[paste("QID", id, sep="")][[1]] }
vf <- function(id) { as.vector(f(id)) }
NSPf <- function(QID) { length(V(QID)[V(QID) == "NSP (Je ne veux pas répondre)"])/length(V(QID)) }
nspf <- function(id) { length(v(id)[v(id) == "NSP (Je ne veux pas répondre)"])/length(v(id)) }
Label <- function(var) {
if (length(annotation(var))==1) { annotation(var)[1] }
else { label(var)  }
}
