s[[paste('taxe_benefices_', v, sep="")]] <<- s[paste('taxe_benefices_', v, '_p', sep="")][[1]]
s[[paste('taxe_benefices_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('taxe_benefices_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('taxe_benefices_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('taxe_benefices_', v, '_f', sep="")][[1]]))
}
for (v in c('inefficace', 'alternatives', 'ruraux', 'revenu', 'pauvres', 'economie', 'pretexte', 'aucun', 'autre_choix', 'autre')) {
s[[paste('taxe_problemes_', v, sep="")]] <<- s[paste('taxe_problemes_', v, '_p', sep="")][[1]]
s[[paste('taxe_problemes_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('taxe_problemes_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('taxe_problemes_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('taxe_problemes_', v, '_f', sep="")][[1]]))
}
s$cible[s$cible20==1] <<- 20
s$cible[s$cible30==1] <<- 30
s$cible[s$cible40==1] <<- 40
s$cible[s$cible50==1] <<- 50
label(s$cible) <<- "cible: Ciblage du recyclage de la hausse de la taxe carbone, attribué en fonction du revenu du répondant et de son ménage (20/30/40/50% les plus modestes)"
# TODO: manage to use tidyverse without erasing observations
# s <<- merge(s, s %>% gather(key = temp, value = gain_cible, c(gagnant_categorie__20, gagnant_categorie_20_30, gagnant_categorie_30_40, gagnant_categorie_40_50, gagnant_categorie_50_70, gagnant_categorie_70_)) %>% filter(gain_cible != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$gain_cible) <<- "gain_cible: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
# s <<- merge(s, s %>% gather(key = temp, value = taxe_cible_approbation, c(taxe__20_approbation, taxe_20_30_approbation, taxe_30_40_approbation, taxe_40_50_approbation, taxe_50_70_approbation, taxe_70__approbation)) %>% filter(taxe_cible_approbation != "") %>% select(-temp), sort=FALSE)
# label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
#
#   # s <<- s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp) # erases km_0, km_1, km_2
# s <<- merge(s, s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
#
# s <<- merge(s, s %>% gather(key = temp, value = conso, c(conso_1, conso_2)) %>% filter(conso != "") %>% select(-temp), sort=FALSE)
# label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$gain_cible[!is.na(s$gagnant_categorie__20)] <<- s$gagnant_categorie__20[!is.na(s$gagnant_categorie__20)]
s$gain_cible[!is.na(s$gagnant_categorie_20_30)] <<- s$gagnant_categorie_20_30[!is.na(s$gagnant_categorie_20_30)]
s$gain_cible[!is.na(s$gagnant_categorie_30_40)] <<- s$gagnant_categorie_30_40[!is.na(s$gagnant_categorie_30_40)]
s$gain_cible[!is.na(s$gagnant_categorie_40_50)] <<- s$gagnant_categorie_40_50[!is.na(s$gagnant_categorie_40_50)]
s$gain_cible[!is.na(s$gagnant_categorie_50_70)] <<- s$gagnant_categorie_50_70[!is.na(s$gagnant_categorie_50_70)]
s$gain_cible[!is.na(s$gagnant_categorie_70_)] <<- s$gagnant_categorie_70_[!is.na(s$gagnant_categorie_70_)]
label(s$gain_cible) <<- "gain_cible: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$taxe_cible_approbation[!is.na(s$taxe__20_approbation)] <<- s$taxe__20_approbation[!is.na(s$taxe__20_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_20_30_approbation)] <<- s$taxe_20_30_approbation[!is.na(s$taxe_20_30_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_30_40_approbation)] <<- s$taxe_30_40_approbation[!is.na(s$taxe_30_40_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_40_50_approbation)] <<- s$taxe_40_50_approbation[!is.na(s$taxe_40_50_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_50_70_approbation)] <<- s$taxe_50_70_approbation[!is.na(s$taxe_50_70_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_70__approbation)] <<- s$taxe_70__approbation[!is.na(s$taxe_70__approbation)]
label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$categorie_cible[!is.na(s$taxe__20_approbation)] <<- '_20'
s$categorie_cible[!is.na(s$taxe_20_30_approbation)] <<- '20_30'
s$categorie_cible[!is.na(s$taxe_30_40_approbation)] <<- '30_40'
s$categorie_cible[!is.na(s$taxe_40_50_approbation)] <<- '40_50'
s$categorie_cible[!is.na(s$taxe_50_70_approbation)] <<- '50_70'
s$categorie_cible[!is.na(s$taxe_70__approbation)] <<- '70_'
label(s$categorie_cible) <<- "categorie_cible: Catégorie de revenu du répondant (et de son ménage) taxe à recyclage ciblé - Catégories: percentile <20/20-30/30-40/40-50/50-70/>70, sachant que revenu_conjoint détermine la catégorie quand percentile de revenu > 70 (780/1140/1430/1670/2220)"
s$km[!is.na(s$km_0)] <<- s$km_0[!is.na(s$km_0)]
s$km[!is.na(s$km_1)] <<- s$km_1[!is.na(s$km_1)]
s$km[!is.na(s$km_2)] <<- s$km_2[!is.na(s$km_2)]
label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
s$conso[!is.na(s$conso_1)] <<- s$conso_1[!is.na(s$conso_1)]
s$conso[!is.na(s$conso_2)] <<- s$conso_2[!is.na(s$conso_2)]
label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$gaz <<- grepl('gaz', s$chauffage, ignore.case = T)
s$fioul <<- grepl('fioul', s$chauffage, ignore.case = T)
s$hausse_chauffage <<- -55.507189 + s$gaz * 124.578484 + s$fioul * 221.145441 + s$surface * 0.652174
s$hausse_diesel[s$nb_vehicules == 0] <<- (0.5*(6.39/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
s$hausse_diesel[s$nb_vehicules == 1] <<- ((s$fuel_1=='Diesel') * (s$conso/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 1]
s$hausse_diesel[s$nb_vehicules == 2] <<- (((s$fuel_2_1=='Diesel')*2/3 + (s$fuel_2_2=='Diesel')/3) * (s$conso/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 2]
s$hausse_essence[s$nb_vehicules == 0] <<- (0.5*(7.31/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
s$hausse_essence[s$nb_vehicules == 1] <<- ((s$fuel_1!='Diesel') * (s$conso/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 1]
s$hausse_essence[s$nb_vehicules == 2] <<- (((s$fuel_2_1!='Diesel')*2/3 + (s$fuel_2_2!='Diesel')/3) * (s$conso/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 2]
s$hausse_carburants <<- s$hausse_diesel + s$hausse_essence
label(s$hausse_carburants) <<- "hausse_carburant: Hausse des dépenses de carburants simulées pour le ménage, suite à la taxe (élasticité de 0.4) (hausse_diesel + hausse_essence)"
s$hausse_depenses <<- s$hausse_carburants + s$hausse_chauffage
s$diesel <<- (!is.na(s$fuel_1) & (s$fuel_1=='Diesel')) | (!is.na(s$fuel_2_2) & ((s$fuel_2_1=='Diesel') | (s$fuel_2_2=='Diesel')))
s$essence <<- (!is.na(s$fuel_1) & (s$fuel_1=='Essence')) | (!is.na(s$fuel_2_2) & ((s$fuel_2_1=='Essence') | (s$fuel_2_2=='Essence')))
label(s$diesel) <<- "diesel: Indicatrice de la possession d'un véhicule diesel par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Diesel')"
label(s$essence) <<- "essence: Indicatrice de la possession d'un véhicule à essence par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Essence')"
s$progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- s$progressivite_feedback_sans_info[!is.na(s$progressivite_feedback_sans_info)]
s$progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- s$progressivite_feedback_avec_info[!is.na(s$progressivite_feedback_avec_info)]
s$progressivite[!is.na(s$progressivite_progressif)] <<- s$progressivite_progressif[!is.na(s$progressivite_progressif)]
label(s$progressivite) <<- "progressivite: ~ Une hausse de la taxe carbone compensée avantagerait les plus modestes (réunion des trois variante_progressivite: prog/fb_info/fb_no_info où seule fb_no_info est sans information préalable sur la progressivité) - Q206-208"
s$variante_progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- "fb_no_info"
s$variante_progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- "fb_info"
s$variante_progressivite[!is.na(s$progressivite_progressif)] <<- "prog"
label(s$variante_progressivite) <<- "variante_progressivite: prog/fb_info/fb_no_info Variante aléatoire du bloc de questions où figure 'progressivite', seulement pour apres_modifs=T. prog: info sur la progressivité / fb: feedback sur le statut gagnant/perdant simulé, info/no_info: avec/sans info sur la progressivité de la mesure"
s$info_progressivite <<- FALSE
s$info_progressivite[s$variante_taxe_info=='p' | s$variante_progressivite=='fb_info'] <<- T
label(s$info_progressivite) <<- "info_progressivite: Indicatrice qu'a été montrée l'information que la hausse de la taxe carbone compensée avantagerait les plus modestes"
s$age_18_24 <<- 1*(s$age == '18 à 24 ans')
s$age_25_34 <<- 1*(s$age == '25 à 34 ans')
s$age_35_49 <<- 1*(s$age == '35 à 49 ans')
s$age_50_64 <<- 1*(s$age == '50 à 64 ans')
s$age_65_plus <<- 1*(s$age == '65 ans ou plus')
s$score_ges <<- 1 * (s$ges_CO2 == TRUE) + 1*(s$ges_CH4 == TRUE) + 1*(s$ges_O2 == FALSE) + 1*(s$ges_pm == FALSE)
label(s$score_ges) <<- "score_ges: Somme des bonnes réponses au questionnaire gaz à effet de serre (ges_O2/CH4/pm/CO2)"
s$score_climate_call <<- 1*(s$ges_avion == TRUE) + 1*(s$ges_boeuf == TRUE) + 1*(s$ges_nucleaire == FALSE)
label(s$score_climate_call) <<- "score_climate_call: Somme des bonnes réponses au questionnaire Climate Call (avion-train / boeuf-pates / nucleaire-eolien) ges_avion/boeuf/nucleaire"
s$duree_info[s$info_CC==1 & s$info_PM==1] <<- s$duree_info_CC_PM[s$info_CC==1 & s$info_PM==1]
s$duree_info[s$info_CC==0 & s$info_PM==1] <<- s$duree_info_PM[s$info_CC==0 & s$info_PM==1]
s$duree_info[s$info_CC==1 & s$info_PM==0] <<- s$duree_info_CC[s$info_CC==1 & s$info_PM==0]
s$duree_info[s$info_CC==0 & s$info_PM==0] <<- s$duree_no_info[s$info_CC==0 & s$info_PM==0]
label(s$duree_info) <<- "duree_info: Temps de soumission - Ancrage (information procurée ou non au début sur changement climatique ou particules fines) (duree_info_CC/PM/CC_PM/no_info)"
for (v in c("autonomie", "priorite", "etats", "global", "trop")) {
s[[paste("aide_non", v, sep="_")]] <<- NA
s[[paste("aide_non", v, sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==T & s$aide_2p==T] <<- s[[paste("aide_non", v, "i", sep="_")]]
s[[paste("aide_non", v, sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==FALSE & s$aide_2p==T] <<- s[[paste("aide_non", v, "ni", sep="_")]]
label(s[[paste("aide_non", v, sep="_")]]) <<- Label(s[[paste("aide_non", v, "i", sep="_")]])
}
for (i in 0:10) s[[paste('dep', i, 'en_position', sep='_')]] <<- NA
for (i in 0:10) {
for (o in 1:nrow(s)) {
j <- s[[paste('en_position', i, sep='_')]][o]
if (!is.na(j)) s[[paste('dep', j, 'en_position', sep='_')]][o] <<- i
}
}
# TODO: remove useless colonnes, such as _f/_p
# TODO: qualité, connaissances CC, opinions CC, gilets jaunes, duree_info, perte_relative_tva/fuel, si_/non_, gaz-fioul -> T/F, transferts_inter/variante, enfant
}
# convert_s()
# prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=FALSE)
# sa <- s
# prepare_s()
weighting_s <- function(data, printWeights = T) { # cf. google sheet
d <- data
d$region[is.na(d$region)] <- 'autre'
d$taille_agglo <- as.numeric(d$taille_agglo)
# d$csp <- factor(d$csp)
# d$region <- factor(d$region)
# levels(d$csp) <- c(levels(d$csp),"missing")
# levels(d$region) <- c(levels(d$region),"missing")
# levels(d$taille_agglo) <- c(levels(d$taille_agglo),"missing")
# levels(d$sexe) <- c(levels(d$sexe),"missing")
# d$csp[is.na(d$csp) | d$csp=="" | d$csp=="NSP"] <- "missing"
# d$taille_agglo[is.na(d$taille_agglo)] <- "missing"
# d$sexe[d$sexe=="" | d$sexe=="Autre"] <- "missing"
unweigthed <- svydesign(ids=~1, data=d)
sexe <- data.frame(sexe = c("Féminin", "Masculin"), Freq=nrow(d)*c(0.516,0.484)) # http://www.insee.fr/fr/themes/detail.asp?ref_id=bilan-demo&reg_id=0&page=donnees-detaillees/bilan-demo/pop_age2.htm
csp <- data.frame(csp = c("Inactif", "Ouvrier", "Cadre", "Indépendant", "Intermédiaire", "Retraité", "Employé", "Agriculteur"),
Freq=nrow(d)*c(0.1244,0.1214,0.0943,0.0341,0.1364,0.3279,0.1535,0.008))
region <- data.frame(region = c("autre","ARA", "Est", "Nord", "IDF", "Ouest", "SO", "Occ", "Centre", "PACA"),
Freq=nrow(d)*c(0.001,0.124,0.129,0.093,0.189,0.103,0.093,0.091,0.099,0.078))
age <- data.frame(age = c("18-24", "25-34", "35-49", "50-64", "65+"),
Freq=nrow(d)*c(0.117,0.147,0.242,0.242,0.252)) # Données/estim-pop-reg-sexe...
taille_agglo <- data.frame(taille_agglo = c(1:5), Freq=nrow(d)*c(0.2166,0.1710,0.1408,0.3083,0.1633))
# revenu <- data.frame(revenu = c(), Freq=nrow(d)*c())
diplome4 <- data.frame(diplome4 = c("Aucun diplôme ou brevet", "CAP ou BEP", "Baccalauréat", "Supérieur"),  # http://webcache.googleusercontent.com/search?q=cache:rUvf6u0uCnEJ:www.insee.fr/fr/themes/tableau.asp%3Freg_id%3D0%26ref_id%3Dnattef07232+&cd=1&hl=fr&ct=clnk&gl=fr&lr=lang_en%7Clang_es%7Clang_fr
Freq=nrow(d)*c(0.301, 0.246, 0.168, 0.285))
if (length(which(d$taille_agglo==""))>0) raked <- rake(design= unweigthed, sample.margins = list(~sexe,~diplome4,~region,~csp,~age),
population.margins = list(sexe,diplome4,region,csp,age))
else raked <- rake(design= unweigthed, sample.margins = list(~sexe,~diplome4,~taille_agglo,~region,~csp,~age),
population.margins = list(sexe,diplome4,taille_agglo,region,csp,age))
if (printWeights) {    print(summary(weights(raked))  )
print(sum( weights(raked) )^2/(length(weights(raked))*sum(weights(raked)^2)) ) # <0.5 : problématique
print( length(which(weights(raked)<0.25 | weights(raked)>4))/ length(weights(raked)))
}
return(weights(trimWeights(raked, lower=0.25, upper=4, strict=TRUE)))
}
prepare_s <- function(exclude_speeder=TRUE, exclude_screened=TRUE, only_finished=TRUE) { # , exclude_quotas_full=TRUE
# setwd("/home/adrien/Google Drive/Economie/Travail/enquete/codes")
# setwd("C:/Users/a.fabre/Google Drive/Economie/Travail/enquete/codes")
# pes <<- read.csv("fin.csv", sep=";")
# s <<- read.delim("politique.tsv", fileEncoding="UTF-16")
# f_data <- read.delim("fin.tsv", fileEncoding="UTF-16")
s <<- read_csv("survey.csv")
for (i in 1:length(s)) { label(s[[i]]) <<- toString(s[i][[1]][1]) } # Use the first line to create variable names labels then remove it - to run only once
s <<- s[-c(1,2),c(1:91,94:115,117:235,241,247:310,313:319,92,93,116,311,312,236:240,242:246)]
# if (exclude_screened) { s <<- s[s$Q_TerminateFlag=="",] } # remove Screened
# if (exclude_speeder) { s <<- s[n(s$`Duration (in seconds)`) > 540,] } # remove speedest
# if (exclude_quotas_full) { s <<- s[s[101][[1]] %in% c(1:5),]  } # remove those with a problem for the taille d'agglo
# if (exclude_quotas_full) { s <<- s[s$Q_TerminateFlag=="",]  } # remove those with a problem for the taille d'agglo
# if (only_finished) { s <<- s[as.vector(s$Finished)=="True",] }
relabel_and_rename_s()
print(paste(length(which(s$exclu=="QuotaMet")), "QuotaMet"))
s$fini[s$exclu=="QuotaMet" | is.na(s$revenu)] <<- "False" # To check the number of QuotaMet that shouldn't have incremented the quota, comment this line and: decrit(s$each_strate[s$exclu=="QuotaMet" & s$csp=="Employé" & !grepl("2019-03-04 07", s$date)])
if (exclude_screened) { s <<- s[is.na(s$exclu),] } # remove Screened
if (exclude_speeder) { s <<- s[as.numeric(as.vector(s$duree)) > 420,] } # remove speedest /!\ was 540 before 22-02-11:00 (EST Coast time)
# if (exclude_quotas_full) { s <<- s[s[101][[1]] %in% c(1:5),]  } # remove those with a problem for the taille d'agglo
# if (exclude_quotas_full) { s <<- s[s$Q_TerminateFlag=="",]  } # remove those with a problem for the taille d'agglo
if (only_finished) { s <<- s[s$fini=="True",] }
print(paste(length(which(is.na(s$taille_agglo))), "tailles d'agglo sont manquantes"))
s <<- s[!is.na(s$taille_agglo),]
convert_s() # TODO: check the Warnings
s$sample <<- "a"
s$sample[s$fini=="True"] <<- "e"
s$sample[s$fini=="True" & n(s$duree) > 540] <<- "p"
s$sample[s$fini=="True" & n(s$duree) > 540 & s$test_qualite=='Un peu'] <<- "f" # "q"? excluded because out of quotas
s$sample[s$fini=="True" & n(s$duree) > 540 & s$exclu==""] <<- "r"
# s <<- s[-which(is.element(s$id, s$id[duplicated(s$id)]) & !duplicated(s$id)),] # TODO: check duplicates
s$weight <<- weighting_s(s)
}
prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=T) # TODO: let only_finished = FALSE
sa <- s
# prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE)
# se <- s
# prepare_s(exclude_screened=FALSE)
# sp <- s
prepare_s()
write.csv(s, "survey_prepared.csv")
s$gagnant_categorie_cible <- s$gain_cible
decrit(s$gagnant_categorie_cible)
s$gagnant_cible_categorie <- s$gain_cible
decrit(s$cible_categorie)
decrit(s$categorie_cible)
##### Régressions: Discontinuité ######
ols_approve_winner <- lm((taxe_cible_approbation=='Oui') ~ (gagnant_cible_categorie!='Gagnant') + (taxe_approbation=='Oui'), data=s, subset=categorie_cible!='70_', weights = s$weight)
##### Régressions: Discontinuité ######
summary(lm((taxe_cible_approbation=='Oui') ~ (gagnant_cible_categorie!='Gagnant') + (taxe_approbation=='Oui'), data=s, subset=categorie_cible!='70_', weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ (gagnant_cible_categorie!='Perdant') + (taxe_approbation=='Non'), data=s, subset=categorie_cible!='70_', weights = s$weight))
# 45% more chance of acceptance when thinking to not loose
summary(lm((taxe_cible_approbation!='Non') ~ (gagnant_cible_categorie!='Perdant') + (taxe_approbation!='Non'), data=s, subset=categorie_cible!='70_', weights = s$weight))
cor(s$transfert_seuil_gagnant, s$traite_transfert)
##### Régressions: gagnant_cible_categorie ######
# 52% less chance of approval when thinking to not win
summary(lm((taxe_cible_approbation=='Oui') ~ (gagnant_cible_categorie=='Gagnant') + (taxe_approbation=='Oui'), data=s, subset=categorie_cible!='70_', weights = s$weight))
# 45% more chance of acceptance when thinking to not loose
summary(lm((taxe_cible_approbation!='Non') ~ (gagnant_cible_categorie!='Perdant') + (taxe_approbation!='Non'), data=s, weights = s$weight))
s$traite_cible <- (s$cible==20)*(s$revenu<780) + (s$cible==30)*(s$revenu<1140) + (s$cible==40)*(s$revenu<1430) + (s$cible==50)*(s$revenu<1670)
s$traite_cible_conjoint <- (s$nb_adultes > 1)* ((s$cible==20)*(s$revenu_conjoint<780) + (s$cible==30)*(s$revenu_conjoint<1140) + (s$cible==40)*(s$revenu_conjoint<1430) + (s$cible==50)*(s$revenu_conjoint<1670))
label(s$traite_cible) <- "traite_cible: Indicatrice de transfert reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$traite_cible_conjoint) <- "traite_cible_conjoint: Indicatrice de transfert reçu par le conjoint du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
decrit(s$traite_cible)
s$gagnant_partielle_categorie <- s$gagnant_categorie_partielle
s$traite_cible <- (s$cible==20)*(s$revenu<780) + (s$cible==30)*(s$revenu<1140) + (s$cible==40)*(s$revenu<1430) + (s$cible==50)*(s$revenu<1670)
s$traite_cible_conjoint <- (s$nb_adultes > 1)* ((s$cible==20)*(s$revenu_conjoint<780) + (s$cible==30)*(s$revenu_conjoint<1140) + (s$cible==40)*(s$revenu_conjoint<1430) + (s$cible==50)*(s$revenu_conjoint<1670))
label(s$traite_cible) <- "traite_cible: Indicatrice de transfert reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$traite_cible_conjoint) <- "traite_cible_conjoint: Indicatrice de transfert reçu par le conjoint du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
decrit(s$traite_cible)
decrit(s$traite_cible_conjoint)
cor(s$transfert_seuil_gagnant, s$traite_transfert)
cor(s$gagnant_cible_categorie, s$traite_cible)
cor(s$gagnant_cible_categorie, s$traite_cible_conjoint)
cor(s$gagnant_cible_categorie!='Perdant', s$traite_cible==1)
cor(s$gagnant_cible_categorie!='Perdant', s$traite_cible_conjoint==1)
cor(s$gagnant_cible_categorie=='Gagnant', s$traite_cible==1) # 21%
cor(s$gagnant_cible_categorie=='Gagnant', s$traite_cible_conjoint==1) # 10%
##### Régressions: gagnant_cible_categorie ######
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint + cible, data=s, weights = s$weight))
##### Régressions: gagnant_cible_categorie ######
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint + cible + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 14%*** (resp. 7%)* more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint*cible + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 14%*** (resp. 7%)* more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint*as.factor(cible) + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 14%*** (resp. 7%)* more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint + as.factor(cible) + niveau_vie, data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint*as.factor(cible) + niveau_vie, data=s, weights = s$weight))
s$versement_cible <- (s$traite_cible + s$traite_cible_conjoint) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
s$versement_cible_sans_conjoint <- (s$traite_cible) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
label(s$versement_cible) <- "versement_cible: Versement reçu par le ménage du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$versement_cible_sans_conjoint) <- "versement_cible_sans_conjoint: Versement reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
s$simule_gain_cible <- s$versement_cible - s$hausse_depenses
s$simule_gain_cible_sans_conjoint <- s$versement_cible_sans_conjoint - s$hausse_depenses
decrit(s$simule_gain_cible)
s$simule_gain_cible <- s$versement_cible - s$hausse_depenses
s$simule_gain_cible_sans_conjoint <- s$versement_cible_sans_conjoint - s$hausse_depenses
label(s$simule_gain_cible) <- "simule_gain_cible: Gain net simulé pour le ménage du répondant suite à une hausse de taxe carbone avec compensation ciblée."
label(s$simule_gain_cible_sans_conjoint) <- "simule_gain_cible_sans_conjoint: Gain net simulé pour le répondant (sans tenir compte du potentiel versement reçu par son conjoint) suite à une hausse de taxe carbone avec compensation ciblée."
s$simule_gain <- s$nb_adultes * 110 - s$hausse_depenses
s$simule_gain_repondant <- 110 - s$hausse_depenses
label(s$simule_gain) <- "simule_gain: Gain net annuel simulé pour le ménage du répondant suite à une hausse de taxe carbone compensée: nb_adultes * 110 - hausse_depenses"
label(s$simule_gain_repondant) <- "simule_gain_repondant: Gain net annuel simulé pour le répondant (sans tenir compte du potentiel versement reçu par les autres adultes du ménage) suite à une hausse de taxe carbone compensée: 110 - hausse_depenses"
###### Régressions: 2SLS Discontinuité cible #####
# tsls_rdd_1 <- lm((gagnant_cible_categorie!='Perdant') ~ traite_cible * traite_cible_conjoint + taxe_approbation + hausse_depenses + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, subset=cible!='70_', weights = s$weight)
tsls_rdd_1 <- lm((gagnant_cible_categorie!='Perdant') ~ traite_cible * traite_cible_conjoint + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight)
# TODO: pourquoi exclure les >70_ ?
gagnant.hat <- fitted.values(tsls_rdd_1)
# summary(lm(dummy_approbation_cible ~ gagnant.hat + taxe_approbation + hausse_depenses + revenu + revenu_conjoint, data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# Avec effet hétérogène par seuil
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*as.factor(cible) + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# Avec effet hétérogène par seuil
s$Cible <- relevel(as.factor(s$cible), 50)
# Avec effet hétérogène par seuil
s$Cible <- relevel(as.factor(s$cible), '50')
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*Cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*as.factor(cible) + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# Avec effet hétérogène par seuil
s$Cible <- relevel(as.factor(s$cible), '50')
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*Cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*as.factor(cible) + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# summary(lm(dummy_approbation_cible ~ gagnant.hat + taxe_approbation + hausse_depenses + revenu + revenu_conjoint, data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*Cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
s$cible <- relevel(as.factor(s$cible), '50')
# Avec effet hétérogène par seuil
# s$Cible <- relevel(as.factor(s$cible), '50')
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 7%**) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + niveau_vie, data=s, weights = s$weight))
# result stronger for cible==30 for respondent, and for cible>=40 for conjoint
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint * cible + niveau_vie, data=s, weights = s$weight))
# smaller effects and interaction with negative sign (before it was not significant)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 7%**) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + niveau_vie, data=s, weights = s$weight))
# result stronger for cible==30 for respondent, and for cible>=40 for conjoint
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint * cible + taxe_approbation + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 8%***) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 8%***) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + niveau_vie + I(niveau_vie^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '20_30', data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '30_40', data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 20%***
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '20_30', data=s, weights = s$weight))
#
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '30_40', data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '40_50', data=s, weights = s$weight))
# smaller effects and interaction with negative sign (before it was not significant)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint * cible + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions:  #####
cor(traite_cible, gagnant_cible_categorie)
##### Régressions:  #####
cor(s$traite_cible, s$gagnant_cible_categorie)
##### Régressions:  #####
cor(s$traite_cible, s$gagnant_cible_categorie!='Perdant')
cor(s$traite_cible_conjoint, s$gagnant_cible_categorie!='Perdant') # Les instrumments ne sont pas faibles
tsls1 <- lm(gagnant_cible_categorie ~ traite_cible + traite_cible_conjoint + taxe_approbation, subset= is.element(categorie_cible, c('20_30', '30_40', '40_50')), data=s, weights = s$weight)
tsls1 <- lm(gagnant_cible_categorie ~ traite_cible + traite_cible_conjoint + taxe_approbation, data=s, weights = s$weight)
tsls1 <- lm(gagnant_cible_categorie !='Perdant'~ traite_cible + traite_cible_conjoint + taxe_approbation, subset= is.element(categorie_cible, c('20_30', '30_40', '40_50')), data=s, weights = s$weight)
summary(tsls1)
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat + taxe_approbation, subset = is.element(categorie_cible, c('20_30', '30_40', '40_50')), data=s, weights = s$weight))
decrit(s$gagnant_categorie)
# ##### Régressions: Feedback #####
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gain_taxe_feedback == 'Gagnant') + taxe_approbation, data=s, weights = s$weight))
# ##### Régressions: Feedback #####
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation, data=s, weights = s$weight))
# non perdant:
summary(lm((taxe_feedback_approbation != 'Non') ~ (gagnant_feedback_categorie != 'Perdant') + taxe_approbation, data=s, weights = s$weight))
# RDD simple - effet d'être gagnant
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant')  + simule_gain + I(simule_gain^2) + taxe_approbation, data=f, weights = f$weight))
# RDD simple - effet d'être gagnant
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant')  + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
# RDD simple - effet d'être gagnant
summary(lm((taxe_feedback_approbation == 'Oui') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation != 'Non') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
# ##### Régressions: Feedback #####
# OLS - s'estimer gagnant: +31% chance d'approuver / non perdant: +33% chance d'accepter
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation != 'Non') ~ (gagnant_feedback_categorie != 'Perdant') + taxe_approbation, data=s, weights = s$weight))
# RDD simple - effet d'être (simulé) gagnant: +9% approbation / +15%
summary(lm((taxe_feedback_approbation == 'Oui') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation != 'Non') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant)
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor((s$gagnant_feedback_categorie == 'Gagnant'), s$simule_gagnant) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor((s$gagnant_feedback_categorie == 'Gagnant'), s$simule_gagnant==1) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==T) #
decrit(s$simule_gagnant)
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant, na.rm=T) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant, use = "all.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1, use = "all.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1, use = "complete.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant, use = "complete.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1, use = "complete.obs") #
cor(s$gagnant_feedback_categorie != 'Perdant', s$simule_gagnant==1, use = "complete.obs") # 0.24
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight))
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight))
decrit(s$simule_gagnant)
decrit(gagnant_f.hat)
decrit(s$taxe_feedback_approbation)
decrit(s$taxe_feedback_approbation=='Oui')
decrit(s$variante_taxe_info)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = variante_taxe_info=='f', data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight))
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight))
tsls_rdd_feedback_2 <- lm(s$gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_2)
summary(lm((taxe_feedback_approbation != 'Non') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight))
decrit(s$simule_gagnant)
sf <- subset(s, !is.na(s$gagnant))
sf$dummy_approbation_feedback <- 1 * (sf$taxe_feedback_approbation=='Oui')
sf$dummy_declare_gain_taxe_feedback <- 1 * (sf$gain_taxe_feedback == 'Gagnant')
sf$gagnant <- as.numeric(sf$gagnant)
sf$gains_nets_estimes <- sf$hausse_depenses - 110 * sf$nb_adultes - 16.1
sf$gains_nets_estimes_2 <- sf$gains_nets_estimes^2
sf <- subset(s, !is.na(s$simule_gagnant))
sf$dummy_approbation_feedback <- 1 * (sf$taxe_feedback_approbation=='Oui')
sf$dummy_declare_gagnant_feedback_categorie <- 1 * (sf$gagnant_feedback_categorie == 'Gagnant')
sf$simule_gagnant <- as.numeric(sf$simule_gagnant)
sf$gains_nets_estimes <- sf$hausse_depenses - 110 * sf$nb_adultes - 16.1
sf$gains_nets_estimes_2 <- sf$gains_nets_estimes^2
tsls_rdd_feedback_1 <- lm(dummy_declare_gagnant_feedback_categorie ~ simule_gagnant + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
d_rdd_feedback.hat <- fitted.values(tsls_rdd_feedback_1)
tsls_rdd_feedback_2 <- lm(dummy_approbation_feedback ~ d_rdd_feedback.hat + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
sf <- subset(s, s$variante_taxe_info=='f')
sf$dummy_approbation_feedback <- 1 * (sf$taxe_feedback_approbation=='Oui')
sf$dummy_declare_gagnant_feedback_categorie <- 1 * (sf$gagnant_feedback_categorie == 'Gagnant')
sf$simule_gagnant <- as.numeric(sf$simule_gagnant)
sf$gains_nets_estimes <- sf$hausse_depenses - 110 * sf$nb_adultes - 16.1
sf$gains_nets_estimes_2 <- sf$gains_nets_estimes^2
ols_feedback <- lm(dummy_approbation_feedback ~ dummy_declare_gagnant_feedback_categorie + taxe_approbation, data=sf, weights = sf$weight)
summary(ols_feedback)
# RDD simple - effet d'être gagnant
rdd_feedback <- lm(dummy_approbation_feedback ~ simule_gagnant + gains_nets_estimes + gains_nets_estimes_2 + taxe_approbation, data=sf, weights = sf$weight)
summary(rdd_feedback)
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(sf$dummy_declare_gagnant_feedback_categorie, sf$gagnant)
tsls_rdd_feedback_1 <- lm(dummy_declare_gagnant_feedback_categorie ~ simule_gagnant + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
d_rdd_feedback.hat <- fitted.values(tsls_rdd_feedback_1)
tsls_rdd_feedback_2 <- lm(dummy_approbation_feedback ~ d_rdd_feedback.hat + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight))
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, !is.na(s$simule_gagnant)), weights = s$weight))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, !is.na(s$simule_gagnant)))
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, !is.na(s$simule_gagnant))))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, s$variante_taxe_info=='f') )
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, s$variante_taxe_info=='f')))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s )
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, subset= s$variante_taxe_info=='f' )
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, subset= s$variante_taxe_info=='f'))
sf <- subset(s, s$variante_taxe_info=='f') # TODO: autre méthode, package?
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, s$taxe_i) )
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight))
tsls_rdd_feedback_2 <- lm(s$gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
tsls_rdd_feedback_2 <- lm(s$gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
# 19%***
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +50%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight))
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +49%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight))
tsls_rdd_feedback_2 <- lm(gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
summary(tsls_rdd_feedback_2)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_2)
summary(lm((taxe_feedback_approbation != 'Non') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight))
##### Régressions: persistance des croyances #####
summary(lm((gagnant_feedback_categorie!='Perdant' - gagnant_feedback_categorie!='Perdant') ~ simule_gagnant, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation!='Non' - taxe_approbation!='Non') ~ simule_gagnant, data=s, weights = s$weight))
##### Régressions: persistance des croyances #####
summary(lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_feedback_categorie!='Perdant')) ~ simule_gagnant, data=s, weights = s$weight))
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ simule_gagnant, data=s, weights = s$weight))
decrit(s$gagnant_feedback_categorie)
##### Régressions: persistance des croyances #####
# TODO: rajouter contrôles
summary(lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_categorie!='Perdant')) ~ simule_gagnant, data=s, weights = s$weight))
Dgagnant.hat <- fitted.values(croyances_1)
croyances_1 <- lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_categorie!='Perdant')) ~ simule_gagnant, data=s, weights = s$weight)
summary(croyances_1)
Dgagnant.hat <- fitted.values(croyances_1)
summary(lm((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=s, weights = s$weight))
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=s, weights = s$weight))
##### Régressions: persistance des croyances #####
# apprendre qu'on est (simulé) gagnant augmente la croyance de ne pas perdre de 23%
croyances_1 <- lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_categorie!='Perdant')) ~ simule_gagnant, data=sf, weights = sf$weight)
summary(croyances_1)
Dgagnant.hat <- fitted.values(croyances_1)
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=sf, weights = sf$weight))
summary(croyances_1)
# apprendre qu'on est (simulé) gagnant augmente l'acceptation de 9%***
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ simule_gagnant, data=s, weights = s$weight)) # TODO: rajouter contrôles
0.09224/0.22634
# comprendre qu'on est non perdant augmente l'approbation de 41%*** = 9/0.23
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=sf, weights = sf$weight))
0.09224/0.22634
