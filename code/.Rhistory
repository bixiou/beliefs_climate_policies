if (!is.na(j)) s[[paste('dep', j, 'en_position', sep='_')]][o] <<- i
}
}
# TODO: remove useless colonnes, such as _f/_p
# TODO: qualité, connaissances CC, opinions CC, gilets jaunes, duree_info, perte_relative_tva/fuel, si_/non_, gaz-fioul -> T/F, transferts_inter/variante, enfant
}
# convert_s()
# prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=FALSE)
# sa <- s
# prepare_s()
weighting_s <- function(data, printWeights = T) { # cf. google sheet
d <- data
d$region[is.na(d$region)] <- 'autre'
d$taille_agglo <- as.numeric(d$taille_agglo)
# d$csp <- factor(d$csp)
# d$region <- factor(d$region)
# levels(d$csp) <- c(levels(d$csp),"missing")
# levels(d$region) <- c(levels(d$region),"missing")
# levels(d$taille_agglo) <- c(levels(d$taille_agglo),"missing")
# levels(d$sexe) <- c(levels(d$sexe),"missing")
# d$csp[is.na(d$csp) | d$csp=="" | d$csp=="NSP"] <- "missing"
# d$taille_agglo[is.na(d$taille_agglo)] <- "missing"
# d$sexe[d$sexe=="" | d$sexe=="Autre"] <- "missing"
unweigthed <- svydesign(ids=~1, data=d)
sexe <- data.frame(sexe = c("Féminin", "Masculin"), Freq=nrow(d)*c(0.516,0.484)) # http://www.insee.fr/fr/themes/detail.asp?ref_id=bilan-demo&reg_id=0&page=donnees-detaillees/bilan-demo/pop_age2.htm
csp <- data.frame(csp = c("Inactif", "Ouvrier", "Cadre", "Indépendant", "Intermédiaire", "Retraité", "Employé", "Agriculteur"),
Freq=nrow(d)*c(0.1244,0.1214,0.0943,0.0341,0.1364,0.3279,0.1535,0.008))
region <- data.frame(region = c("autre","ARA", "Est", "Nord", "IDF", "Ouest", "SO", "Occ", "Centre", "PACA"),
Freq=nrow(d)*c(0.001,0.124,0.129,0.093,0.189,0.103,0.093,0.091,0.099,0.078))
age <- data.frame(age = c("18-24", "25-34", "35-49", "50-64", "65+"),
Freq=nrow(d)*c(0.117,0.147,0.242,0.242,0.252)) # Données/estim-pop-reg-sexe...
taille_agglo <- data.frame(taille_agglo = c(1:5), Freq=nrow(d)*c(0.2166,0.1710,0.1408,0.3083,0.1633))
# revenu <- data.frame(revenu = c(), Freq=nrow(d)*c())
diplome4 <- data.frame(diplome4 = c("Aucun diplôme ou brevet", "CAP ou BEP", "Baccalauréat", "Supérieur"),  # http://webcache.googleusercontent.com/search?q=cache:rUvf6u0uCnEJ:www.insee.fr/fr/themes/tableau.asp%3Freg_id%3D0%26ref_id%3Dnattef07232+&cd=1&hl=fr&ct=clnk&gl=fr&lr=lang_en%7Clang_es%7Clang_fr
Freq=nrow(d)*c(0.301, 0.246, 0.168, 0.285))
if (length(which(d$taille_agglo==""))>0) raked <- rake(design= unweigthed, sample.margins = list(~sexe,~diplome4,~region,~csp,~age),
population.margins = list(sexe,diplome4,region,csp,age))
else raked <- rake(design= unweigthed, sample.margins = list(~sexe,~diplome4,~taille_agglo,~region,~csp,~age),
population.margins = list(sexe,diplome4,taille_agglo,region,csp,age))
if (printWeights) {    print(summary(weights(raked))  )
print(sum( weights(raked) )^2/(length(weights(raked))*sum(weights(raked)^2)) ) # <0.5 : problématique
print( length(which(weights(raked)<0.25 | weights(raked)>4))/ length(weights(raked)))
}
return(weights(trimWeights(raked, lower=0.25, upper=4, strict=TRUE)))
}
prepare_s <- function(exclude_speeder=TRUE, exclude_screened=TRUE, only_finished=TRUE) { # , exclude_quotas_full=TRUE
# setwd("/home/adrien/Google Drive/Economie/Travail/enquete/codes")
# setwd("C:/Users/a.fabre/Google Drive/Economie/Travail/enquete/codes")
# pes <<- read.csv("fin.csv", sep=";")
# s <<- read.delim("politique.tsv", fileEncoding="UTF-16")
# f_data <- read.delim("fin.tsv", fileEncoding="UTF-16")
s <<- read_csv("survey.csv")
for (i in 1:length(s)) { label(s[[i]]) <<- toString(s[i][[1]][1]) } # Use the first line to create variable names labels then remove it - to run only once
s <<- s[-c(1,2),c(1:91,94:115,117:235,241,247:310,313:319,92,93,116,311,312,236:240,242:246)]
# if (exclude_screened) { s <<- s[s$Q_TerminateFlag=="",] } # remove Screened
# if (exclude_speeder) { s <<- s[n(s$`Duration (in seconds)`) > 540,] } # remove speedest
# if (exclude_quotas_full) { s <<- s[s[101][[1]] %in% c(1:5),]  } # remove those with a problem for the taille d'agglo
# if (exclude_quotas_full) { s <<- s[s$Q_TerminateFlag=="",]  } # remove those with a problem for the taille d'agglo
# if (only_finished) { s <<- s[as.vector(s$Finished)=="True",] }
relabel_and_rename_s()
print(paste(length(which(s$exclu=="QuotaMet")), "QuotaMet"))
s$fini[s$exclu=="QuotaMet" | is.na(s$revenu)] <<- "False" # To check the number of QuotaMet that shouldn't have incremented the quota, comment this line and: decrit(s$each_strate[s$exclu=="QuotaMet" & s$csp=="Employé" & !grepl("2019-03-04 07", s$date)])
if (exclude_screened) { s <<- s[is.na(s$exclu),] } # remove Screened
if (exclude_speeder) { s <<- s[as.numeric(as.vector(s$duree)) > 420,] } # remove speedest /!\ was 540 before 22-02-11:00 (EST Coast time)
# if (exclude_quotas_full) { s <<- s[s[101][[1]] %in% c(1:5),]  } # remove those with a problem for the taille d'agglo
# if (exclude_quotas_full) { s <<- s[s$Q_TerminateFlag=="",]  } # remove those with a problem for the taille d'agglo
if (only_finished) { s <<- s[s$fini=="True",] }
print(paste(length(which(is.na(s$taille_agglo))), "tailles d'agglo sont manquantes"))
s <<- s[!is.na(s$taille_agglo),]
convert_s() # TODO: check the Warnings
s$sample <<- "a"
s$sample[s$fini=="True"] <<- "e"
s$sample[s$fini=="True" & n(s$duree) > 540] <<- "p"
s$sample[s$fini=="True" & n(s$duree) > 540 & s$test_qualite=='Un peu'] <<- "f" # "q"? excluded because out of quotas
s$sample[s$fini=="True" & n(s$duree) > 540 & s$exclu==""] <<- "r"
# s <<- s[-which(is.element(s$id, s$id[duplicated(s$id)]) & !duplicated(s$id)),] # TODO: check duplicates
s$weight <<- weighting_s(s)
}
prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=T) # TODO: let only_finished = FALSE
sa <- s
# prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE)
# se <- s
# prepare_s(exclude_screened=FALSE)
# sp <- s
prepare_s()
write.csv(s, "survey_prepared.csv")
s$gagnant_categorie_cible <- s$gain_cible
decrit(s$gagnant_categorie_cible)
s$gagnant_cible_categorie <- s$gain_cible
decrit(s$cible_categorie)
decrit(s$categorie_cible)
##### Régressions: Discontinuité ######
ols_approve_winner <- lm((taxe_cible_approbation=='Oui') ~ (gagnant_cible_categorie!='Gagnant') + (taxe_approbation=='Oui'), data=s, subset=categorie_cible!='70_', weights = s$weight)
##### Régressions: Discontinuité ######
summary(lm((taxe_cible_approbation=='Oui') ~ (gagnant_cible_categorie!='Gagnant') + (taxe_approbation=='Oui'), data=s, subset=categorie_cible!='70_', weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ (gagnant_cible_categorie!='Perdant') + (taxe_approbation=='Non'), data=s, subset=categorie_cible!='70_', weights = s$weight))
# 45% more chance of acceptance when thinking to not loose
summary(lm((taxe_cible_approbation!='Non') ~ (gagnant_cible_categorie!='Perdant') + (taxe_approbation!='Non'), data=s, subset=categorie_cible!='70_', weights = s$weight))
cor(s$transfert_seuil_gagnant, s$traite_transfert)
##### Régressions: gagnant_cible_categorie ######
# 52% less chance of approval when thinking to not win
summary(lm((taxe_cible_approbation=='Oui') ~ (gagnant_cible_categorie=='Gagnant') + (taxe_approbation=='Oui'), data=s, subset=categorie_cible!='70_', weights = s$weight))
# 45% more chance of acceptance when thinking to not loose
summary(lm((taxe_cible_approbation!='Non') ~ (gagnant_cible_categorie!='Perdant') + (taxe_approbation!='Non'), data=s, weights = s$weight))
s$traite_cible <- (s$cible==20)*(s$revenu<780) + (s$cible==30)*(s$revenu<1140) + (s$cible==40)*(s$revenu<1430) + (s$cible==50)*(s$revenu<1670)
s$traite_cible_conjoint <- (s$nb_adultes > 1)* ((s$cible==20)*(s$revenu_conjoint<780) + (s$cible==30)*(s$revenu_conjoint<1140) + (s$cible==40)*(s$revenu_conjoint<1430) + (s$cible==50)*(s$revenu_conjoint<1670))
label(s$traite_cible) <- "traite_cible: Indicatrice de transfert reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$traite_cible_conjoint) <- "traite_cible_conjoint: Indicatrice de transfert reçu par le conjoint du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
decrit(s$traite_cible)
s$gagnant_partielle_categorie <- s$gagnant_categorie_partielle
s$traite_cible <- (s$cible==20)*(s$revenu<780) + (s$cible==30)*(s$revenu<1140) + (s$cible==40)*(s$revenu<1430) + (s$cible==50)*(s$revenu<1670)
s$traite_cible_conjoint <- (s$nb_adultes > 1)* ((s$cible==20)*(s$revenu_conjoint<780) + (s$cible==30)*(s$revenu_conjoint<1140) + (s$cible==40)*(s$revenu_conjoint<1430) + (s$cible==50)*(s$revenu_conjoint<1670))
label(s$traite_cible) <- "traite_cible: Indicatrice de transfert reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$traite_cible_conjoint) <- "traite_cible_conjoint: Indicatrice de transfert reçu par le conjoint du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
decrit(s$traite_cible)
decrit(s$traite_cible_conjoint)
cor(s$transfert_seuil_gagnant, s$traite_transfert)
cor(s$gagnant_cible_categorie, s$traite_cible)
cor(s$gagnant_cible_categorie, s$traite_cible_conjoint)
cor(s$gagnant_cible_categorie!='Perdant', s$traite_cible==1)
cor(s$gagnant_cible_categorie!='Perdant', s$traite_cible_conjoint==1)
cor(s$gagnant_cible_categorie=='Gagnant', s$traite_cible==1) # 21%
cor(s$gagnant_cible_categorie=='Gagnant', s$traite_cible_conjoint==1) # 10%
##### Régressions: gagnant_cible_categorie ######
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint + cible, data=s, weights = s$weight))
##### Régressions: gagnant_cible_categorie ######
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint + cible + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 14%*** (resp. 7%)* more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint*cible + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 14%*** (resp. 7%)* more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint*as.factor(cible) + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 14%*** (resp. 7%)* more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint + as.factor(cible) + niveau_vie, data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible*traite_cible_conjoint*as.factor(cible) + niveau_vie, data=s, weights = s$weight))
s$versement_cible <- (s$traite_cible + s$traite_cible_conjoint) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
s$versement_cible_sans_conjoint <- (s$traite_cible) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
label(s$versement_cible) <- "versement_cible: Versement reçu par le ménage du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$versement_cible_sans_conjoint) <- "versement_cible_sans_conjoint: Versement reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
s$simule_gain_cible <- s$versement_cible - s$hausse_depenses
s$simule_gain_cible_sans_conjoint <- s$versement_cible_sans_conjoint - s$hausse_depenses
decrit(s$simule_gain_cible)
s$simule_gain_cible <- s$versement_cible - s$hausse_depenses
s$simule_gain_cible_sans_conjoint <- s$versement_cible_sans_conjoint - s$hausse_depenses
label(s$simule_gain_cible) <- "simule_gain_cible: Gain net simulé pour le ménage du répondant suite à une hausse de taxe carbone avec compensation ciblée."
label(s$simule_gain_cible_sans_conjoint) <- "simule_gain_cible_sans_conjoint: Gain net simulé pour le répondant (sans tenir compte du potentiel versement reçu par son conjoint) suite à une hausse de taxe carbone avec compensation ciblée."
s$simule_gain <- s$nb_adultes * 110 - s$hausse_depenses
s$simule_gain_repondant <- 110 - s$hausse_depenses
label(s$simule_gain) <- "simule_gain: Gain net annuel simulé pour le ménage du répondant suite à une hausse de taxe carbone compensée: nb_adultes * 110 - hausse_depenses"
label(s$simule_gain_repondant) <- "simule_gain_repondant: Gain net annuel simulé pour le répondant (sans tenir compte du potentiel versement reçu par les autres adultes du ménage) suite à une hausse de taxe carbone compensée: 110 - hausse_depenses"
###### Régressions: 2SLS Discontinuité cible #####
# tsls_rdd_1 <- lm((gagnant_cible_categorie!='Perdant') ~ traite_cible * traite_cible_conjoint + taxe_approbation + hausse_depenses + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, subset=cible!='70_', weights = s$weight)
tsls_rdd_1 <- lm((gagnant_cible_categorie!='Perdant') ~ traite_cible * traite_cible_conjoint + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight)
# TODO: pourquoi exclure les >70_ ?
gagnant.hat <- fitted.values(tsls_rdd_1)
# summary(lm(dummy_approbation_cible ~ gagnant.hat + taxe_approbation + hausse_depenses + revenu + revenu_conjoint, data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# Avec effet hétérogène par seuil
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*as.factor(cible) + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# Avec effet hétérogène par seuil
s$Cible <- relevel(as.factor(s$cible), 50)
# Avec effet hétérogène par seuil
s$Cible <- relevel(as.factor(s$cible), '50')
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*Cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*as.factor(cible) + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# Avec effet hétérogène par seuil
s$Cible <- relevel(as.factor(s$cible), '50')
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*Cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*as.factor(cible) + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
# summary(lm(dummy_approbation_cible ~ gagnant.hat + taxe_approbation + hausse_depenses + revenu + revenu_conjoint, data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*Cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
s$cible <- relevel(as.factor(s$cible), '50')
# Avec effet hétérogène par seuil
# s$Cible <- relevel(as.factor(s$cible), '50')
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat*cible + taxe_approbation + simule_gain_cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 7%**) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + niveau_vie, data=s, weights = s$weight))
# result stronger for cible==30 for respondent, and for cible>=40 for conjoint
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint * cible + niveau_vie, data=s, weights = s$weight))
# smaller effects and interaction with negative sign (before it was not significant)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 7%**) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + niveau_vie, data=s, weights = s$weight))
# result stronger for cible==30 for respondent, and for cible>=40 for conjoint
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint * cible + taxe_approbation + niveau_vie, data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 8%***) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 15%*** (resp. 8%***) more chance of acceptance with traite_cible (resp. traite_cible_conjoint)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + niveau_vie + I(niveau_vie^2), data=s, weights = s$weight))
##### Régressions: traite_cible ######
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '20_30', data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '30_40', data=s, weights = s$weight))
##### Régressions: traite_cible ######
# 20%***
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '20_30', data=s, weights = s$weight))
#
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '30_40', data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint, subset = categorie_cible == '40_50', data=s, weights = s$weight))
# smaller effects and interaction with negative sign (before it was not significant)
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint + cible + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
summary(lm((taxe_cible_approbation!='Non') ~ traite_cible * traite_cible_conjoint * cible + taxe_approbation + revenu + revenu_conjoint + I(revenu^2) + I(revenu_conjoint^2), data=s, weights = s$weight))
##### Régressions:  #####
cor(traite_cible, gagnant_cible_categorie)
##### Régressions:  #####
cor(s$traite_cible, s$gagnant_cible_categorie)
##### Régressions:  #####
cor(s$traite_cible, s$gagnant_cible_categorie!='Perdant')
cor(s$traite_cible_conjoint, s$gagnant_cible_categorie!='Perdant') # Les instrumments ne sont pas faibles
tsls1 <- lm(gagnant_cible_categorie ~ traite_cible + traite_cible_conjoint + taxe_approbation, subset= is.element(categorie_cible, c('20_30', '30_40', '40_50')), data=s, weights = s$weight)
tsls1 <- lm(gagnant_cible_categorie ~ traite_cible + traite_cible_conjoint + taxe_approbation, data=s, weights = s$weight)
tsls1 <- lm(gagnant_cible_categorie !='Perdant'~ traite_cible + traite_cible_conjoint + taxe_approbation, subset= is.element(categorie_cible, c('20_30', '30_40', '40_50')), data=s, weights = s$weight)
summary(tsls1)
summary(lm((taxe_cible_approbation!='Non') ~ gagnant.hat + taxe_approbation, subset = is.element(categorie_cible, c('20_30', '30_40', '40_50')), data=s, weights = s$weight))
decrit(s$gagnant_categorie)
# ##### Régressions: Feedback #####
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gain_taxe_feedback == 'Gagnant') + taxe_approbation, data=s, weights = s$weight))
# ##### Régressions: Feedback #####
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation, data=s, weights = s$weight))
# non perdant:
summary(lm((taxe_feedback_approbation != 'Non') ~ (gagnant_feedback_categorie != 'Perdant') + taxe_approbation, data=s, weights = s$weight))
# RDD simple - effet d'être gagnant
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant')  + simule_gain + I(simule_gain^2) + taxe_approbation, data=f, weights = f$weight))
# RDD simple - effet d'être gagnant
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant')  + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
# RDD simple - effet d'être gagnant
summary(lm((taxe_feedback_approbation == 'Oui') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation != 'Non') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
# ##### Régressions: Feedback #####
# OLS - s'estimer gagnant: +31% chance d'approuver / non perdant: +33% chance d'accepter
summary(lm((taxe_feedback_approbation == 'Oui') ~ (gagnant_feedback_categorie == 'Gagnant') + taxe_approbation, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation != 'Non') ~ (gagnant_feedback_categorie != 'Perdant') + taxe_approbation, data=s, weights = s$weight))
# RDD simple - effet d'être (simulé) gagnant: +9% approbation / +15%
summary(lm((taxe_feedback_approbation == 'Oui') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation != 'Non') ~ simule_gagnant + simule_gain + I(simule_gain^2) + taxe_approbation, data=s, weights = s$weight))
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant)
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor((s$gagnant_feedback_categorie == 'Gagnant'), s$simule_gagnant) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor((s$gagnant_feedback_categorie == 'Gagnant'), s$simule_gagnant==1) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==T) #
decrit(s$simule_gagnant)
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant, na.rm=T) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant, use = "all.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1, use = "all.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1, use = "complete.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1) #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant, use = "complete.obs") #
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(s$gagnant_feedback_categorie == 'Gagnant', s$simule_gagnant==1, use = "complete.obs") #
cor(s$gagnant_feedback_categorie != 'Perdant', s$simule_gagnant==1, use = "complete.obs") # 0.24
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight))
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight))
decrit(s$simule_gagnant)
decrit(gagnant_f.hat)
decrit(s$taxe_feedback_approbation)
decrit(s$taxe_feedback_approbation=='Oui')
decrit(s$variante_taxe_info)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = variante_taxe_info=='f', data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight))
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight))
tsls_rdd_feedback_2 <- lm(s$gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_2)
summary(lm((taxe_feedback_approbation != 'Non') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight))
decrit(s$simule_gagnant)
sf <- subset(s, !is.na(s$gagnant))
sf$dummy_approbation_feedback <- 1 * (sf$taxe_feedback_approbation=='Oui')
sf$dummy_declare_gain_taxe_feedback <- 1 * (sf$gain_taxe_feedback == 'Gagnant')
sf$gagnant <- as.numeric(sf$gagnant)
sf$gains_nets_estimes <- sf$hausse_depenses - 110 * sf$nb_adultes - 16.1
sf$gains_nets_estimes_2 <- sf$gains_nets_estimes^2
sf <- subset(s, !is.na(s$simule_gagnant))
sf$dummy_approbation_feedback <- 1 * (sf$taxe_feedback_approbation=='Oui')
sf$dummy_declare_gagnant_feedback_categorie <- 1 * (sf$gagnant_feedback_categorie == 'Gagnant')
sf$simule_gagnant <- as.numeric(sf$simule_gagnant)
sf$gains_nets_estimes <- sf$hausse_depenses - 110 * sf$nb_adultes - 16.1
sf$gains_nets_estimes_2 <- sf$gains_nets_estimes^2
tsls_rdd_feedback_1 <- lm(dummy_declare_gagnant_feedback_categorie ~ simule_gagnant + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
d_rdd_feedback.hat <- fitted.values(tsls_rdd_feedback_1)
tsls_rdd_feedback_2 <- lm(dummy_approbation_feedback ~ d_rdd_feedback.hat + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
sf <- subset(s, s$variante_taxe_info=='f')
sf$dummy_approbation_feedback <- 1 * (sf$taxe_feedback_approbation=='Oui')
sf$dummy_declare_gagnant_feedback_categorie <- 1 * (sf$gagnant_feedback_categorie == 'Gagnant')
sf$simule_gagnant <- as.numeric(sf$simule_gagnant)
sf$gains_nets_estimes <- sf$hausse_depenses - 110 * sf$nb_adultes - 16.1
sf$gains_nets_estimes_2 <- sf$gains_nets_estimes^2
ols_feedback <- lm(dummy_approbation_feedback ~ dummy_declare_gagnant_feedback_categorie + taxe_approbation, data=sf, weights = sf$weight)
summary(ols_feedback)
# RDD simple - effet d'être gagnant
rdd_feedback <- lm(dummy_approbation_feedback ~ simule_gagnant + gains_nets_estimes + gains_nets_estimes_2 + taxe_approbation, data=sf, weights = sf$weight)
summary(rdd_feedback)
# 2SLS avec 1st stage RDD - effet de se considérer gagnant
cor(sf$dummy_declare_gagnant_feedback_categorie, sf$gagnant)
tsls_rdd_feedback_1 <- lm(dummy_declare_gagnant_feedback_categorie ~ simule_gagnant + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
d_rdd_feedback.hat <- fitted.values(tsls_rdd_feedback_1)
tsls_rdd_feedback_2 <- lm(dummy_approbation_feedback ~ d_rdd_feedback.hat + taxe_approbation + gains_nets_estimes + gains_nets_estimes_2, data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), subset = (variante_taxe_info=='f'), data=s, weights = s$weight))
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, !is.na(s$simule_gagnant)), weights = s$weight))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, !is.na(s$simule_gagnant)))
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, !is.na(s$simule_gagnant))))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, s$variante_taxe_info=='f') )
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, s$variante_taxe_info=='f')))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s )
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s))
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, subset= s$variante_taxe_info=='f' )
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=s, subset= s$variante_taxe_info=='f'))
sf <- subset(s, s$variante_taxe_info=='f') # TODO: autre méthode, package?
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=subset(s, s$taxe_i) )
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight))
tsls_rdd_feedback_2 <- lm(s$gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
tsls_rdd_feedback_2 <- lm(s$gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
# 19%***
tsls_rdd_feedback_1 <- lm(s$gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
# 19%***
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +50%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=sf, weights = sf$weight))
tsls_rdd_feedback_1 <- lm(gagnant_feedback_categorie == 'Gagnant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=s, weights = s$weight)
summary(tsls_rdd_feedback_1)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_1)
# +49%***
summary(lm((taxe_feedback_approbation == 'Oui') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2),  data=s, weights = s$weight))
tsls_rdd_feedback_2 <- lm(gagnant_feedback_categorie != 'Perdant' ~ simule_gagnant + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight)
summary(tsls_rdd_feedback_2)
summary(tsls_rdd_feedback_2)
gagnant_f.hat <- fitted.values(tsls_rdd_feedback_2)
summary(lm((taxe_feedback_approbation != 'Non') ~ gagnant_f.hat + taxe_approbation + simule_gain + I(simule_gain^2), data=sf, weights = sf$weight))
##### Régressions: persistance des croyances #####
summary(lm((gagnant_feedback_categorie!='Perdant' - gagnant_feedback_categorie!='Perdant') ~ simule_gagnant, data=s, weights = s$weight))
summary(lm((taxe_feedback_approbation!='Non' - taxe_approbation!='Non') ~ simule_gagnant, data=s, weights = s$weight))
##### Régressions: persistance des croyances #####
summary(lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_feedback_categorie!='Perdant')) ~ simule_gagnant, data=s, weights = s$weight))
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ simule_gagnant, data=s, weights = s$weight))
decrit(s$gagnant_feedback_categorie)
##### Régressions: persistance des croyances #####
# TODO: rajouter contrôles
summary(lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_categorie!='Perdant')) ~ simule_gagnant, data=s, weights = s$weight))
Dgagnant.hat <- fitted.values(croyances_1)
croyances_1 <- lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_categorie!='Perdant')) ~ simule_gagnant, data=s, weights = s$weight)
summary(croyances_1)
Dgagnant.hat <- fitted.values(croyances_1)
summary(lm((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=s, weights = s$weight))
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=s, weights = s$weight))
##### Régressions: persistance des croyances #####
# apprendre qu'on est (simulé) gagnant augmente la croyance de ne pas perdre de 23%
croyances_1 <- lm(((gagnant_feedback_categorie!='Perdant') - (gagnant_categorie!='Perdant')) ~ simule_gagnant, data=sf, weights = sf$weight)
summary(croyances_1)
Dgagnant.hat <- fitted.values(croyances_1)
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=sf, weights = sf$weight))
summary(croyances_1)
# apprendre qu'on est (simulé) gagnant augmente l'acceptation de 9%***
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ simule_gagnant, data=s, weights = s$weight)) # TODO: rajouter contrôles
0.09224/0.22634
# comprendre qu'on est non perdant augmente l'approbation de 41%*** = 9/0.23
summary(lm(((taxe_feedback_approbation!='Non') - (taxe_approbation!='Non')) ~ Dgagnant.hat, data=sf, weights = sf$weight))
0.09224/0.22634
s$feedback_confirme <- (s$gagnant_categorie=='Gagnant' & s$simule_gain==1) | (s$gagnant_categorie=='Perdant' & s$simule_gain==0)
s$feedback_infirme <- (s$gagnant_categorie=='Perdant' & s$simule_gain==1) | (s$gagnant_categorie=='Gagnant' & s$simule_gain==0)
summary(lm((taxe_feedback_approbation=='Oui' - taxe_approbation=='Oui') ~ feedback_confirme + feedback_infirme, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ feedback_confirme + feedback_infirme, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ feedback_confirme, data=s, weights=s$weight))
decrit(s$feedback_confirme)
source("packages_functions.R")
decrit(s$feedback_confirme)
decrit(s$gagnant_categorie)
decrit(s$simule_gain)
s$feedback_confirme <- (s$gagnant_categorie=='Gagnant' & s$simule_gagant==1) | (s$gagnant_categorie=='Perdant' & s$simule_gagant==0)
s$feedback_infirme <- (s$gagnant_categorie=='Perdant' & s$simule_gagant==1) | (s$gagnant_categorie=='Gagnant' & s$simule_gagant==0)
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ feedback_confirme + feedback_infirme, data=s, weights=s$weight))
decrit(s$feedback_confirme)
s$feedback_confirme <- (s$gagnant_categorie=='Gagnant' & s$simule_gagnant==1) | (s$gagnant_categorie=='Perdant' & s$simule_gagnant==0)
s$feedback_infirme <- (s$gagnant_categorie=='Perdant' & s$simule_gagnant==1) | (s$gagnant_categorie=='Gagnant' & s$simule_gagnant==0)
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ feedback_confirme + feedback_infirme, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ I(feedback_confirme - feedback_infirme), data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ I(feedback_confirme - feedback_infirme)*(s$gagnant_categorie=='Perdant'), data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ simule_gagnant*(gagnant_categorie=='Perdant'), data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ simule_gagnant*gagnant_categorie, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ gagnant_categorie, subset = simule_gagnant==1, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ gagnant_categorie=='Gagnant', subset = simule_gagnant==1, data=s, weights=s$weight))
#
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ gagnant_categorie!='Perdant', subset = simule_gagnant==0, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ gagnant_categorie=='Gagnant', subset = simule_gagnant==0, data=s, weights=s$weight))
# Signe > 0 indique biais de confirmation: ~ 0.03 dans les deux
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ gagnant_categorie!='Perdant', subset = simule_gagnant==1, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ simule_gagnant*gagnant_categorie, data=s, weights=s$weight))
summary(lm(((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ simule_gagnant*(gagnant_categorie=='Gagnant'), data=s, weights=s$weight))
decrit(s$gain)
summary(lm((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ 0 + simule_gagnant, subset=gain=='0', data=s, weights=s$weight))
summary(lm(I(taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ 0 + simule_gagnant, subset=gain=='0', data=s, weights=s$weight))
summary(lm(I((taxe_feedback_approbation=='Oui') - (taxe_approbation=='Oui')) ~ 0 + simule_gagnant, subset=gain=='0', data=s, weights=s$weight))
summary(lm(update_correct_large ~ simule_gagnant*gagnant_categorie, data=s, weights = s$weight))
s$update_correct <- ((s$simule_gagnant==1 & s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant')
+ (s$simule_gagnant==0 & s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant')
- (s$simule_gagnant==1 & s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant')
- (s$simule_gagnant==0 & s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant'))
s$update_correct_large <- ((s$simule_gagnant==1 & ((s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant') | (s$gagnant_feedback_categorie!='Perdant' & s$gagnant_categorie=='Perdant')))
+ (s$simule_gagnant==0 & ((s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant') | (s$gagnant_feedback_categorie!='Gagnant' & s$gagnant_categorie=='Gagnant')))
- (s$simule_gagnant==1 & ((s$gagnant_feedback_categorie=='Perdant' & s$gagnant_categorie!='Perdant') | (s$gagnant_feedback_categorie!='Gagnant' & s$gagnant_categorie=='Gagnant')))
- (s$simule_gagnant==0 & ((s$gagnant_feedback_categorie=='Gagnant' & s$gagnant_categorie!='Gagnant') | (s$gagnant_feedback_categorie!='Perdant' & s$gagnant_categorie=='Perdant'))))
summary(lm(update_correct_large ~ simule_gagnant*gagnant_categorie, data=s, weights = s$weight))
# Tout est significatif. Ceux qui gagnent (simulé) updatent moin correctement, ceux qui croient perdrent aussi.
summary(lm(update_correct ~ simule_gagnant*gagnant_categorie, data=s, weights = s$weight))
# Tout est significatif. Ceux qui gagnent (simulé) updatent moin correctement, ceux qui croient perdrent aussi.
summary(lm(update_correct_large ~ simule_gagnant*gagnant_categorie, data=s, weights = s$weight))
summary(lm(update_correct ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct ~ gagnant_categorie=='Gagnant', data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', data=s, weights = s$weight))
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
summary(lm(update_correct ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
summary(lm(update_correct_large ~ gagnant_categorie!='Perdant', data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', data=s, weights = s$weight))
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
summary(lm(update_correct ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
summary(lm(update_correct_large ~ gagnant_categorie!='Perdant', data=s, weights = s$weight))
summary(lm(update_correct_large ~ gagnant_categorie!='Perdant', subset = feedback_infirme==T, data=s, weights = s$weight))
summary(lm(update_correct ~ gagnant_categorie!='Perdant', subset = feedback_infirme==T, data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large>0 ~ gagnant_categorie=='Gagnant', data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', data=s, weights = s$weight))
summary(lm(update_correct_large>0 ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
summary(lm(update_correct>0 ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', subset = feedback_confirme==T, data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large>0 ~ gagnant_categorie=='Gagnant', subset = feedback_confirme==T, data=s, weights = s$weight))
decrit(s$update_correct)
decrit(s$update_correct_large)
s$update_necessaire <- (s$simule_gagnant==1 & s$gagnant_categorie=='Perdant') | (s$simule_gagnant==0 & s$gagnant_categorie=='Gagnant')
s$update_necessaire_large <- (s$simule_gagnant==1 & s$gagnant_categorie!='Gagnant') | (s$simule_gagnant==0 & s$gagnant_categorie!='Perdant')
decrit(s$update_necessaire)
decrit(s$update_necessaire__large)
s$update_necessaire_large <- (s$simule_gagnant==1 & s$gagnant_categorie!='Gagnant') | (s$simule_gagnant==0 & s$gagnant_categorie!='Perdant')
decrit(s$update_necessaire__large)
decrit(s$update_necessaire_large)
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', data=s, weights = s$weight))
decrit(s$update_correct[s$gagnant_categorie=='Gagnant' & s$simule_gagnant==1])
decrit(s$update_correct[s$gagnant_categorie=='Gagnant' & s$simule_gagnant==0])
decrit(s$update_correct[s$gagnant_categorie!='Gagnant' & s$simule_gagnant==0])
decrit(s$update_correct[s$gagnant_categorie=='Perdant' & s$simule_gagnant==0])
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie, subset = feedback_infirme==T, data=s, weights = s$weight))
summary(lm(update_correct ~ gagnant_categorie=='Gagnant', subset = feedback_infirme==T, data=s, weights = s$weight))
s$feedback_confirme <- (s$gagnant_categorie=='Gagnant' & s$simule_gagnant==1) | (s$gagnant_categorie=='Perdant' & s$simule_gagnant==0)
s$feedback_infirme <- (s$gagnant_categorie=='Perdant' & s$simule_gagnant==1) | (s$gagnant_categorie=='Gagnant' & s$simule_gagnant==0)
s$feedback_confirme_large <- s$feedback_confirme | (s$gagnant_categorie!='Perdant' & s$simule_gagnant==1) | (s$gagnant_categorie!='Gagnant' & s$simule_gagnant==0)
s$feedback_infirme_large <- s$feedback_infirme_large | (s$gagnant_categorie!='Perdant' & s$simule_gagnant==0) | (s$gagnant_categorie!='Gagnant' & s$simule_gagnant==1)
label(s$feedback_confirme) <- "feedback_confirme: Indicatrice de se penser et être simulé gagnant/perdant (gagnant_categorie, simule_gagnant)"
label(s$feedback_infirme) <- "feedback_infirme: Indicatrice de se penser gagnant et être simulé perdant, ou l'inverse (gagnant_categorie, simule_gagnant)"
label(s$feedback_confirme_large) <- "feedback_confirme_large: Indicatrice de se penser non perdant et être simulé gagnant, ou de se penser non gagnant et être simulé perdant (gagnant_categorie, simule_gagnant)"
label(s$feedback_infirme_large) <- "feedback_infirme_large: Indicatrice de se penser non gagnant et être simulé gagnant, ou de se penser non perdant et être simulé perdant (gagnant_categorie, simule_gagnant)"
s$feedback_infirme_large <- s$feedback_infirme | (s$gagnant_categorie!='Perdant' & s$simule_gagnant==0) | (s$gagnant_categorie!='Gagnant' & s$simule_gagnant==1)
label(s$feedback_infirme_large) <- "feedback_infirme_large: Indicatrice de se penser non gagnant et être simulé gagnant, ou de se penser non perdant et être simulé perdant (gagnant_categorie, simule_gagnant)"
# Les gens qui se croient gagnants updatent plus correctement que les autres
summary(lm(update_correct_large ~ gagnant_categorie=='Gagnant', subset = feedback_infirme_large==T, data=s, weights = s$weight)) # Non affectés exclus par feedback_infirme
