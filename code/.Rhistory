label(s[[204]]) <<- "schiste_cc: Le répondant estime que l'idée que le gaz de schiste permettrait de lutter contre le changement climatique est valable / malvenue / il ne sait pas - Q198"
names(s)[205] <<- "transports_distance_choix"
label(s[[205]]) <<- "transports_distance_choix: Le répondant peut estimer la distance de l'arrêt de transport en commun le plus proche de chez lui en minutes de marche, ou il ne sait pas - Q42"
names(s)[206] <<- "transports_distance"
label(s[[206]]) <<- "transports_distance: L'arrêt de transport en commun le plus proche de chez le répondant est à X minutes de marche - Q42"
names(s)[207] <<- "transports_frequence"
label(s[[207]]) <<- "transports_frequence: Le moyen de transports en commun le plus proche de chez le répondant passe en moyenne moins de trois fois par jours / entre quatre fois par jour et une fois par heure / une ou deux fois par heure / plus que trois fois par heure / NSP - Q43"
names(s)[208] <<- "transports_avis"
label(s[[208]]) <<- "ransports_avis: Le répondant estime l'offre de transports en commun là où il habite comme étant satisfaisante / convenable / limitée / insuffisante / NSP - Q41"
names(s)[209] <<- "transports_travail"
label(s[[209]]) <<- "transports_travail: Le répondant utilise principalement (la voiture/les TC/la marche ou le vélo/un deux roues motorisé/le covoiturage/non conerné) pour ses trajets domiciles-travail (ou études) - Q39"
names(s)[210] <<- "transports_courses"
label(s[[210]]) <<- "transports_courses: Le répondant utilise principalement (la voiture/les TC/la marche ou le vélo/un deux roues motorisé/le covoiturage/non conerné) pour faire ses courses - Q39"
names(s)[211] <<- "transports_loisirs"
label(s[[211]]) <<- "transports_loisirs~ Le répondant utilise principalement (la voiture/les TC/la marche ou le vélo/un deux roues motorisé/le covoiturage/non conerné) pour ses loisirs (hors vacances) - Q39"
names(s)[212] <<- "transports_travail_commun"
label(s[[212]]) <<- "transports_travail_commun: Sans changer de logement ni de lieu de travail, il serait possible pour le répondant prenant sa voiture (Non/Oui mais ça l'embetterait/Oui ça ne lui poserait pas de grande difficulté/NSP) de prendre les transports en commun pour ses trajets domicile-travail - Q40"
names(s)[213] <<- "transports_travail_actif"
label(s[[213]]) <<- "transports_travail_actif: Sans changer de logement ni de lieu de travail, il serait possible pour le répondant prenant sa voiture (Non/Oui mais ça l'embetterait/Oui ça ne lui poserait pas de grande difficulté/NSP) d'effectuer ses trajets domicile-travail en marchant ou en vélo - Q40"
names(s)[214] <<- "interet_politique"
label(s[[214]]) <<- "interet_politique: Le répondant est intéressé par la politique (Presque pas/Un peu/Beaucoup) - Q32"
names(s)[215] <<- "extr_gauche"
label(s[[215]]) <<- "extr_gauche: Le répondant se considère comme étant d'extrême gauche - Q34"
names(s)[216] <<- "gauche"
label(s[[216]]) <<- "gauche: Le répondant se considère comme étant de gauche - Q34"
names(s)[217] <<- "centre"
label(s[[217]]) <<- "centre: Le répondant se considère comme étant du centre - Q34"
names(s)[218] <<- "droite"
label(s[[218]]) <<- "droite: Le répondant se considère comme étant de droite - Q34"
names(s)[219] <<- "extr_droite"
label(s[[219]]) <<- "extr_droite: Le répondant se considère comme étant d'extrême droite - Q34"
names(s)[220] <<- "conservateur"
label(s[[220]]) <<- "conservateur: Le répondant se considère comme étant conservateur - Q34"
names(s)[221] <<- "liberal"
label(s[[221]]) <<- "liberal: Le répondant se considère comme étant libéral - Q34"
names(s)[222] <<- "humaniste"
label(s[[222]]) <<- "humaniste: Le répondant se considère comme étant humaniste - Q34"
names(s)[223] <<- "patriote"
label(s[[223]]) <<- "patriote: Le répondant se considère comme étant patriote - Q34"
names(s)[224] <<- "apolitique"
label(s[[224]]) <<- "apolitique: Le répondant se considère comme étant apolitique - Q34"
names(s)[225] <<- "ecologiste"
label(s[[225]]) <<- "ecologiste: Le répondant se considère comme étant écologiste - Q34"
names(s)[226] <<- "actualite"
label(s[[226]]) <<- "actualite: Le répondant se tient principalement informé de l'actualité via la télévision / la presse (écrite ou en ligne) / les réseaux sociaux / la radio - Q182"
names(s)[227] <<- "gilets_jaunes_dedans"
label(s[[227]]) <<- "gilets_jaunes_dedans: Le répondant déclare faire partie des gilets jaunes - Q35"
names(s)[228] <<- "gilets_jaunes_soutien"
label(s[[228]]) <<- "gilets_jaunes_soutien: Le répondant soutient les gilets jaunes - Q35"
names(s)[229] <<- "gilets_jaunes_compris"
label(s[[229]]) <<- "gilets_jaunes_compris: Le répondant comprend les gilets jaunes - Q35"
names(s)[230] <<- "gilets_jaunes_oppose"
label(s[[230]]) <<- "gilets_jaunes_oppose: Le répondant est opposé aux gilets jaunes - Q35"
names(s)[231] <<- "gilets_jaunes_NSP"
label(s[[231]]) <<- "gilets_jaunes_NSP: Le répondant ne sait pas s'il fait partie / s'il soutient / s'il comprend / s'il s'oppose aux gilets jaunes - Q35"
names(s)[232] <<- "transferts_inter_a"
label(s[[232]]) <<- "transferts_inter_a: ~ Transferts internationaux - approbation (Approuveriez-vous le transfert de 5% des revenus des pays riches aux pays pauvres ?: Oui/Non/NSP) - Q47"
names(s)[233] <<- "transferts_inter_a_info"
label(s[[233]]) <<- "transferts_inter_a_info: ~ Transferts internationaux avec information sur Aide Publique au Développement (0.3% PIB) - approbation du transfert de 5% des revenus des pays riches aux pays pauvres ? - Q200"
names(s)[234] <<- "premier_clic_depenses"
label(s[[234]]) <<- ""
names(s)[235] <<- "dernier_clic_depenses"
label(s[[235]]) <<- ""
names(s)[236] <<- "duree_depenses"
label(s[[236]]) <<- ""
names(s)[237] <<- "nombre_clics_depenses"
label(s[[237]]) <<- ""
names(s)[238] <<- "depenses_confiant"
label(s[[238]]) <<- "depenses_confiant: À quel point êtes-vous confiant.e dans le fait que l'évolution des dépenses publiques que vous venez de proposer serait souhaitable ? Assez/Pas vraiment confiant.e/NSP - Q198"
names(s)[239] <<- "compris_depenses"
label(s[[239]]) <<- "compris_depenses: Avez-vous compris le graphique et les curseurs interactifs [concernant les dépenses publiques] ? Oui/Non/Bug - Q200"
names(s)[240] <<- "premier_clic_champ_libre"
label(s[[240]]) <<- ""
names(s)[241] <<- "dernier_clic_champ_libre"
label(s[[241]]) <<- ""
names(s)[242] <<- "duree_champ_libre"
label(s[[242]]) <<- ""
names(s)[243] <<- "nombre_clics_champ_libre"
label(s[[243]]) <<- ""
names(s)[244] <<- "champ_libre"
label(s[[244]]) <<- ""
names(s)[245] <<- "depense_totale"
label(s[[245]]) <<- "depense_totale: Montant de la dépense publique totale souhaitée (en G€ = Mds€) - Q196"
names(s)[246] <<- "depense_sante"
label(s[[246]]) <<- "depense_sante: Système de santé - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[247] <<- "depense_retraites"
label(s[[247]]) <<- "depense_retraites: Retraites - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[248] <<- "depense_protection"
label(s[[248]]) <<- "depense_protection: Protection sociale (chômage, allocs, APL, RSA...) - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[249] <<- "depense_education"
label(s[[249]]) <<- "depense_education: Éducation - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[250] <<- "depense_recherche"
label(s[[250]]) <<- "depense_recherche: Recherche scientifique - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[251] <<- "depense_loisirs"
label(s[[251]]) <<- "depense_loisirs: Loisirs : culture, médias et sport - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[252] <<- "depense_infrastructures"
label(s[[252]]) <<- "depense_infrastructures: Infrastructures - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[253] <<- "depense_justice"
label(s[[253]]) <<- "depense_justice: Justice - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[254] <<- "depense_armee"
label(s[[254]]) <<- "depense_armee: Défense et armée - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[255] <<- "depense_securite"
label(s[[255]]) <<- "depense_securite: Sécurité intérieure (police, gendarmerie) - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[256] <<- "depense_aide"
label(s[[256]]) <<- "depense_aide: Aides aux pays pauvres - Montant de la dépense publique souhaitée (en G€ = Mds€) - Q196"
names(s)[257] <<- "variation_totale"
label(s[[257]]) <<- "variation_totale: Variation de la dépense publique totale souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[258] <<- "variation_sante"
label(s[[258]]) <<- "variation_sante: Système de santé - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[259] <<- "variation_retraites"
label(s[[259]]) <<- "variation_retraites: Retraites - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[260] <<- "variation_protection"
label(s[[260]]) <<- "variation_protection: Protection sociale - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[261] <<- "variation_education"
label(s[[261]]) <<- "variation_education: Éducation - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[262] <<- "variation_recherche"
label(s[[262]]) <<- "variation_recherche: Recherche scientifique - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[263] <<- "variation_loisirs"
label(s[[263]]) <<- "variation_loisirs: Loisirs : culture, médias et sport - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[264] <<- "variation_infrastructures"
label(s[[264]]) <<- "variation_infrastructures: Infrastructures - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[265] <<- "variation_justice"
label(s[[265]]) <<- "variation_justice: Justice - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[266] <<- "variation_armee"
label(s[[266]]) <<- "variation_armee: Défense et armée - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[267] <<- "variation_securite"
label(s[[267]]) <<- "variation_securite: Sécurité intérieure (police, gendarmerie) - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[268] <<- "variation_aide"
label(s[[268]]) <<- "variation_aide: Aides aux pays pauvres - Variation de la dépense publique souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[269] <<- "recette_totale"
label(s[[269]]) <<- "recette_totale: Recette publique totale souhaitée (en G€) - Q196"
names(s)[270] <<- "variation_recette"
label(s[[270]]) <<- "variation_recette: Variation de la recette publique totale souhaitée (en % par rapport à l'actuelle - curseur 0-20%) - Q196"
names(s)[271] <<- "budget_equilibre"
label(s[[271]]) <<- "budget_equilibre: Niveau de dépenses publiques requis pour atteindre l'équilibre budgétaire, d'après les dépenses souhaitées (en G€) - Q196"
names(s)[272] <<- "regle_or"
label(s[[272]]) <<- "regle_or: Niveau de dépenses publiques requis pour atteindre un déficit de 3% de PIB, d'après les dépenses souhaitées (en G€) - Q196"
names(s)[273] <<- "id"
label(s[[273]]) <<- "ID"
names(s)[274] <<- "duree"
label(s[[274]]) <<- "duree: Durée de complétion du questionnaire (pn secondes)"
names(s)[275] <<- "exclu"
label(s[[275]]) <<- "exclu: Vide si tout est ok (Screened/QuotaMet sinon)"
names(s)[276] <<- "taille_agglo"
label(s[[276]]) <<- "taille_agglo: Taille d'agglomération: [1;5]=rural/-20k/20-100k/+100k/Région parisienne - embedded data"
names(s)[277] <<- "region"
label(s[[277]]) <<- "region: Région calculée à partir du code postal: 9 nouvelles régions de l'hexagone + autre (ARA/Est/Ouest/Centre/Nord/IDF/SO/Occ/PACA/autre)"
#   var ARA = ['01', '03', '07', '15', '26', '38', '42', '43', '63', '69', '73', '74'];
# 	var Est = ['21', '25', '39', '58', '70', '71', '89', '90', '08', '10', '51', '52', '54', '55', '57', '67', '68', '88'];
# 	var Ouest = ['22', '29', '35', '56', '14', '27', '50', '61', '76' ];
# 	var Centre = ['18', '28', '36', '37', '41', '45', '44', '49', '53', '72', '85'];
# 	var Nord = ['02', '59', '60', '62', '80'];
# 	var IDF = ['75', '77', '78', '91', '92', '93', '94', '95'];
# 	var SO = ['16', '17', '19', '23', '24', '33', '40', '47', '64', '79', '86', '87'];
# 	var Occ = ['09', '11', '12', '30', '31', '32', '34', '46', '48', '65', '66', '81', '82'];
# 	var PACA = [ '04', '05', '06', '13', '83', '84'];
names(s)[278] <<- "schiste_traite"
label(s[[278]]) <<- "schiste_traite: Département du répondant potentiellement concerné par l'exploitation du gaz de schiste - Q197 embedded data"
names(s)[279] <<- "gaz"
label(s[[279]]) <<- "gaz: Indicatrice que chauffage = 'Gaz de ville' ou 'Butane, propane, gaz en citerne'"
names(s)[280] <<- "fioul"
label(s[[280]]) <<- "fioul: Indicatrice que chauffage = 'Fioul, mazout, pétrole'"
names(s)[281] <<- "nb_vehicules"
label(s[[281]]) <<- "nb_vehicules: Nombre de véhicules motorisés dont dispose le ménage - Q37"
names(s)[282] <<- "hausse_depenses"
label(s[[282]]) <<- "hausse_depenses: Hausse des dépenses énergétiques simulées pour le ménage, suite à la taxe (élasticité de 0.4/0.2 pour carburants/chauffage)"
names(s)[283] <<- "gagnant"
label(s[[283]]) <<- "gagnant: Indicatrice sur la prédiction que le ménage serait gagnant avec la taxe compensée, d'après nos simulations"
names(s)[284] <<- "hausse_chauffage"
label(s[[284]]) <<- "hausse_chauffage:  Hausse des dépenses de chauffage simulées pour le ménage, suite à la taxe (élasticité de 0.2)"
names(s)[285] <<- "hausse_diesel"
label(s[[285]]) <<- "hausse_diesel: Hausse des dépenses de diesel simulées pour le ménage, suite à la taxe (élasticité de 0.4)"
names(s)[286] <<- "hausse_essence"
label(s[[286]]) <<- "hausse_essence: Hausse des dépenses d'essence simulées pour le ménage, suite à la taxe (élasticité de 0.4)"
names(s)[287] <<- "en_position_0"
label(s[[287]]) <<- "en_position_0: Catégorie de dépense affichée en position 0 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[288] <<- "en_position_1"
label(s[[288]]) <<- "en_position_1: Catégorie de dépense affichée en position 1 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[289] <<- "en_position_2"
label(s[[289]]) <<- "en_position_2: Catégorie de dépense affichée en position 2 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[290] <<- "en_position_3"
label(s[[290]]) <<- "en_position_3: Catégorie de dépense affichée en position 3 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[291] <<- "en_position_4"
label(s[[291]]) <<- "en_position_4: Catégorie de dépense affichée en position 4 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[292] <<- "en_position_5"
label(s[[292]]) <<- "en_position_5: Catégorie de dépense affichée en position 5 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[293] <<- "en_position_6"
label(s[[293]]) <<- "en_position_6: Catégorie de dépense affichée en position 6 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[294] <<- "en_position_7"
label(s[[294]]) <<- "en_position_7: Catégorie de dépense affichée en position 7 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[295] <<- "en_position_8"
label(s[[295]]) <<- "en_position_8: Catégorie de dépense affichée en position 8 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[296] <<- "en_position_9"
label(s[[296]]) <<- "en_position_9: Catégorie de dépense affichée en position 9 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[297] <<- "en_position_10"
label(s[[297]]) <<- "en_position_10: Catégorie de dépense affichée en position 10 (0: sante; 1: retraites; 2: protection; 3: education; 4: recherche; 5: loisirs; 6: infrastructures; 7: justice; 8: armee; 9: securite; 10: aide)"
names(s)[298] <<- "info_CC"
label(s[[298]]) <<- "info_CC: Indicatrice aléatoire que l'information sur le changement climatique a été présentée (150k morts/an monde, tendance +5/+8°C en 2100/2250, +2°C techniquement possible, sinon extinctions, intensification catastrophes, +270 M subissant inondations en 2100, + de conflits et migrations)"
names(s)[299] <<- "info_PM"
label(s[[299]]) <<- "info_PM: Indicatrice aléatoire que l'information sur les particules fines a été présentée (48k morts/an en France, - 9 mois d'espérance vie, réduire conso fuel -> réduire pbs particules fines"
names(s)[300] <<- "variante_monetaire"
label(s[[300]]) <<- "variante_monetaire: Indicatrice aléatoire que les questions sur les perdant_/gagnant_ de la taxe portent sur le pouvoir d'achat ou non (0: quels seraient les gagnants-perdant/1: quelles catégories gagneraient-perdraient en pouvoir d'achat)"
names(s)[301] <<- "cible20"
label(s[[301]]) <<- "cible20: Indicatrice aléatoire que la réforme ciblée compense les 20% les plus modestes (20/30/40/50)"
names(s)[302] <<- "cible30"
label(s[[302]]) <<- "cible30: Indicatrice aléatoire que la réforme ciblée compense les 30% les plus modestes (20/30/40/50)"
names(s)[303] <<- "cible40"
label(s[[303]]) <<- "cible40: Indicatrice aléatoire que la réforme ciblée compense les 40% les plus modestes (20/30/40/50)"
names(s)[304] <<- "cible50"
label(s[[304]]) <<- "cible50: Indicatrice aléatoire que la réforme ciblée compense les 50% les plus modestes (20/30/40/50)"
names(s)[305] <<- "progressivite_feedback_avec_info"
label(s[[305]]) <<- "progressivite_feedback_avec_info: ~ Une hausse de la taxe carbone compensée avantagerait les plus modestes - après information sur la progressivité - Q208"
names(s)[306] <<- "progressivite_feedback_sans_info"
label(s[[306]]) <<- "progressivite_feedback_sans_info: ~ Une hausse de la taxe carbone compensée avantagerait les plus modestes - sans information sur la progressivité - Q207"
names(s)[307] <<- "progressivite_progressif"
label(s[[307]]) <<- "progressivite_progressif: Une hausse de la taxe carbone compensée avantagerait les plus modestes - après information sur la progressivité - Q206"
names(s)[308] <<- "apres_modifs"
label(s[[308]]) <<- "apres_modifs: Indicatrice de la seconde moitié de l'échantillon, avec des questions et informations sur la progressivité (progressivite_feedback_avec/sans_info, progressivite_progressif) et une reformulation des questions transferts_inter (aide publique au développement des Français)"
s <<- s[,c(1,2,7,20:308)]
}
prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=FALSE)
sa <- s
prepare_s()
decrit(s$apres_modifs)
all(s$date==s$endDate)
head(s$date)
head(s$endDate)
tail(s$date, 20)
s$variante_progressivite[s$date=="2019-02-27 11:26:51"]
s$progressivite_feedback_sans_info[s$date=="2019-02-27 11:26:51"]
s$progressivite_feedback_avec_info[s$date=="2019-02-27 11:26:51"]
s$apres_modifs[s$date=="2019-02-27 11:26:51"]
s$gain_taxe_feedback[s$date=="2019-02-27 11:26:51"]
decrit(s$variante_progressivite)
decrit(s$progressivite)
decrit(s$progressivite_feedback_avec_info)
decrit(s$progressivite_progressif)
decrit(s$variante_taxe_info)
convert_s <- function() {
# lab <- label(s$csp)
# s$csp <<- factor(s$csp, levels=c(levels(s$csp), "Cadres", "Indépendants", "Ouvriers", 'Inactifs', "Professions intermédiaires", "Retraités", "Employés", "Agriculteurs"))
# s$csp <<- as.character(s$csp)
s$csp[grepl("cadre",s$csp)] <<- "Cadre"
s$csp[grepl("Artisan",s$csp)] <<- "Indépendant"
s$csp[grepl("iaire",s$csp)] <<- "Intermédiaire"
s$csp[grepl("etrait",s$csp)] <<- "Retraité"
s$csp[grepl("Employ",s$csp)] <<- "Employé"
s$csp[grepl("Agricul",s$csp)] <<- "Agriculteur"
s$csp[grepl("Ouvrier",s$csp)] <<- "Ouvrier"
s$csp[grepl("Inactif",s$csp)] <<- "Inactif"
# label(s$csp) <<- lab
# s$csp <<- as.factor(s$csp)
for (i in 1:length(s)) {
# levels(s[[i]]) <<- c(levels(s[[i]]), "NSP")
s[[i]][s[[i]] == "NSP (Ne sais pas, ne se prononce pas)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sait pas, ne se prononce pas)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sais pas, ne se prononce pas)."] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sait pas, ne se prononce pas)."] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sais pas, ne souhaite pas répondre)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sait pas, ne veut pas répondre)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne veut pas répondre)"] <<- "NSP"
}
s$variante_transferts_inter[!is.na(s$transferts_inter_a) | !is.na(s$transferts_inter_a_info)] <<- "a"
s$transferts_inter <<- NA
s$transferts_inter_info[!is.na(s$transferts_inter_a_info)] <<- TRUE
s$transferts_inter_info[!is.na(s$transferts_inter_a)] <<- FALSE
s$transferts_inter[!is.na(s$transferts_inter_a_info)] <<- s$transferts_inter_a_info[!is.na(s$transferts_inter_a_info)]
s$transferts_inter[!is.na(s$transferts_inter_a)] <<- s$transferts_inter_a[!is.na(s$transferts_inter_a)]
label(s$variante_transferts_inter) <<- "variante_transferts_inter: Variante dans la formulation de transferts_inter; s/i/c/a: simple/intermédiaire/complète/approbation: (argument pauvreté,esponsabilité climatique des pays riches)/complète (i+ argument colonisation, esclavage)/pour ou contre un transfert de 5% des revenus des pays riches vers les pays pauvres (seulement en vague 2); Vague 1: curseur/NSP, Vague 2: champ de saisie (quelques données manquantes) - Q5,Q6,Q78"
label(s$transferts_inter) <<- "transferts_inter: Approbation d'un transfert de 5% des revenus des pays riches vers les pays pauvres"
# s$transferts_inter <<- as.item(as.numeric(s$transferts_inter), missing.values=-1, annotation="transferts_inter: Transferts internationaux, variantes (simple) avec curseur 0-20% (s) ou champ (Quelle % des revenus des pays riches devrait être transférée aux pays pauvres ?) - Q73,91")
s$revenu <<- clean_number(s$revenu, high_numbers='divide')
s$rev_tot <<- clean_number(s$rev_tot, high_numbers='divide')
for (i in c( # TODO: check number outliers
"revenu", "rev_tot", "taille_menage", "nb_adultes", "nb_14_et_plus", "duree", "variation_aide", "depense_aide", "km_0", "km_1", "km_2", "conso_1", "conso_2", "surface", "emission_cible",
"depense_totale", "depense_sante", "depense_retraites", "depense_protection", "depense_education", "depense_recherche", "depense_loisirs",
"depense_infrastructures", "depense_justice", "depense_armee", "depense_securite", "depense_aide", "variation_totale", "variation_aide",
"variation_sante", "variation_retraites", "variation_protection", "recette_totale", "variation_recette", "budget_equilibre", "regle_or",
"variation_education", "variation_recherche", "variation_loisirs", "variation_infrastructures", "variation_justice", "variation_armee", "variation_securite",
"transports_distance", "duree_info_CC", "duree_info_CC_PM", "duree_info_PM", "duree_no_info", "duree_depenses", "duree_champ_libre",
"hausse_chauffage", "hausse_depenses", "hausse_diesel", "hausse_essence", "nb_vehicules", "en_position_0", "en_position_1", "en_position_2", "en_position_3",
"en_position_4", "en_position_5", "en_position_6", "en_position_7", "en_position_8", "en_position_9", "en_position_10"
)) {
lab <- label(s[[i]])
s[[i]] <<- as.numeric(as.vector(s[[i]]))
label(s[[i]]) <<- lab
}
for (j in c("taxe_efficace", "rattrapage_diesel", "enfant_CC", "mode_vie_ecolo", "schiste_approbation",
"transferts_inter_a", "transferts_inter_a_info", "transferts_inter", "taxe_approbation",
"taxe_feedback_approbation", "taxe_progressif_approbation", "taxe__20_approbation", "taxe_20_30_approbation",
"taxe_30_40_approbation", "taxe_40_50_approbation", "taxe_50_70_approbation", "taxe_70__approbation",
"progressivite_feedback_sans_info", "progressivite_feedback_avec_info", "progressivite_progressif"
)) {
s[j][[1]] <<- as.item(as.character(s[j][[1]]),
labels = structure(c("","Non","NSP","Oui"), names = c("NA","Non","NSP","Oui")),
missing.values = c("","NSP"), annotation=attr(s[j][[1]], "label"))
}
for (j in c("mode_chauffage", "chauffage", "parle_CC", "cause_CC", "effets_CC", "transports_frequence",
"schiste_CC", "transports_avis", "transports_travail_actif", "transports_travail_commun", "interet_politique",
"perte_tva", "perte_fuel", "perte_chauffage"
)) {
s[j][[1]] <<- as.item(as.character(s[j][[1]]),
labels = structure(levels(factor(s[j][[1]])), names = levels(factor(s[j][[1]]))),
missing.values = c("","NSP"), annotation=paste(attr(s[j][[1]], "label"), "(char)")) # TODO: pb
}
# TODO: as.item region_CC, gain_taxe_fuel, gain_taxe_chauffage, gain_taxe, gain_taxe_feedback, gain_taxe_progressif, gain_taxe_cible, interet politique, gilets jaunes, transports_travail_commun, transports_travail_actif?
for (j in names(s)) {
if (grepl('_perdant_|_gagnant_|_benefices_|_problemes_|ges_|responsable_|generation_CC|enfant_CC_pour|changer_|gilets_jaunes_|apres_modif', j)) {
s[[j]][s[[j]]!=""] <<- TRUE
s[[j]][is.na(s[[j]])] <<- FALSE
}
}
for (k in c("perte_tva", "perte_fuel", "perte_chauffage")) {
temp <-  2 * (s[[k]]=="Oui, beaucoup plus") + (s[[k]]=="Oui, un peu plus") - (s[[k]]=="Non, un peu moins") - 2 * (s[[k]]=="Non, beaucoup moins")
s[[k]] <<- as.item(temp, labels = structure(c(-2:2),
names = c("Beaucoup moins","Un peu moins","= Moyenne","Un peu plus","Beaucoup plus")),
# names = c("Non, beaucoup moins","Non, un peu moins","Autant que la moyenne","Oui, un peu plus","Oui, beaucoup plus")),
annotation=Label(s[[k]]))
}
for (k in c(131:139,141:148)) {
temp <-  2 * (s[k][[1]]=="Oui, tout à fait") + (s[k][[1]]=="Oui, plutôt") - (s[k][[1]]=="Non, pas vraiment") - 2 * (s[k][[1]]=="Non, pas du tout")
s[k][[1]] <<- as.item(temp, labels = structure(c(-2:2),
names = c("Pas du tout","Pas vraiment","Indifférent/NSP","Plutôt","Tout à fait")),
# names = c("Non, pas du tout","Non, pas vraiment","Indifférent ou Ne sais pas","Oui, plutôt","Oui, tout à fait")),
annotation=Label(s[k][[1]]))
}
temp <- (s$parle_CC=='Plusieurs fois par an') + 2*(s$parle_CC=='Plusieurs fois par mois') - (s$parle_CC=="NSP")
s$parle_CC <<- as.item(temp, labels = structure(c(-1:2),
names = c("NSP","Presque jamais","Plusieurs fois par an","Plusieurs fois par mois")),
missing.values = -1, annotation=Label(s$parle_CC))
temp <- grepl("Faibles", s$effets_CC) + 2*grepl("Graves", s$effets_CC) + 3*grepl("Désastreux", s$effets_CC) + 4*grepl("Cataclysmiques", s$effets_CC) - (s$effets_CC=="NSP")
s$effets_CC <<- as.item(temp, labels = structure(c(-1:4),
names = c("NSP","Insignifiants","Faibles","Graves","Désastreux","Cataclysmiques")),
# names = c("NSP","Insignifiants, voire bénéfiques","Faibles, car les humains sauraient vivre avec","Graves, car il y aurait plus de catastrophes naturelles","Désastreux, les modes de vie seraient largement altérés","Cataclysmiques, l'humanité disparaîtrait")),
missing.values = -1, annotation=Label(s$effets_CC))
temp <- (s$transports_frequence=="Entre quatre fois par jour et une fois par heure") + 2*(s$transports_frequence=="Une ou deux fois par heure") + 3*(s$transports_frequence=="Plus que trois fois par heure") - (s$transports_frequence=="NSP")
s$transports_frequence <<- as.item(temp, labels = structure(c(-1:3),
names = c("NSP","< 3/jour","1/h - 4/jour","1/h - 2/h","> 3/heure")),
# names = c("NSP","Moins de trois fois par jour","Entre quatre fois par jour et une fois par heure","Une ou deux fois par heure","Plus que trois fois par heure")),
missing.values = -1, annotation=Label(s$transports_frequence))
temp <- (s$transports_avis=="Limitée, mais suffisante") + 2*(s$transports_avis=="Convenable, mais devrait être accrue") + 3*(s$transports_avis=="Satisfaisante") - (s$transports_avis=="NSP")
s$transports_avis <<- as.item(temp, labels = structure(c(-1:3),
names = c("NSP","Insuffisante","Limitée","Convenable","Satisfaisante")),
# names = c("NSP","Insuffisante","Limitée, mais suffisante","Convenable, mais devrait être accrue","Satisfaisante")),
missing.values = -1, annotation=Label(s$transports_avis))
# s$compris_depenses <<- as.item(as.character(s$compris_depenses),
s$compris_depenses <<- as.item(as.character(s$compris_depenses),
labels = structure(c("","Oui","Non","Bug: le graphique ne s'est pas affiché correctement."), names = c("NA","Oui","Non","Bug")), annotation=attr(s$compris_depenses, "label"))
s$mode_chauffage <<- as.item(s$mode_chauffage,
labels = structure(c("","Chauffage individuel","Chauffage collectif", "NSP"), names = c("NA","individuel","collectif","NSP")), missing.values='NSP', annotation=Label(s$mode_chauffage))
s$chauffage <<- as.item(s$chauffage,
labels = structure(c("Gaz de ville", "Butane, propane, gaz en citerne", "Fioul, mazout, pétrole", "Électricité", "Bois, solaire, géothermie, aérothermie (pompe à chaleur)", "Autre","NSP"), names = c("Gaz réseau", "Gaz bouteille", "Fioul", "Électricité", "Bois, solaire...", "Autre", "NSP")), missing.values='NSP', annotation=Label(s$chauffage))
s$schiste_CC <<- as.item(s$schiste_CC,
labels = structure(c("","Elle est malvenue : il faudrait mettre fin aux émissions, pas seulement les ralentir","Elle est valable : toute baisse des émissions va dans la bonne direction", "NSP"), names = c("NA","malvenue","valable","NSP")), missing.values='NSP', annotation=Label(s$schiste_CC))
s$cause_CC <<- as.item(s$cause_CC,
labels = structure(c("n'est pas une réalité","est principalement dû à la variabilité naturelle du climat", "est principalement dû à l'activité humaine", "NSP"), names = c("n'existe pas","naturel","anthropique","NSP")), missing.values='NSP', annotation=Label(s$cause_CC))
s$gauche_droite <<- pmax(-2,pmin(2,-2 * grepl("extrême gauche", s$extr_gauche) - grepl("De gauche", s$gauche) + grepl("De droite", s$droite) + 2 * grepl("extrême droite", s$extr_droite)))
is.na(s$gauche_droite) <<- (s$gauche_droite == 0) & !grepl("centre", s$centre)
s$Gauche_droite <<- as.factor(s$gauche_droite)
s$gauche_droite <<- as.item(as.numeric(as.vector(s$gauche_droite)), labels = structure(c(-2:2),
names = c("Extrême gauche","Gauche","Centre","Droite","Extrême droite")), annotation=attr(s$gauche_droite, "label"))
levels(s$Gauche_droite) <<- c("Extreme-left", "Left", "Center", "Right", "Extreme-right", "Indeterminate")
s$Gauche_droite[is.na(s$Gauche_droite)] <<- "Indeterminate"
# temp <- label(s$diplome)
# s$diplome <<- factor(s$diplome, c("","Aucun diplôme","Brevet des collèges","CAP ou BEP","Baccalauréat","Bac +2 (BTS, DUT, DEUG, écoles de formation sanitaires et sociales...)","Bac +3 (licence...)","Bac +5 ou plus (master, école d'ingénieur ou de commerce, doctorat, médecine, maîtrise, DEA, DESS...)","NSP (Ne se prononce pas)") )
# label(s$diplome) <<- temp
# temp <- label(s$interet_politique)
# s$interet_politique <<- factor(s$interet_politique, c("","Beaucoup","Un peu","Presque pas (ou pas du tout)","NSP","NSP (Je ne veux pas répondre)","Q20 - À quel point êtes-vous intéressé·e par la politique ?"))
# label(s$interet_politique) <<- temp
s$revenu_conjoint <<- s$rev_tot - s$revenu
s$revdisp <<- round((s$rev_tot -  irpp(s$rev_tot, s$nb_adultes, s$taille_menage)))
s$uc <<- uc(s$taille_menage, s$nb_14_et_plus)
s$niveau_vie <<- s$revdisp / s$uc
s$Age <<- (s$age == "18 à 24 ans") + 2*(s$age == "25 à 34 ans") + 3.3*(s$age == "35 à 49 ans") + 4.6*(s$age == "50 à 64 ans") + 7*(s$age == "65 ans ou plus")
# s$age <<- as.factor(as.character(s$age))
s$Diplome <<- (s$diplome == "Brevet des collèges") + 2*(s$diplome=="CAP ou BEP") + 3*(s$diplome=="Baccalauréat") + 4*(s$diplome=="Bac +2 (BTS, DUT, DEUG, écoles de formation sanitaires et sociales...)") + 5*(s$diplome=="Bac +3 (licence...)") + 6*(s$diplome=="Bac +5 ou plus (master, école d'ingénieur ou de commerce, doctorat, médecine, maîtrise, DEA, DESS...)") - (s$diplome=="NSP (Ne se prononce pas)")
s$diplome4 <<- as.character(s$diplome)
s$diplome4[s$Diplome<2] <<- "Aucun diplôme ou brevet"
s$diplome4[s$Diplome>3] <<- "Supérieur"
# s$Region <<- as.factor(as.character(s$region))
# s$taille_agglo <<- as.factor(gsub("[[:alpha:] ]", "", s$taille_agglo))
# s <<- s[s$taille_agglo!="%1%",] # TODO: taille_agglo as.item
s$nb_vehicules <<- (s$nb_vehicules_texte=='Un') + 2*(s$nb_vehicules_texte=='Deux ou plus')
s$variante_partielle <<- 'NA'
s$variante_partielle[!is.na(s$gain_taxe_chauffage)] <<- 'c'
s$variante_partielle[!is.na(s$gain_taxe_fuel)] <<- 'f'
label(s$variante_partielle) <<- "variante_partielle: Variante aléatoire (c/f) de la taxe partielle sur le chauffage ou les carburants (=fuel)"
# s$gain_fuel <- NA
s$gain_fuel[s$gain_taxe_fuel=='Non affecté' & s$variante_partielle=='f'] <<- 0
s$gain_fuel[s$gain_taxe_fuel=='Gagnant' & s$variante_partielle=='f'] <<- 1 + as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_fuel_hausse[s$gain_taxe_fuel=='Gagnant' & s$variante_partielle=='f']))))/25
s$gain_fuel[s$gain_taxe_fuel=='Perdant' & s$variante_partielle=='f'] <<- - 1 - as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_fuel_baisse[s$gain_taxe_fuel=='Perdant' & s$variante_partielle=='f']))))/25
label(s$gain_fuel) <<- "gain_fuel: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe carburants compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
s$gain_chauffage[s$gain_taxe_chauffage=='Non affecté' & s$variante_partielle=='c'] <<- 0
s$gain_chauffage[s$gain_taxe_chauffage=='Gagnant' & s$variante_partielle=='c'] <<- 1 + as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_chauffage_hausse[s$gain_taxe_chauffage=='Gagnant' & s$variante_partielle=='c']))))/25
s$gain_chauffage[s$gain_taxe_chauffage=='Perdant' & s$variante_partielle=='c'] <<- - 1 - as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_chauffage_baisse[s$gain_taxe_chauffage=='Perdant' & s$variante_partielle=='c']))))/25
label(s$gain_chauffage) <<- "gain_fuel: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe chauffage compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
s$gain[s$gain_taxe=='Non affecté' & s$variante_partielle!='NA'] <<- 0
s$gain[s$gain_taxe=='Gagnant' & s$variante_partielle!='NA'] <<- 1 + as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_hausse[s$gain_taxe=='Gagnant' & s$variante_partielle!='NA']))))/50
s$gain[s$gain_taxe=='Perdant' & s$variante_partielle!='NA'] <<- - 1 - as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_baisse[s$gain_taxe=='Perdant' & s$variante_partielle!='NA']))))/50
label(s$gain) <<- "gain: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe carbone compensée, dans [-6;5] (seuils: -280/-190/-120/-70/-30/0/20/40/60/80)"
s$Elasticite_chauffage <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_chauffage))))
s$Elasticite_chauffage <<- (s$Elasticite_chauffage==0)*1.5 + (s$Elasticite_chauffage==3)*6.5 + (s$Elasticite_chauffage>3)*(s$Elasticite_chauffage + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_chauffage <<- - round(s$Elasticite_chauffage / 30, 2) # converts into elasticity
label(s$Elasticite_chauffage) <<- "Elasticite_chauffage: Élasticité-prix des dépenses de chauffage des Français, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 30%)"
s$Elasticite_chauffage_perso <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_chauffage_perso))))
s$Elasticite_chauffage_perso <<- (s$Elasticite_chauffage_perso==0)*1.5 + (s$Elasticite_chauffage_perso==3)*6.5 + (s$Elasticite_chauffage_perso>3)*(s$Elasticite_chauffage_perso + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_chauffage_perso <<- - round(s$Elasticite_chauffage_perso / 30, 2) # converts into elasticity
label(s$Elasticite_chauffage_perso) <<- "Elasticite_chauffage_perso: Élasticité-prix des dépenses de chauffage du ménage, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 30%)"
s$Elasticite_fuel <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_fuel))))
s$Elasticite_fuel <<- (s$Elasticite_fuel==0)*1.5 + (s$Elasticite_fuel==3)*6.5 + (s$Elasticite_fuel>3)*(s$Elasticite_fuel + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_fuel <<- - round(s$Elasticite_fuel / 30, 2) # converts into elasticity
label(s$Elasticite_fuel) <<- "Elasticite_fuel: Élasticité-prix des dépenses de carburants des Français, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 0.5€/L)"
s$Elasticite_fuel_perso <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_fuel_perso))))
s$Elasticite_fuel_perso <<- (s$Elasticite_fuel_perso==0)*1.5 + (s$Elasticite_fuel_perso==3)*6.5 + (s$Elasticite_fuel_perso>3)*(s$Elasticite_fuel_perso + 5) # Take the average of thresholds, take 40% for >30%
s$Elasticite_fuel_perso <<- - round(s$Elasticite_fuel_perso / 30, 2) # converts into elasticity
label(s$Elasticite_fuel_perso) <<- "Elasticite_fuel_perso: Élasticité-prix des dépenses de carburants du ménage, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 0.5€/L)"
s$variante_taxe_info <<- "p"
s$variante_taxe_info[s$gain_taxe_feedback!=""] <<- "f"
label(s$variante_taxe_info) <<- "variante_taxe_info: (f/p) Variante aléatoire entre f: feedback (=simulation, 2/3) et p: progressivité (1/3), dans l'information donnée sur la taxe compensée avant de demander à nouveau le gain et l'approbation, ainsi que les bénéfices et problèmes"
for (v in c('CC', 'sante', 'circulation', 'revenu', 'pauvres', 'independance', 'enjeu', 'aucun', 'autre_choix', 'autre')) {
s[[paste('taxe_benefices_', v, sep="")]] <<- s[paste('taxe_benefices_', v, '_p', sep="")][[1]]
s[[paste('taxe_benefices_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('taxe_benefices_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('taxe_benefices_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('taxe_benefices_', v, '_f', sep="")][[1]]))
}
for (v in c('inefficace', 'alternatives', 'ruraux', 'revenu', 'pauvres', 'economie', 'pretexte', 'aucun', 'autre_choix', 'autre')) {
s[[paste('taxe_problemes_', v, sep="")]] <<- s[paste('taxe_problemes_', v, '_p', sep="")][[1]]
s[[paste('taxe_problemes_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('taxe_problemes_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('taxe_problemes_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('taxe_problemes_', v, '_f', sep="")][[1]]))
}
s$cible[s$cible20==1] <<- 20
s$cible[s$cible30==1] <<- 30
s$cible[s$cible40==1] <<- 40
s$cible[s$cible50==1] <<- 50
label(s$cible) <<- "cible: Ciblage du recyclage de la hausse de la taxe carbone, attribué en fonction du revenu du répondant et de son ménage (20/30/40/50% les plus modestes)"
# TODO: manage to use tidyverse without erasing observations
# s <<- merge(s, s %>% gather(key = temp, value = gain_cible, c(gain_taxe__20, gain_taxe_20_30, gain_taxe_30_40, gain_taxe_40_50, gain_taxe_50_70, gain_taxe_70_)) %>% filter(gain_cible != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$gain_cible) <<- "gain_cible: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
# s <<- merge(s, s %>% gather(key = temp, value = taxe_cible_approbation, c(taxe__20_approbation, taxe_20_30_approbation, taxe_30_40_approbation, taxe_40_50_approbation, taxe_50_70_approbation, taxe_70__approbation)) %>% filter(taxe_cible_approbation != "") %>% select(-temp), sort=FALSE)
# label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
#
#   # s <<- s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp) # erases km_0, km_1, km_2
# s <<- merge(s, s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
#
# s <<- merge(s, s %>% gather(key = temp, value = conso, c(conso_1, conso_2)) %>% filter(conso != "") %>% select(-temp), sort=FALSE)
# label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$gain_cible[!is.na(s$gain_taxe__20)] <<- s$gain_taxe__20[!is.na(s$gain_taxe__20)]
s$gain_cible[!is.na(s$gain_taxe_20_30)] <<- s$gain_taxe_20_30[!is.na(s$gain_taxe_20_30)]
s$gain_cible[!is.na(s$gain_taxe_30_40)] <<- s$gain_taxe_30_40[!is.na(s$gain_taxe_30_40)]
s$gain_cible[!is.na(s$gain_taxe_40_50)] <<- s$gain_taxe_40_50[!is.na(s$gain_taxe_40_50)]
s$gain_cible[!is.na(s$gain_taxe_50_70)] <<- s$gain_taxe_50_70[!is.na(s$gain_taxe_50_70)]
s$gain_cible[!is.na(s$gain_taxe_70_)] <<- s$gain_taxe_70_[!is.na(s$gain_taxe_70_)]
label(s$gain_cible) <<- "gain_cible: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$taxe_cible_approbation[!is.na(s$taxe__20_approbation)] <<- s$taxe__20_approbation[!is.na(s$taxe__20_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_20_30_approbation)] <<- s$taxe_20_30_approbation[!is.na(s$taxe_20_30_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_30_40_approbation)] <<- s$taxe_30_40_approbation[!is.na(s$taxe_30_40_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_40_50_approbation)] <<- s$taxe_40_50_approbation[!is.na(s$taxe_40_50_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_50_70_approbation)] <<- s$taxe_50_70_approbation[!is.na(s$taxe_50_70_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_70__approbation)] <<- s$taxe_70__approbation[!is.na(s$taxe_70__approbation)]
label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$categorie_cible[!is.na(s$taxe__20_approbation)] <<- '_20'
s$categorie_cible[!is.na(s$taxe_20_30_approbation)] <<- '20_30'
s$categorie_cible[!is.na(s$taxe_30_40_approbation)] <<- '30_40'
s$categorie_cible[!is.na(s$taxe_40_50_approbation)] <<- '40_50'
s$categorie_cible[!is.na(s$taxe_50_70_approbation)] <<- '50_70'
s$categorie_cible[!is.na(s$taxe_70__approbation)] <<- '70_'
label(s$categorie_cible) <<- "categorie_cible: Catégorie de revenu du répondant (et de son ménage) taxe à recyclage ciblé - Catégories: percentile <20/20-30/30-40/40-50/50-70/>70, sachant que revenu_conjoint détermine la catégorie quand percentile de revenu > 70 (780/1140/1430/1670/2220)"
s$km[!is.na(s$km_0)] <<- s$km_0[!is.na(s$km_0)]
s$km[!is.na(s$km_1)] <<- s$km_1[!is.na(s$km_1)]
s$km[!is.na(s$km_2)] <<- s$km_2[!is.na(s$km_2)]
label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
s$conso[!is.na(s$conso_1)] <<- s$conso_1[!is.na(s$conso_1)]
s$conso[!is.na(s$conso_2)] <<- s$conso_2[!is.na(s$conso_2)]
label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$hausse_diesel[s$nb_vehicules == 0] <<- 0.5*6.39/100 * s$km * 1.4 * (1 - 0.4) * 0.090922 # share_diesel * conso * km * price * (1-elasticite) * price_increase
s$hausse_diesel[s$nb_vehicules == 1] <<- (s$fuel_1=='Diesel') * s$conso * s$km * 1.4 * (1 - 0.4) * 0.090922
s$hausse_diesel[s$nb_vehicules == 1] <<- ((s$fuel_2_1=='Diesel')*2/3 + (s$fuel_2_2=='Diesel')/3) * s$conso * s$km * 1.4 * (1 - 0.4) * 0.090922
s$progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- s$progressivite_feedback_sans_info[!is.na(s$progressivite_feedback_sans_info)]
s$progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- s$progressivite_feedback_avec_info[!is.na(s$progressivite_feedback_avec_info)]
s$progressivite[!is.na(s$progressivite_progressif)] <<- s$progressivite_progressif[!is.na(s$progressivite_progressif)]
label(s$progressivite) <<- "progressivite: ~ Une hausse de la taxe carbone compensée avantagerait les plus modestes (réunion des trois variante_progressivite: prog/fb_info/fb_no_info où seule fb_no_info est sans information préalable sur la progressivité) - Q206-208"
s$variante_progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- "fb_no_info"
s$variante_progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- "fb_info"
s$variante_progressivite[!is.na(s$progressivite_progressif)] <<- "prog"
label(s$variante_progressivite) <<- "variante_progressivite: prog/fb_info/fb_no_info Variante aléatoire du bloc de questions où figure 'progressivite', seulement pour apres_modifs=T. prog: info sur la progressivité / fb: feedback sur le statut gagnant/perdant simulé, info/no_info: avec/sans info sur la progressivité de la mesure"
s$info_progressivite <<- FALSE
s$info_progressivite[s$variante_taxe_info=='p' | s$variante_progressivite=='fb_info'] <<- T
label(s$info_progressivite) <<- "info_progressivite: Indicatrice qu'a été montrée l'information que la hausse de la taxe carbone compensée avantagerait les plus modestes"
for (i in 0:10) s[[paste('dep', i, 'en_position', sep='_')]] <<- NA
for (i in 0:10) {
for (o in 1:nrow(s)) {
j <- s[[paste('en_position', i, sep='_')]][o]
if (!is.na(j)) s[[paste('dep', j, 'en_position', sep='_')]][o] <<- i
}
}
# TODO: remove useless colonnes, such as _f/_p
# TODO: qualité, connaissances CC, opinions CC, gilets jaunes, duree_info, perte_tva/fuel, si_/non_, gaz-fioul -> T/F, transferts_inter/variante, enfant
}
prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=FALSE)
sa <- s
# prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE)
# se <- s
# prepare_s(exclude_screened=FALSE)
# sp <- s
prepare_s()
decrit(s$info_progressivite)
decrit(s$taxe_efficace)
decrit(s$elasticite_chauffage)
decrit(s$Elasticite_chauffage)
decrit(s$Elasticite_chauffage_perso)
decrit(s$Elasticite_fuel_perso)
decrit(s$Elasticite_fuel)
