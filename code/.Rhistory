as.numeric(gsub("\\D*", "", sub(".*\\sà\\s", "", levels(as.factor(s$elasticite_chauffage_perso)))))
as.numeric(gsub("\\D*", "", sub(".*\\sà\\s", "", sub("+ de 30", "+ de 40", levels(as.factor(s$elasticite_chauffage_perso))))))
test <- as.numeric(gsub("\\D*", "", sub(".*\\sà\\s", "", sub("+ de 30", "+ de 40", levels(as.factor(s$elasticite_chauffage_perso))))))
test - 5*(test > 0)
test <- as.numeric(gsub("\\D*", "", sub(".*\\sà\\s", "", sub("+ de 30", "+ de 45", levels(as.factor(s$elasticite_chauffage_perso))))))
test - 5*(test > 0)
(test - 5*(test > 0)) / 30
levels(as.factor(s$elasticite_fuel_perso))
levels(as.factor(s$elasticite_fuel))
as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))
(as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==0)*1.5 + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==3)*6.5 + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))>3)*(as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel)))))) + 5)
(as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==0)*1.5 + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==3)*6.5 + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))>3)*(as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel)))))) + 5) + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==30)*(as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel)))))) + 5)
(as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==0)*1.5 + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==3)*6.5 + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))>3)*(as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel)))))) + 5) + (as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", levels(as.factor(s$elasticite_fuel))))))==30)*5
decrit(s$elasticite_chauffage_perso)
decrit(s$elasticite_fuel_perso)
convert_s <- function() {
# lab <- label(s$csp)
# s$csp <<- factor(s$csp, levels=c(levels(s$csp), "Cadres", "Indépendants", "Ouvriers", 'Inactifs', "Professions intermédiaires", "Retraités", "Employés", "Agriculteurs"))
# s$csp <<- as.character(s$csp)
s$csp[grepl("cadre",s$csp)] <<- "Cadre"
s$csp[grepl("Artisan",s$csp)] <<- "Indépendant"
s$csp[grepl("iaire",s$csp)] <<- "Intermédiaire"
s$csp[grepl("etrait",s$csp)] <<- "Retraité"
s$csp[grepl("Employ",s$csp)] <<- "Employé"
s$csp[grepl("Agricul",s$csp)] <<- "Agriculteur"
s$csp[grepl("Ouvrier",s$csp)] <<- "Ouvrier"
s$csp[grepl("Inactif",s$csp)] <<- "Inactif"
# label(s$csp) <<- lab
# s$csp <<- as.factor(s$csp)
for (i in 1:length(s)) {
# levels(s[[i]]) <<- c(levels(s[[i]]), "NSP")
s[[i]][s[[i]] == "NSP (Ne sais pas, ne se prononce pas)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sait pas, ne se prononce pas)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sais pas, ne se prononce pas)."] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sait pas, ne se prononce pas)."] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sais pas, ne souhaite pas répondre)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne sait pas, ne veut pas répondre)"] <<- "NSP"
s[[i]][s[[i]] == "NSP (Ne veut pas répondre)"] <<- "NSP"
}
s$variante_transferts_inter[!is.na(s$transferts_inter_a) | !is.na(s$transferts_inter_a_info)] <<- "a"
s$transferts_inter <<- NA
s$transferts_inter_info[!is.na(s$transferts_inter_a_info)] <<- TRUE
s$transferts_inter_info[!is.na(s$transferts_inter_a)] <<- FALSE
s$transferts_inter[!is.na(s$transferts_inter_a_info)] <<- s$transferts_inter_a_info[!is.na(s$transferts_inter_a_info)]
s$transferts_inter[!is.na(s$transferts_inter_a)] <<- s$transferts_inter_a[!is.na(s$transferts_inter_a)]
label(s$variante_transferts_inter) <<- "variante_transferts_inter: Variante dans la formulation de transferts_inter; s/i/c/a: simple/intermédiaire/complète/approbation: (argument pauvreté,esponsabilité climatique des pays riches)/complète (i+ argument colonisation, esclavage)/pour ou contre un transfert de 5% des revenus des pays riches vers les pays pauvres (seulement en vague 2); Vague 1: curseur/NSP, Vague 2: champ de saisie (quelques données manquantes) - Q5,Q6,Q78"
label(s$transferts_inter) <<- "transferts_inter: Approbation d'un transfert de 5% des revenus des pays riches vers les pays pauvres"
# s$transferts_inter <<- as.item(as.numeric(s$transferts_inter), missing.values=-1, annotation="transferts_inter: Transferts internationaux, variantes (simple) avec curseur 0-20% (s) ou champ (Quelle % des revenus des pays riches devrait être transférée aux pays pauvres ?) - Q73,91")
s$mauvaise_qualite <<- 0 # 99% if we exclude those from revenu, 92% otherwise
s$mauvaise_qualite[n(s$revenu) > n(s$rev_tot)] <<- 1 + s$mauvaise_qualite[n(s$revenu) > n(s$rev_tot)] # 164
s$mauvaise_qualite[n(s$revenu) > 10000] <<- 1 + s$mauvaise_qualite[n(s$revenu) > 10000] # 58
s$mauvaise_qualite[n(s$rev_tot) > 10000] <<- 1 + s$mauvaise_qualite[n(s$rev_tot) > 10000] # 55
s$revenu <<- clean_number(s$revenu, high_numbers='divide')
s$rev_tot <<- clean_number(s$rev_tot, high_numbers='divide')
for (i in c(
"revenu", "rev_tot", "taille_menage", "nb_adultes", "nb_14_et_plus", "duree", "variation_aide", "depense_aide", "km_0", "km_1", "km_2", "conso_1", "conso_2", "surface", "emission_cible",
"depense_totale", "depense_sante", "depense_retraites", "depense_protection", "depense_education", "depense_recherche", "depense_loisirs",
"depense_infrastructures", "depense_justice", "depense_armee", "depense_securite", "depense_aide", "variation_totale", "variation_aide",
"variation_sante", "variation_retraites", "variation_protection", "recette_totale", "variation_recette", "budget_equilibre", "regle_or",
"variation_education", "variation_recherche", "variation_loisirs", "variation_infrastructures", "variation_justice", "variation_armee", "variation_securite",
"transports_distance", "duree_info_CC", "duree_info_CC_PM", "duree_info_PM", "duree_no_info", "duree_depenses", "duree_champ_libre",
"hausse_chauffage", "hausse_depenses", "hausse_diesel", "hausse_essence", "nb_vehicules", "en_position_0", "en_position_1", "en_position_2", "en_position_3",
"en_position_4", "en_position_5", "en_position_6", "en_position_7", "en_position_8", "en_position_9", "en_position_10"
)) {
lab <- label(s[[i]])
s[[i]] <<- as.numeric(as.vector(s[[i]]))
label(s[[i]]) <<- lab
}
s$mauvaise_qualite[s$taille_menage < s$nb_adultes | s$taille_menage < s$nb_14_et_plus] <<- 1.3 + s$mauvaise_qualite[s$taille_menage < s$nb_adultes | s$taille_menage < s$nb_14_et_plus] # 15
s$mauvaise_qualite[s$taille_menage > 12] <<- 1.3 + s$mauvaise_qualite[s$taille_menage > 12] # 10
s$mauvaise_qualite[s$nb_14_et_plus > 10] <<- 1 + s$mauvaise_qualite[s$nb_14_et_plus > 10] # 2
s$mauvaise_qualite[s$km > 10^6] <<- 1 + s$mauvaise_qualite[s$km > 10^6] # 1
s$mauvaise_qualite[s$surface < 9] <<- 1 + s$mauvaise_qualite[s$surface < 9] # 6
s$mauvaise_qualite[s$surface >= 1000] <<- 1 + s$mauvaise_qualite[s$surface >= 1000] # 4
label(s$mauvaise_qualite) <<- "mauvaise_qualite: Indicatrice d'une réponse aberrante à revenu, taille_menage, nb_14_et_plus, km ou surface."
s$duree_info_courte[n(s$info_CC) + n(s$info_PM) > 0] <<- FALSE # 15%
s$duree_info_courte[s$duree_info_CC < 5 | s$duree_info_PM < 5 | s$duree_info_CC_PM < 5] <<- T # 327
label(s$duree_info_courte) <<- "duree_info_courte: Indicatrice d'un temps de lecture inférieur à 5 secondes pour les informations du début."
for (j in c("taxe_efficace", "rattrapage_diesel", "enfant_CC", "mode_vie_ecolo", "schiste_approbation",
"transferts_inter_a", "transferts_inter_a_info", "transferts_inter", "taxe_approbation",
"taxe_feedback_approbation", "taxe_progressif_approbation", "taxe__20_approbation", "taxe_20_30_approbation",
"taxe_30_40_approbation", "taxe_40_50_approbation", "taxe_50_70_approbation", "taxe_70__approbation",
"progressivite_feedback_sans_info", "progressivite_feedback_avec_info", "progressivite_progressif"
)) {
s[j][[1]] <<- as.item(as.character(s[j][[1]]),
labels = structure(c("","Non","NSP","Oui"), names = c("NA","Non","NSP","Oui")),
missing.values = c("","NSP"), annotation=attr(s[j][[1]], "label"))
}
for (j in c("mode_chauffage", "chauffage", "parle_CC", "cause_CC", "effets_CC", "transports_frequence",
"schiste_CC", "transports_avis", "transports_travail_actif", "transports_travail_commun"
# "perte_relative_tva", "perte_relative_fuel", "perte_relative_chauffage", "interet_politique",
)) {
if (j %in% c("mode_chauffage", "chauffage", "schiste_CC", "cause_CC")) s[capitalize(j)] <<- s[j][[1]]
# s[j][[1]] <<- as.item(as.character(s[j][[1]]),
#             labels = structure(levels(factor(s[j][[1]])), names = levels(factor(s[j][[1]]))),
#             missing.values = c("NSP", ""), annotation=paste(attr(s[j][[1]], "label"), "(char)")) # pb with numbers=T
s[j][[1]] <<- as.item(as.factor(s[j][[1]]),
missing.values = c("NSP", ""), annotation=paste(attr(s[j][[1]], "label"), "(char)"))
}
# TODO: as.item region_CC, gagnant_fuel_categorie, gagnant_chauffage_categorie, gagnant_categorie, gagnant_feedback_categorie, gagnant_progressif_categorie, gagnant_cible_categorie?
for (j in names(s)) {
if (j!="peages_urbains" & grepl('_perdant_|_gagnant_|benefices_|problemes_|ges_|responsable_|generation_CC|enfant_CC_pour|changer_|gilets_jaunes_|apres_modif|aide_non_|aide_2p|ecologiste|conservateur|liberal|patriote|humaniste|apolitique', j)) {
s[[j]][s[[j]]!=""] <<- TRUE
s[[j]][is.na(s[[j]])] <<- FALSE
}
}
for (k in c("perte_relative_tva", "perte_relative_fuel", "perte_relative_chauffage")) {
temp <-  2 * (s[[k]]=="Oui, beaucoup plus") + (s[[k]]=="Oui, un peu plus") - (s[[k]]=="Non, un peu moins") - 2 * (s[[k]]=="Non, beaucoup moins")
s[[k]] <<- as.item(temp, labels = structure(c(-2:2),
names = c("Beaucoup moins","Un peu moins","= Moyenne","Un peu plus","Beaucoup plus")),
# names = c("Non, beaucoup moins","Non, un peu moins","Autant que la moyenne","Oui, un peu plus","Oui, beaucoup plus")),
annotation=Label(s[[k]]))
}
for (k in c(132:140,142:149)) {
temp <-  2 * (s[k][[1]]=="Oui, tout à fait") + (s[k][[1]]=="Oui, plutôt") - (s[k][[1]]=="Non, pas vraiment") - 2 * (s[k][[1]]=="Non, pas du tout")
s[k][[1]] <<- as.item(temp, labels = structure(c(-2:2),
names = c("Pas du tout","Pas vraiment","Indifférent/NSP","Plutôt","Tout à fait")),
# names = c("Non, pas du tout","Non, pas vraiment","Indifférent ou Ne sais pas","Oui, plutôt","Oui, tout à fait")),
annotation=Label(s[k][[1]]))
}
temp <- (s$parle_CC=='Plusieurs fois par an') + 2*(s$parle_CC=='Plusieurs fois par mois') - (s$parle_CC=="NSP")
s$parle_CC <<- as.item(temp, labels = structure(c(-1:2),
names = c("NSP","Presque jamais","Plusieurs fois par an","Plusieurs fois par mois")),
missing.values = -1, annotation=Label(s$parle_CC))
temp <- grepl("Faibles", s$effets_CC) + 2*grepl("Graves", s$effets_CC) + 3*grepl("Désastreux", s$effets_CC) + 4*grepl("Cataclysmiques", s$effets_CC) - (s$effets_CC=="NSP")
s$effets_CC <<- as.item(temp, labels = structure(c(-1:4),
names = c("NSP","Insignifiants","Faibles","Graves","Désastreux","Cataclysmiques")),
# names = c("NSP","Insignifiants, voire bénéfiques","Faibles, car les humains sauraient vivre avec","Graves, car il y aurait plus de catastrophes naturelles","Désastreux, les modes de vie seraient largement altérés","Cataclysmiques, l'humanité disparaîtrait")),
missing.values = -1, annotation=Label(s$effets_CC))
temp <- (s$transports_frequence=="Entre quatre fois par jour et une fois par heure") + 2*(s$transports_frequence=="Une ou deux fois par heure") + 3*(s$transports_frequence=="Plus que trois fois par heure") - (s$transports_frequence=="NSP")
s$transports_frequence <<- as.item(temp, labels = structure(c(-1:3),
names = c("NSP","< 3/jour","1/h - 4/jour","1/h - 2/h","> 3/heure")),
# names = c("NSP","Moins de trois fois par jour","Entre quatre fois par jour et une fois par heure","Une ou deux fois par heure","Plus que trois fois par heure")),
missing.values = -1, annotation=Label(s$transports_frequence))
temp <- (s$transports_avis=="Limitée, mais suffisante") + 2*(s$transports_avis=="Convenable, mais devrait être accrue") + 3*(s$transports_avis=="Satisfaisante") - (s$transports_avis=="NSP")
s$transports_avis <<- as.item(temp, labels = structure(c(-1:3),
names = c("NSP","Insuffisante","Limitée","Convenable","Satisfaisante")),
# names = c("NSP","Insuffisante","Limitée, mais suffisante","Convenable, mais devrait être accrue","Satisfaisante")),
missing.values = -1, annotation=Label(s$transports_avis))
labels(s$transports_travail_commun) <<- c("Non"="Non", "NSP"="NSP", "Oui, aucun pb"="Oui, ça ne me poserait pas de grande difficulté", "Oui, embêtant"="Oui, mais ça m'embêterait")
labels(s$transports_travail_actif) <<- c("Non"="Non", "NSP"="NSP", "Oui, aucun pb"="Oui, ça ne me poserait pas de grande difficulté", "Oui, embêtant"="Oui, mais ça m'embêterait")
s$Transports_travail_commun <<- s$transports_travail_commun
s$Transports_travail_actif <<- s$transports_travail_actif
s$Transports_travail_commun[is.na(s$Transports_travail_commun)] <<- "Non concerné"
s$Transports_travail_actif[is.na(s$Transports_travail_actif)] <<- "Non concerné"
s$Transports_travail_actif <<- as.item(as.character(s$Transports_travail_actif), missing.values=c('NSP', "Non concerné"), annotation="Transports_travail_actif: (transports_travail_actif sans NA) Sans changer de logement ni de lieu de travail, il serait possible pour le répondant prenant sa voiture d'effectuer ses trajets domicile-travail en marchant ou en vélo (Non/Oui mais ça l'embêterait/Oui ça ne lui poserait pas de grande difficulté/NSP)")
s$Transports_travail_commun <<- as.item(as.character(s$Transports_travail_commun), missing.values=c('NSP', "Non concerné"), annotation="Transports_travail_commun: (transports_travail_commun sans NA) Sans changer de logement ni de lieu de travail, il serait possible pour le répondant prenant sa voiture de prendre les transports en commun pour ses trajets domicile-travail (Non/Oui mais ça l'embêterait/Oui ça ne lui poserait pas de grande difficulté/NSP)")
s$Transports_distance <<- s$transports_distance
s$Transports_distance[is.na(s$Transports_distance)] <<- mean(s$transports_distance, na.rm=T)
s$Transports_distance <<- as.item(n(s$Transports_distance), missing.values = mean(s$transports_distance, na.rm=T), annotation="Transports_distance: (transports_distance sans NA) L'arrêt de transport en commun le plus proche de chez le répondant est à X minutes de marche")
# TODO: récupérer le vrai âge à partir de ID_age_dep_device.csv
temp <- 20.90*(s$age == "18 à 24 ans") + 29.61*(s$age == "25 à 34 ans") + 42.14*(s$age == "35 à 49 ans") + 56.84*(s$age == "50 à 64 ans") + 75.43*(s$age == "65 ans ou plus")
s$age <<- as.item(temp, labels = structure(c(20.90, 29.61, 42.14, 56.84, 75.43), names = c("18-24", "25-34", "35-49", "50-64", "65+")), annotation=Label(s$age))
# s$Age <<- (s$age == "18 à 24 ans") + 2*(s$age == "25 à 34 ans") + 3.3*(s$age == "35 à 49 ans") + 4.6*(s$age == "50 à 64 ans") + 7*(s$age == "65 ans ou plus")
s$taille_agglo <<- as.item(as.numeric(s$taille_agglo), labels = structure(1:5, names = c("rural", "-20k", "20-100k", "+100k", "Paris")), annotation=Label(s$taille_agglo))
s$Diplome <<- (s$diplome == "Brevet des collèges") + 2*(s$diplome=="CAP ou BEP") + 3*(s$diplome=="Baccalauréat") + 4*(s$diplome=="Bac +2 (BTS, DUT, DEUG, écoles de formation sanitaires et sociales...)") + 5*(s$diplome=="Bac +3 (licence...)") + 6*(s$diplome=="Bac +5 ou plus (master, école d'ingénieur ou de commerce, doctorat, médecine, maîtrise, DEA, DESS...)") - (s$diplome=="NSP (Ne se prononce pas)")
s$diplome4 <<- as.item(pmin(pmax(s$Diplome, 1), 4), labels = structure(1:4, names = c("Aucun diplôme ou brevet", "CAP ou BEP", "Baccalauréat", "Supérieur")), annotation=Label(s$diplome))
# s$diplome4 <<- as.character(s$diplome)
# s$diplome4[s$Diplome<2] <<- "Aucun diplôme ou brevet"
# s$diplome4[s$Diplome>3] <<- "Supérieur"
# labels(s$mode_chauffage) <<- c("individuel"="Chauffage individuel", "collectif"="Chauffage collectif", "NSP"="NSP")
# labels(s$chauffage) <<- c("Gaz réseau"="Gaz de ville", "Gaz bouteille"="Butane, propane, gaz en citerne", "Fioul"="Fioul, mazout, pétrole", "Électricité"="Électricité", "Bois, solaire..."="Bois, solaire, géothermie, aérothermie (pompe à chaleur)", "Autre"="Autre", "NSP"="NSP")
# labels(s$schiste_CC) <<- c("malvenue"="Elle est malvenue : il faudrait mettre fin aux émissions, pas seulement les ralentir", "valable"="Elle est valable : toute baisse des émissions va dans la bonne direction", "NSP"="NSP")
# labels(s$cause_CC) <<- c("n'existe pas"="n'est pas une réalité", "naturel"="est principalement dû à la variabilité naturelle du climat", "anthropique"="est principalement dû à l'activité humaine", "NSP"="NSP")
s$mode_chauffage <<- relabel(s$mode_chauffage, c("Chauffage individuel"="individuel", "Chauffage collectif"="collectif", "NSP"="NSP"))
s$chauffage <<- relabel(s$chauffage, c("Gaz de ville"="Gaz réseau", "Butane, propane, gaz en citerne"="Gaz bouteille", "Fioul, mazout, pétrole"="Fioul", "Électricité"="Électricité", "Bois, solaire, géothermie, aérothermie (pompe à chaleur)"="Bois, solaire...", "Autre"="Autre", "NSP"="NSP"))
s$schiste_CC <<- relabel(s$schiste_CC, c("Elle est malvenue : il faudrait mettre fin aux émissions, pas seulement les ralentir"="malvenue", "Elle est valable : toute baisse des émissions va dans la bonne direction"="valable", "NSP"="NSP"))
s$cause_CC <<- relabel(s$cause_CC, c("n'est pas une réalité"="n'existe pas", "est principalement dû à la variabilité naturelle du climat"="naturel", "est principalement dû à l'activité humaine"="anthropique", "NSP"="NSP"))
s$Compris_depenses <<- as.character(s$compris_depenses)
s$Compris_depenses[is.na(s$Compris_depenses)] <<- "NA"
s$compris_depenses <<- as.item(as.character(s$compris_depenses),
labels = structure(c("", "Oui","Non","Bug: le graphique ne s'est pas affiché correctement."), names = c("NA", "Oui","Non","Bug")), annotation=attr(s$compris_depenses, "label"))
s$enfant_CC[is.na(s$enfant_CC)] <<- "NSP"
s$enfant_CC_pour_CC[s$enfant_CC=='Non'] <<- 'Non concerné'
s$enfant_CC_pour_CC <<- as.item(as.character(s$enfant_CC_pour_CC), labels = structure(c(T, FALSE, 'Non concerné'), names=c('TRUE', 'FALSE', 'Non concerné')),
missing.values='Non concerné', annotation=Label(s$enfant_CC_pour_CC))
s$enfant_CC_pour_lui[s$enfant_CC=='Non'] <<- 'Non concerné'
s$enfant_CC_pour_lui <<- as.item(as.character(s$enfant_CC_pour_lui), labels = structure(c(T, FALSE, 'Non concerné'), names=c('TRUE', 'FALSE', 'Non concerné')),
missing.values='Non concerné', annotation=Label(s$enfant_CC_pour_lui))
s$gauche_droite <<- pmax(-2,pmin(2,-2 * grepl("extrême gauche", s$extr_gauche) - grepl("De gauche", s$gauche) + grepl("De droite", s$droite) + 2 * grepl("extrême droite", s$extr_droite)))
is.na(s$gauche_droite) <<- (s$gauche_droite == 0) & !grepl("centre", s$centre)
s$Gauche_droite <<- as.factor(s$gauche_droite)
s$gauche_droite <<- as.item(as.numeric(as.vector(s$gauche_droite)), labels = structure(c(-2:2),
names = c("Extrême gauche","Gauche","Centre","Droite","Extrême droite")), annotation="gauche_droite:échelle de -2 (extr_gauche) à +2 (extr_droite) - Orientation politique (Comment vous définiriez-vous ? Plusieurs réponses possibles: (D'extrême) gauche/Du centre/(D'extrême) droite/Libéral/Humaniste/Patriote/Apolitique/Écologiste/Conservateur (champ libre)/NSP)")
levels(s$Gauche_droite) <<- c("Extreme-left", "Left", "Center", "Right", "Extreme-right", "Indeterminate")
s$Gauche_droite[is.na(s$Gauche_droite)] <<- "Indeterminate"
temp <- Label(s$interet_politique)
s$interet_politique <<- 1*(s$interet_politique=='Un peu') + 2*(s$interet_politique=='Beaucoup')
s$interet_politique <<- as.item(s$interet_politique, labels=structure(c(0:2), names=c('Presque pas', 'Un peu', 'Beaucoup')), annotation=temp)
# s$gilets_jaunes[s$gilets_jaunes_NSP==T] <<- -99
s$gilets_jaunes[s$gilets_jaunes_compris==T] <<- 0 # total à 115%
s$gilets_jaunes[s$gilets_jaunes_oppose==T] <<- -1 # 2 oppose et soutien en même temps
s$gilets_jaunes[s$gilets_jaunes_soutien==T] <<- 1
s$gilets_jaunes[s$gilets_jaunes_dedans==T] <<- 2
label(s$gilets_jaunes) <<- "gilets_jaunes: -1: s'oppose / 0: comprend sans soutenir ni s'opposer / 1: soutient / 2: fait partie des gilets jaunes (gilets_jaunes_compris/oppose/soutien/dedans/NSP)"
s$gilets_jaunes <<- as.item(n(s$gilets_jaunes), labels = structure(c(-1:2), names=c('oppose', 'comprend', 'soutient', 'est_dedans')),
annotation=attr(s$gilets_jaunes, "label"))
# temp <- label(s$diplome)
# s$diplome <<- factor(s$diplome, c("","Aucun diplôme","Brevet des collèges","CAP ou BEP","Baccalauréat","Bac +2 (BTS, DUT, DEUG, écoles de formation sanitaires et sociales...)","Bac +3 (licence...)","Bac +5 ou plus (master, école d'ingénieur ou de commerce, doctorat, médecine, maîtrise, DEA, DESS...)","NSP (Ne se prononce pas)") )
# label(s$diplome) <<- temp
# temp <- label(s$interet_politique)
# s$interet_politique <<- factor(s$interet_politique, c("","Beaucoup","Un peu","Presque pas (ou pas du tout)","NSP","NSP (Je ne veux pas répondre)","Q20 - À quel point êtes-vous intéressé·e par la politique ?"))
# label(s$interet_politique) <<- temp
s$revenu_conjoint <<- s$rev_tot - s$revenu
s$revdisp <<- round((s$rev_tot -  irpp(s$rev_tot, s$nb_adultes, s$taille_menage)))
s$uc <<- uc(s$taille_menage, s$nb_14_et_plus)
s$niveau_vie <<- s$revdisp / s$uc
# s$age <<- as.factor(as.character(s$age))
# s$Region <<- as.factor(as.character(s$region))
# s$taille_agglo <<- as.factor(gsub("[[:alpha:] ]", "", s$taille_agglo))
# s <<- s[s$taille_agglo!="%1%",]
# pourquoi 91 missing regions? Sûrement un bug du Javascript côté utilisateur (certains types de device/navigateur?): 56% ont un bug sur compris_depenses contre 3% pour les autres
region_code <- function(code) {
reg <- "autre"
regions <- list(
"ARA" = c('01', '03', '07', '15', '26', '38', '42', '43', '63', '69', '73', '74'),
"Est" = c('21', '25', '39', '58', '70', '71', '89', '90', '08', '10', '51', '52', '54', '55', '57', '67', '68', '88'),
"Ouest" = c('22', '29', '35', '56', '14', '27', '50', '61', '76' ),
"Centre" = c('18', '28', '36', '37', '41', '45', '44', '49', '53', '72', '85'),
"Nord" = c('02', '59', '60', '62', '80'),
"IDF" = c('75', '77', '78', '91', '92', '93', '94', '95'),
"SO" = c('16', '17', '19', '23', '24', '33', '40', '47', '64', '79', '86', '87'),
"Occ" = c('09', '11', '12', '30', '31', '32', '34', '46', '48', '65', '66', '81', '82'),
"PACA" = c( '04', '05', '06', '13', '83', '84')
)
for (i in 1:9) if (as.numeric(code) %in% as.numeric(regions[[i]])) reg <- names(regions)[i]
return(reg)
} # TODO: pourquoi Centre excède de 20% le quota? Pourquoi y a-t-il aussi des excès dee quotas dans taille_agglo?
region_dep <- rep("", 95)
for (i in 1:95) region_dep[i] <- region_code(i)
s$region <<- "autre"
s$region[as.numeric(substr(s$code_postal, 1, 2)) %in% 1:95] <<- region_dep[as.numeric(substr(s$code_postal, 1, 2))]
# TODO: missing schiste_traite? dep_traites <- c(01, 02, 04, 06, 07, 08, 10, 11, 12, 13, 24, 25, 26, 30, 31, 32, 33, 34, 38, 39, 40, 45, 46, 48, 51, 54, 55, 57, 59, 60, 62, 64, 65, 67, 68, 69, 71, 73, 74, 77, 78, 82, 83, 84, 89, 90, 91, 93, 94, 95)
s$nb_vehicules <<- (s$nb_vehicules_texte=='Un') + 2*(s$nb_vehicules_texte=='Deux ou plus')
s$variante_partielle <<- 'NA'
s$variante_partielle[!is.na(s$gagnant_chauffage_categorie)] <<- 'c'
s$variante_partielle[!is.na(s$gagnant_fuel_categorie)] <<- 'f'
label(s$variante_partielle) <<- "variante_partielle: Variante aléatoire (c/f) de la taxe partielle sur le chauffage ou les carburants (=fuel)"
s$perte_relative_partielle[s$variante_partielle=='c'] <<- s$perte_relative_chauffage[s$variante_partielle=='c']
s$perte_relative_partielle[s$variante_partielle=='f'] <<- s$perte_relative_fuel[s$variante_partielle=='f']
label(s$perte_relative_partielle) <<- "perte_relative_partielle: Une hausse des taxes sur variante_partielle (chauffage ou fuel) ferait perdre plus à votre ménage que la moyenne (Oui, beaucoup/un peu plus/Autant que la moyenne/Non, un peu/beaucoup moins/NSP) - Q155, 162"
# s$gain_fuel <- NA
s$gain_fuel[s$gagnant_fuel_categorie=='Non affecté' & s$variante_partielle=='f'] <<- 0
s$gain_fuel[s$gagnant_fuel_categorie=='Gagnant' & s$variante_partielle=='f'] <<- 1 + as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_fuel_hausse[s$gagnant_fuel_categorie=='Gagnant' & s$variante_partielle=='f']))))/25
s$gain_fuel[s$gagnant_fuel_categorie=='Perdant' & s$variante_partielle=='f'] <<- - 1 - as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_fuel_baisse[s$gagnant_fuel_categorie=='Perdant' & s$variante_partielle=='f']))))/25
label(s$gain_fuel) <<- "gain_fuel: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe carburants compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
s$gain_chauffage[s$gagnant_chauffage_categorie=='Non affecté' & s$variante_partielle=='c'] <<- 0
s$gain_chauffage[s$gagnant_chauffage_categorie=='Gagnant' & s$variante_partielle=='c'] <<- 1 + as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_chauffage_hausse[s$gagnant_chauffage_categorie=='Gagnant' & s$variante_partielle=='c']))))/25
s$gain_chauffage[s$gagnant_chauffage_categorie=='Perdant' & s$variante_partielle=='c'] <<- - 1 - as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_chauffage_baisse[s$gagnant_chauffage_categorie=='Perdant' & s$variante_partielle=='c']))))/25
label(s$gain_chauffage) <<- "gain_fuel: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe chauffage compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
s$gagnant_partielle_categorie[s$variante_partielle=='c'] <<- s$gagnant_chauffage_categorie[s$variante_partielle=='c']
s$gagnant_partielle_categorie[s$variante_partielle=='f'] <<- s$gagnant_fuel_categorie[s$variante_partielle=='f']
label(s$gagnant_partielle_categorie) <<- "gagnant_partielle_categorie: Ménage Gagnant/Non affecté/Perdant par hausse taxe partielle (chauffage ou fuel) compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40) (gagnant_fuel_categorie/chauffage)"
s$gain_partielle[s$variante_partielle=='c'] <<- s$gain_chauffage[s$variante_partielle=='c']
s$gain_partielle[s$variante_partielle=='f'] <<- s$gain_fuel[s$variante_partielle=='f']
label(s$gain_partielle) <<- "gain_partielle: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe partielle (chauffage ou fuel) compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40) (gain_fuel/chauffage)"
s$gain[s$gagnant_categorie=='Non affecté' & s$variante_partielle!='NA'] <<- 0
s$gain[s$gagnant_categorie=='Gagnant' & s$variante_partielle!='NA'] <<- 1 + as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_hausse[s$gagnant_categorie=='Gagnant' & s$variante_partielle!='NA']))))/50
s$gain[s$gagnant_categorie=='Perdant' & s$variante_partielle!='NA'] <<- - 1 - as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$gain_taxe_baisse[s$gagnant_categorie=='Perdant' & s$variante_partielle!='NA']))))/50
label(s$gain) <<- "gain: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe carbone compensée, dans [-6;5] (seuils: -280/-190/-120/-70/-30/0/20/40/60/80)"
s$gain_echelle <<- s$gain
s$gain_fuel_echelle <<- s$gain_fuel
s$gain_chauffage_echelle <<- s$gain_chauffage
s$gain_partielle_echelle <<- s$gain_fuel
s$gain_partielle_echelle[!is.na(s$gain_chauffage_echelle)] <<- s$gain_chauffage_echelle[!is.na(s$gain_chauffage_echelle)]
label(s$gain) <<- "gain: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe carbone compensée, dans [-6;5] (seuils: -280/-190/-120/-70/-30/0/20/40/60/80)"
label(s$gain_chauffage_echelle) <<- "gain_chauffage_echelle: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe chauffage compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
label(s$gain_fuel_echelle) <<- "gain_fuel_echelle: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe carburants compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
label(s$gain_partielle_echelle) <<- "gain_partielle_echelle: Catégorie de gain-perte de pouvoir d'achat par UC, suite à hausse taxe partielle (carburants ou chauffage) compensée, dans [-6;5] (seuils: -160/-110/-70/-40/-15/0/10/20/30/40)"
# cf. consistency_belief_losses.py pour les imputations
s$gain_min <<- -1000*(s$gain==-6) - 280*(s$gain==-5) - 190*(s$gain==-4) - 120*(s$gain==-3) - 70*(s$gain==-2) - 30*(s$gain==-1) + 0*(s$gain==1) + 20*(s$gain==2) + 40*(s$gain==3) + 60*(s$gain==4) + 80*(s$gain==5)
s$gain_max <<- -280*(s$gain==-6) - 190*(s$gain==-5) - 120*(s$gain==-4) - 70*(s$gain==-3) - 30*(s$gain==-2) - 0*(s$gain==-1) + 20*(s$gain==1) + 40*(s$gain==2) + 60*(s$gain==3) + 80*(s$gain==4) + 2000*(s$gain==5)
s$gain_fuel_min <<- -1000*(s$gain_fuel==-6) - 160*(s$gain_fuel==-5) - 110*(s$gain_fuel==-4) - 70*(s$gain_fuel==-3) - 40*(s$gain_fuel==-2) - 15*(s$gain_fuel==-1) + 0*(s$gain_fuel==1) + 10*(s$gain_fuel==2) + 20*(s$gain_fuel==3) + 30*(s$gain_fuel==4) + 40*(s$gain_fuel==5)
s$gain_fuel_max <<- -160*(s$gain_fuel==-6) - 110*(s$gain_fuel==-5) - 70*(s$gain_fuel==-4) - 40*(s$gain_fuel==-3) - 15*(s$gain_fuel==-2) - 0*(s$gain_fuel==-1) + 10*(s$gain_fuel==1) + 20*(s$gain_fuel==2) + 30*(s$gain_fuel==3) + 40*(s$gain_fuel==4) + 1000*(s$gain_fuel==5)
s$gain_chauffage_min <<- -1000*(s$gain_chauffage==-6) - 160*(s$gain_chauffage==-5) - 110*(s$gain_chauffage==-4) - 70*(s$gain_chauffage==-3) - 40*(s$gain_chauffage==-2) - 15*(s$gain_chauffage==-1) + 0*(s$gain_chauffage==1) + 10*(s$gain_chauffage==2) + 20*(s$gain_chauffage==3) + 30*(s$gain_chauffage==4) + 40*(s$gain_chauffage==5)
s$gain_chauffage_max <<- -160*(s$gain_chauffage==-6) - 110*(s$gain_chauffage==-5) - 70*(s$gain_chauffage==-4) - 40*(s$gain_chauffage==-3) - 15*(s$gain_chauffage==-2) - 0*(s$gain_chauffage==-1) + 10*(s$gain_chauffage==1) + 20*(s$gain_chauffage==2) + 30*(s$gain_chauffage==3) + 40*(s$gain_chauffage==4) + 1000*(s$gain_chauffage==5)
temp <- -405.55*(s$gain==-6) - 224.25*(s$gain==-5) - 147.91*(s$gain==-4) - 92.83*(s$gain==-3) - 48.28*(s$gain==-2) - 13.72*(s$gain==-1) + 10.39*(s$gain==1) + 30.36*(s$gain==2) + 49.96*(s$gain==3) + 69.72*(s$gain==4) + 106.89*(s$gain==5) #  - 1.66*(s$gain==0)
s$gain <<- as.item(temp, labels = structure(c(-405.55, -224.25, -147.91, -92.83, -48.28, -13.72, 0, 10.39, 30.36, 49.96, 69.72, 106.89), names = c("<-280", "-280_-190", "-190_-120", "-120_-70", "-70_-30", "-30_0", "0", "0_20", "20_40", "40_60", "60_80", ">80")), annotation=Label(s$gain))
temp <- NA
temp[!is.na(s$gain_fuel)] <- (-248.76*(s$gain_fuel==-6) - 131.21*(s$gain_fuel==-5) - 87.36*(s$gain_fuel==-4) - 53.27*(s$gain_fuel==-3) - 25.49*(s$gain_fuel==-2) - 7.51*(s$gain_fuel==-1) + 5.17*(s$gain_fuel==1) + 14.73*(s$gain_fuel==2) + 24.85*(s$gain_fuel==3) + 34.89*(s$gain_fuel==4) + 57.42*(s$gain_fuel==5))[!is.na(s$gain_fuel)] #  - 1.17*(s$gain_fuel==0)
s$gain_fuel <<- as.item(temp, labels = structure(c(-248.76, -131.21, -87.36, -53.27, -25.49, -7.51, 0, 5.17, 14.73, 24.85, 34.89, 57.42), names = c("<-160", "-160_-110", "-110_-70", "-70_-40", "-40_-15", "-15_0", "0", "0_10", "10_20", "20_30", "30_40", ">40")), annotation=Label(s$gain_fuel))
temp <- NA
temp[!is.na(s$gain_chauffage)] <- (-262.07*(s$gain_chauffage==-6) - 132.69*(s$gain_chauffage==-5) - 87.05*(s$gain_chauffage==-4) - 53.65*(s$gain_chauffage==-3) - 26.57*(s$gain_chauffage==-2) - 7.20*(s$gain_chauffage==-1) + 4.53*(s$gain_chauffage==1) + 15.44*(s$gain_chauffage==2) + 25.26*(s$gain_chauffage==3) + 35.66*(s$gain_chauffage==4) + 54.67*(s$gain_chauffage==5))[!is.na(s$gain_chauffage)] #  - 1.34*(s$gain_chauffage==0)
s$gain_chauffage <<- as.item(temp, labels = structure(c(-262.07, -132.69, -87.05, -53.65, -26.57, -7.20, 0, 4.53, 15.44, 25.26, 35.66, 54.67), names = c("<-160", "-160_-110", "-110_-70", "-70_-40", "-40_-15", "-15_0", "0", "0_10", "10_20", "20_30", "30_40", ">40")), annotation=Label(s$gain_chauffage))
s$Elasticite_chauffage <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_chauffage))))
s$Elasticite_chauffage <<- (s$Elasticite_chauffage==0)*1.5 + (s$Elasticite_chauffage==3)*6.5 + (s$Elasticite_chauffage>3)*(s$Elasticite_chauffage + 5) + 5*(s$Elasticite_chauffage==30) # Take the average of thresholds, take 40% for >30%
s$Elasticite_chauffage <<- - round(s$Elasticite_chauffage / 30, 2) # converts into elasticity
label(s$Elasticite_chauffage) <<- "Elasticite_chauffage: Élasticité-prix des dépenses de chauffage des Français, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 30%)"
s$Elasticite_chauffage_perso <<- as.numeric(gsub("\\D*", "", sub(".*\\sà\\s", "", sub("+ de 30", "+ de 45", s$elasticite_chauffage_perso))))
s$Elasticite_chauffage_perso <<- s$Elasticite_chauffage_perso - 5*(s$Elasticite_chauffage_perso > 0) # Take the average between thresholds, take 40% for >30%
s$Elasticite_chauffage_perso <<- - round(s$Elasticite_chauffage_perso / 30, 2) # converts into elasticity
label(s$Elasticite_chauffage_perso) <<- "Elasticite_chauffage_perso: Élasticité-prix des dépenses de chauffage du ménage, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 30%)"
s$Elasticite_fuel <<- as.numeric(gsub("\\D*", "", sub("\\sà.*", "", sub("\\D*", "", s$elasticite_fuel))))
s$Elasticite_fuel <<- (s$Elasticite_fuel==0)*1.5 + (s$Elasticite_fuel==3)*6.5 + (s$Elasticite_fuel>3)*(s$Elasticite_fuel + 5) + 5*(s$Elasticite_fuel==30) # Take the average of thresholds, take 40% for >30%
s$Elasticite_fuel <<- - round(s$Elasticite_fuel / 30, 2) # converts into elasticity
label(s$Elasticite_fuel) <<- "Elasticite_fuel: Élasticité-prix des dépenses de carburants des Français, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 0.5€/L)"
s$Elasticite_fuel_perso <<- as.numeric(gsub("\\D*", "", sub(".*\\sà\\s", "", sub("+ de 30", "+ de 45", s$elasticite_fuel_perso))))
s$Elasticite_fuel_perso <<- s$Elasticite_fuel_perso - 5*(s$Elasticite_fuel_perso > 0) # Take the average between thresholds, take 40% for >30%
s$Elasticite_fuel_perso <<- - round(s$Elasticite_fuel_perso / 30, 2) # converts into elasticity
label(s$Elasticite_fuel_perso) <<- "Elasticite_fuel_perso: Élasticité-prix des dépenses de carburants du ménage, calculée en prenant la valeur moyenne des intervalles proposées (seuils à 0/3/10/20/30% pour une hausse de 0.5€/L)"
s$elasticite_partielle <<- s$elasticite_chauffage
s$elasticite_partielle[!is.na(s$elasticite_fuel)] <<- s$elasticite_fuel[!is.na(s$elasticite_fuel)]
label(s$elasticite_partielle) <<- "elasticite_partielle: Réduction de la conso de fioul et gaz OU de carburants des Français suite à augmentation du prix de 30% (0% - Je n'en consomme déjà presque pas/0% - Je suis contraint sur tous mes déplacements/de 0% à 10%/de 10% à 20%/de 20% à 30%/+ de 30% - Je changerais largement mes habitudes de déplacement)"
s$Elasticite_partielle <<- s$Elasticite_chauffage
s$Elasticite_partielle[!is.na(s$Elasticite_fuel)] <<- s$Elasticite_fuel[!is.na(s$Elasticite_fuel)]
label(s$Elasticite_partielle) <<- "Elasticite_partielle: Élasticité-prix des dépenses de fioul et gaz OU de carburants des Français, calculée en prenant la valeur moyenne des intervalles proposées"
s$elasticite_partielle_perso <<- s$elasticite_chauffage_perso
s$elasticite_partielle_perso[!is.na(s$elasticite_fuel_perso)] <<- s$elasticite_fuel_perso[!is.na(s$elasticite_fuel_perso)]
label(s$elasticite_partielle_perso) <<- "elasticite_partielle_perso: Réduction de la conso de fioul et gaz OU de carburants du ménage suite à augmentation du prix de 30% (0% - Je n'en consomme déjà presque pas/0% - Je suis contraint sur tous mes déplacements/de 0% à 10%/de 10% à 20%/de 20% à 30%/+ de 30% - Je changerais largement mes habitudes de déplacement)"
s$Elasticite_partielle_perso <<- s$Elasticite_chauffage_perso
s$Elasticite_partielle_perso[!is.na(s$Elasticite_fuel_perso)] <<- s$Elasticite_fuel_perso[!is.na(s$Elasticite_fuel_perso)]
label(s$Elasticite_partielle_perso) <<- "Elasticite_partielle_perso: Élasticité-prix des dépenses de fioul et gaz OU de carburants du ménage, calculée en prenant la valeur moyenne des intervalles proposées"
s$variante_taxe_info <<- "p"
s$variante_taxe_info[s$gagnant_feedback_categorie!=""] <<- "f"
label(s$variante_taxe_info) <<- "variante_taxe_info: (f/p) Variante aléatoire entre f: feedback (=simulation, 2/3) et p: progressivité (1/3), dans l'information donnée sur la taxe compensée avant de demander à nouveau le gain et l'approbation, ainsi que les bénéfices et problèmes"
for (v in c('CC', 'sante', 'circulation', 'revenu', 'pauvres', 'independance', 'enjeu', 'aucun', 'autre_choix', 'autre')) {
s[[paste('benefices_', v, sep="")]] <<- s[paste('benefices_', v, '_p', sep="")][[1]]
s[[paste('benefices_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('benefices_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('benefices_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('benefices_', v, '_f', sep="")][[1]]))
}
for (v in c('inefficace', 'alternatives', 'ruraux', 'revenu', 'pauvres', 'economie', 'pretexte', 'aucun', 'autre_choix', 'autre')) {
s[[paste('problemes_', v, sep="")]] <<- s[paste('problemes_', v, '_p', sep="")][[1]]
s[[paste('problemes_', v, sep="")]][s$variante_taxe_info=='f'] <<- s[paste('problemes_', v, '_f', sep="")][[1]][s$variante_taxe_info=='f']
label(s[[paste('problemes_', v, sep="")]]) <<- sub("_f: \\* ", ": ", label(s[paste('problemes_', v, '_f', sep="")][[1]]))
}
s$gagnant_info_categorie <<- s$gagnant_feedback_categorie
s$gagnant_info_categorie[!is.na(s$gagnant_progressif_categorie)] <<- s$gagnant_progressif_categorie[!is.na(s$gagnant_progressif_categorie)]
label(s$gagnant_info_categorie) <<- "gagnant_info_categorie: après info simule_gagnant et/ou progressivité: Ménage Gagnant/Non affecté/Perdant par hausse taxe carbone redistribuée à tous (+110€/an /adulte, +13/15% gaz/fioul, +0.11/13 €/L diesel/essence)"
s$taxe_info_approbation <<- s$taxe_feedback_approbation
s$taxe_info_approbation[!is.na(s$taxe_progressif_approbation)] <<- s$taxe_progressif_approbation[!is.na(s$taxe_progressif_approbation)]
annotation(s$taxe_info_approbation) <<- "taxe_info_approbation: après info simule_gagnant et/ou progressivité - Approbation d'une hausse de la taxe carbone compensée (+110€/an /adulte, +13/15% gaz/fioul, +0.11/13 €/L diesel/essence)"
s$cible[s$cible20==1] <<- '20'
s$cible[s$cible30==1] <<- '30'
s$cible[s$cible40==1] <<- '40'
s$cible[s$cible50==1] <<- '50'
s$cible <<- relevel(as.factor(s$cible), '50')
label(s$cible) <<- "cible: Ciblage du recyclage de la hausse de la taxe carbone, attribué en fonction du revenu du répondant et de son ménage (20/30/40/50% les plus modestes)"
# TODO: manage to use tidyverse without erasing observations
# s <<- merge(s, s %>% gather(key = temp, value = gain_cible, c(gagnant__20_categorie, gagnant_20_30_categorie, gagnant_30_40_categorie, gagnant_40_50_categorie, gagnant_50_70_categorie, gagnant_70__categorie)) %>% filter(gain_cible != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$gain_cible) <<- "gain_cible: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
# s <<- merge(s, s %>% gather(key = temp, value = taxe_cible_approbation, c(taxe__20_approbation, taxe_20_30_approbation, taxe_30_40_approbation, taxe_40_50_approbation, taxe_50_70_approbation, taxe_70__approbation)) %>% filter(taxe_cible_approbation != "") %>% select(-temp), sort=FALSE)
# label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
#
#   # s <<- s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp) # erases km_0, km_1, km_2
# s <<- merge(s, s %>% gather(key = temp, value = km, c(km_0, km_1, km_2)) %>% filter(km != "") %>% select(-temp), sort=FALSE) # Warning: attributes are not identical across measure variables; they will be dropped
# label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
#
# s <<- merge(s, s %>% gather(key = temp, value = conso, c(conso_1, conso_2)) %>% filter(conso != "") %>% select(-temp), sort=FALSE)
# label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$gagnant_cible_categorie[!is.na(s$gagnant__20_categorie)] <<- s$gagnant__20_categorie[!is.na(s$gagnant__20_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_20_30_categorie)] <<- s$gagnant_20_30_categorie[!is.na(s$gagnant_20_30_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_30_40_categorie)] <<- s$gagnant_30_40_categorie[!is.na(s$gagnant_30_40_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_40_50_categorie)] <<- s$gagnant_40_50_categorie[!is.na(s$gagnant_40_50_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_50_70_categorie)] <<- s$gagnant_50_70_categorie[!is.na(s$gagnant_50_70_categorie)]
s$gagnant_cible_categorie[!is.na(s$gagnant_70__categorie)] <<- s$gagnant_70__categorie[!is.na(s$gagnant_70__categorie)]
label(s$gagnant_cible_categorie) <<- "gagnant_cible_categorie: Ménage Gagnant/Non affecté/Perdant avec hausse taxe carbone à recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$taxe_cible_approbation[!is.na(s$taxe__20_approbation)] <<- s$taxe__20_approbation[!is.na(s$taxe__20_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_20_30_approbation)] <<- s$taxe_20_30_approbation[!is.na(s$taxe_20_30_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_30_40_approbation)] <<- s$taxe_30_40_approbation[!is.na(s$taxe_30_40_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_40_50_approbation)] <<- s$taxe_40_50_approbation[!is.na(s$taxe_40_50_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_50_70_approbation)] <<- s$taxe_50_70_approbation[!is.na(s$taxe_50_70_approbation)]
s$taxe_cible_approbation[!is.na(s$taxe_70__approbation)] <<- s$taxe_70__approbation[!is.na(s$taxe_70__approbation)]
label(s$taxe_cible_approbation) <<- "taxe_cible_approbation: Approbation d'une hausse de la taxe carbone compensée par recyclage ciblé (cible: 20/30/40/50% les plus modestes)"
s$categorie_cible[!is.na(s$taxe__20_approbation)] <<- '_20'
s$categorie_cible[!is.na(s$taxe_20_30_approbation)] <<- '20_30'
s$categorie_cible[!is.na(s$taxe_30_40_approbation)] <<- '30_40'
s$categorie_cible[!is.na(s$taxe_40_50_approbation)] <<- '40_50'
s$categorie_cible[!is.na(s$taxe_50_70_approbation)] <<- '50_70'
s$categorie_cible[!is.na(s$taxe_70__approbation)] <<- '70_'
label(s$categorie_cible) <<- "categorie_cible: Catégorie de revenu du répondant (et de son ménage) taxe à recyclage ciblé - Catégories: percentile <20/20-30/30-40/40-50/50-70/>70, sachant que revenu_conjoint détermine la catégorie quand percentile de revenu > 70 (780/1140/1430/1670/2220)"
s$traite_cible <<- (s$cible==20)*(s$revenu<780) + (s$cible==30)*(s$revenu<1140) + (s$cible==40)*(s$revenu<1430) + (s$cible==50)*(s$revenu<1670)
s$traite_cible_conjoint <<- (s$nb_adultes > 1)* ((s$cible==20)*(s$revenu_conjoint<780) + (s$cible==30)*(s$revenu_conjoint<1140) + (s$cible==40)*(s$revenu_conjoint<1430) + (s$cible==50)*(s$revenu_conjoint<1670))
label(s$traite_cible) <<- "traite_cible: Indicatrice de transfert reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
label(s$traite_cible_conjoint) <<- "traite_cible_conjoint: Indicatrice de transfert reçu par le conjoint du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
s$versement_cible <<- (s$traite_cible + s$traite_cible_conjoint) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
s$versement_cible_sans_conjoint <<- (s$traite_cible) * ((s$cible==20)*550 + (s$cible==30)*360 + (s$cible==40)*270 + (s$cible==50)*220)
label(s$versement_cible) <<- "versement_cible: Versement annuel reçu par le ménage du répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/parent pour cible à 20/30/40/50"
label(s$versement_cible_sans_conjoint) <<- "versement_cible_sans_conjoint: Versement annuel reçu par le répondant lors de la hausse de la taxe carbone avec compensation ciblée. Montants: 550/360/270/220 €/an/adulte pour cible à 20/30/40/50"
s$versement <<- 110 * s$nb_adultes
label(s$versement) <<- "versement: Versement annuel reçu par le ménage suite à une hausse de la taxe carbone compensée (110 * nb_adultes)"
s$km[!is.na(s$km_0)] <<- s$km_0[!is.na(s$km_0)]
s$km[!is.na(s$km_1)] <<- s$km_1[!is.na(s$km_1)]
s$km[!is.na(s$km_2)] <<- s$km_2[!is.na(s$km_2)]
label(s$km) <<- "km: Nombre de kilomètres parcourus lors des 12 derniers mois en voiture ou moto (par le répondant pour nb_vehicules=0, par les véhicules sinon)"
s$conso[!is.na(s$conso_1)] <<- s$conso_1[!is.na(s$conso_1)]
s$conso[!is.na(s$conso_2)] <<- s$conso_2[!is.na(s$conso_2)]
s$conso[is.na(s$conso)] <<- (6.39 + 7.31) / 2
label(s$conso) <<- "conso:  Consommation moyenne du véhicule (en litres aux 100 km)"
s$gaz <<- grepl('gaz', s$chauffage, ignore.case = T)
s$fioul <<- grepl('fioul', s$chauffage, ignore.case = T)
s$hausse_chauffage <<- -55.507189 + s$gaz * 124.578484 + s$fioul * 221.145441 + s$surface * 0.652174
s$hausse_diesel[s$nb_vehicules == 0] <<- (0.5*(6.39/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
s$hausse_diesel[s$nb_vehicules == 1] <<- ((s$fuel_1=='Diesel') * (s$conso/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 1]
s$hausse_diesel[s$nb_vehicules == 2] <<- (((s$fuel_2_1=='Diesel')*2/3 + (s$fuel_2_2=='Diesel')/3) * (s$conso/100) * s$km * 1.4 * (1 - 0.4) * 0.090922)[s$nb_vehicules == 2]
s$hausse_essence[s$nb_vehicules == 0] <<- (0.5*(7.31/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 0] # share_diesel * conso * km * price * (1-elasticite) * price_increase
s$hausse_essence[s$nb_vehicules == 1] <<- ((s$fuel_1!='Diesel') * (s$conso/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 1]
s$hausse_essence[s$nb_vehicules == 2] <<- (((s$fuel_2_1!='Diesel')*2/3 + (s$fuel_2_2!='Diesel')/3) * (s$conso/100) * s$km * 1.45 * (1 - 0.4) * 0.076128)[s$nb_vehicules == 2]
s$hausse_carburants <<- s$hausse_diesel + s$hausse_essence
label(s$hausse_carburants) <<- "hausse_carburant: Hausse des dépenses de carburants simulées pour le ménage, suite à la taxe (élasticité de 0.4) (hausse_diesel + hausse_essence)"
s$hausse_depenses <<- s$hausse_carburants + s$hausse_chauffage
s$diesel <<- (!is.na(s$fuel_1) & (s$fuel_1=='Diesel')) | (!is.na(s$fuel_2_2) & ((s$fuel_2_1=='Diesel') | (s$fuel_2_2=='Diesel')))
s$essence <<- (!is.na(s$fuel_1) & (s$fuel_1=='Essence')) | (!is.na(s$fuel_2_2) & ((s$fuel_2_1=='Essence') | (s$fuel_2_2=='Essence')))
label(s$diesel) <<- "diesel: Indicatrice de la possession d'un véhicule diesel par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Diesel')"
label(s$essence) <<- "essence: Indicatrice de la possession d'un véhicule à essence par le ménage (fuel_1 ou fuel_2_1 ou fuel_2_2 = 'Essence')"
s$simule_gain <<- 16.1 + s$nb_adultes * 110 - s$hausse_depenses
s$simule_gain_repondant <<- 16.1 + 110 - s$hausse_depenses
label(s$simule_gain) <<- "simule_gain: Gain net annuel simulé pour le ménage du répondant suite à une hausse de taxe carbone compensée: 16.1 + nb_adultes * 110 - hausse_depenses"
label(s$simule_gain_repondant) <<- "simule_gain_repondant: Gain net annuel simulé pour le répondant (sans tenir compte du potentiel versement reçu par les autres adultes du ménage) suite à une hausse de taxe carbone compensée: 116.1 - hausse_depenses"
s$simule_gain_cible <<- s$versement_cible - s$hausse_depenses
s$simule_gain_cible_sans_conjoint <<- s$versement_cible - s$hausse_depenses
label(s$simule_gain_cible) <<- "simule_gain_cible: Gain net simulé pour le ménage du répondant suite à une hausse de taxe carbone avec compensation ciblée: versement_cible - hausse_depenses"
label(s$simule_gain_cible_sans_conjoint) <<- "simule_gain_cible_sans_conjoint: Gain net simulé pour le répondant (sans tenir compte du potentiel versement reçu par son conjoint) suite à une hausse de taxe carbone avec compensation ciblée: versement_cible - hausse_depenses"
s$simule_gagnant[is.na(s$simule_gagnant)] <<- 1*(s$simule_gain[is.na(s$simule_gagnant)] > 0)
s$progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- s$progressivite_feedback_sans_info[!is.na(s$progressivite_feedback_sans_info)]
s$progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- s$progressivite_feedback_avec_info[!is.na(s$progressivite_feedback_avec_info)]
s$progressivite[!is.na(s$progressivite_progressif)] <<- s$progressivite_progressif[!is.na(s$progressivite_progressif)]
label(s$progressivite) <<- "progressivite: ~ Une hausse de la taxe carbone compensée avantagerait les plus modestes (réunion des trois variante_progressivite: prog/fb_info/fb_no_info où seule fb_no_info est sans information préalable sur la progressivité) - Q206-208"
s$variante_progressivite[!is.na(s$progressivite_feedback_sans_info)] <<- "fb_no_info"
s$variante_progressivite[!is.na(s$progressivite_feedback_avec_info)] <<- "fb_info"
s$variante_progressivite[s$variante_taxe_info=='p'] <<- "prog" # !is.na(s$progressivite_progressif) |
s$variante_progressivite[s$variante_taxe_info=='f' & s$apres_modifs==FALSE] <<- 'fb_no_info'
label(s$variante_progressivite) <<- "variante_progressivite: prog/fb_info/fb_no_info Variante aléatoire du bloc de questions où figure 'progressivite'. prog: info sur la progressivité / fb: feedback sur le statut gagnant/perdant simulé, info/no_info: avec/sans info sur la progressivité de la mesure" # , seulement pour apres_modifs=T
s$info_progressivite <<- FALSE
s$info_progressivite[s$variante_taxe_info=='p' | s$variante_progressivite=='fb_info'] <<- T
label(s$info_progressivite) <<- "info_progressivite: Indicatrice qu'a été montrée l'information que la hausse de la taxe carbone compensée avantagerait les plus modestes"
s$variante_monetaire[is.na(s$variante_monetaire)] <<- 0 # concerne seulement une observation. Évite des complications inutiles.
s$age_18_24 <<- 1*(s$age == '18 à 24 ans')
s$age_25_34 <<- 1*(s$age == '25 à 34 ans')
s$age_35_49 <<- 1*(s$age == '35 à 49 ans')
s$age_50_64 <<- 1*(s$age == '50 à 64 ans')
s$age_65_plus <<- 1*(s$age == '65 ans ou plus')
s$score_ges <<- 1 * (s$ges_CO2 == TRUE) + 1*(s$ges_CH4 == TRUE) + 1*(s$ges_O2 == FALSE) + 1*(s$ges_pm == FALSE)
label(s$score_ges) <<- "score_ges: Somme des bonnes réponses au questionnaire gaz à effet de serre (ges_O2/CH4/pm/CO2)"
s$score_climate_call <<- 1*(s$ges_avion == TRUE) + 1*(s$ges_boeuf == TRUE) + 1*(s$ges_nucleaire == FALSE)
label(s$score_climate_call) <<- "score_climate_call: Somme des bonnes réponses au questionnaire Climate Call (avion-train / boeuf-pates / nucleaire-eolien) ges_avion/boeuf/nucleaire"
s$duree_info[s$info_CC==1 & s$info_PM==1] <<- s$duree_info_CC_PM[s$info_CC==1 & s$info_PM==1]
s$duree_info[s$info_CC==0 & s$info_PM==1] <<- s$duree_info_PM[s$info_CC==0 & s$info_PM==1]
s$duree_info[s$info_CC==1 & s$info_PM==0] <<- s$duree_info_CC[s$info_CC==1 & s$info_PM==0]
s$duree_info[s$info_CC==0 & s$info_PM==0] <<- s$duree_no_info[s$info_CC==0 & s$info_PM==0]
label(s$duree_info) <<- "duree_info: Temps de soumission - Ancrage (information procurée ou non au début sur changement climatique ou particules fines) (duree_info_CC/PM/CC_PM/no_info)"
for (v in c("autonomie", "priorite", "etats", "global", "trop")) {
s[[paste("aide_non", v, sep="_")]] <<- NA
s[[paste("aide_non", v, sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==T & s$aide_2p==T] <<- s[[paste("aide_non", v, "i", sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==T & s$aide_2p==T]
s[[paste("aide_non", v, sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==FALSE & s$aide_2p==T] <<- s[[paste("aide_non", v, "ni", sep="_")]][!is.na(s$transferts_inter_info) & s$transferts_inter_info==FALSE & s$aide_2p==T]
label(s[[paste("aide_non", v, sep="_")]]) <<- Label(s[[paste("aide_non", v, "i", sep="_")]])
}
s$revenu_decile <- 1 + 1 * ((s$revenu > 237) + (s$revenu > 789) + (s$revenu > 1151) + (s$revenu > 1436) + (s$revenu > 1677) + (s$revenu > 1927) + (s$revenu > 2231) + (s$revenu > 2657) + (s$revenu > 3462))
s$revenu_quintile <- 1 + 1 * ((s$revenu > 789) + (s$revenu > 1436) + (s$revenu > 1927) + (s$revenu > 2657))
categories_depenses <- c("sante", "retraites", "protection", "education", "recherche", "loisirs", "infrastructures", "justice", "armee", "securite", "aide")
# for (i in 0:10) s[[paste('dep', i, 'en_position', sep='_')]] <<- NA
for (i in 0:10) {
s[[paste('dep', i, 'en_position', sep='_')]] <<- (s$en_position_1==i) + 2*(s$en_position_2==i)  + 3*(s$en_position_3==i)  + 4*(s$en_position_4==i)  + 5*(s$en_position_5==i)  + 6*(s$en_position_6==i)  + 7*(s$en_position_7==i)  + 8*(s$en_position_8==i)  + 9*(s$en_position_9==i)  + 10*(s$en_position_10==i)
label(s[[paste('dep', i, 'en_position', sep='_')]]) <<- paste(paste('dep', i, 'en_position', sep='_'), ": Position à laquelle est affichée la catégorie de dépense ", i, "(", categories_depenses[i], ") (cf. en_position_i)", sep="")
# for (o in 1:nrow(s)) {
#   j <- s[[paste('en_position', i, sep='_')]][o]
#   if (!is.na(j)) s[[paste('dep', j, 'en_position', sep='_')]][o] <<- i
#   s[[paste('dep', j, 'en_position', sep='_')]][!is.na(s$en_position_0)] <-
# }
}
s <<- s[, -c(78:97, 100:119, 294:303)]
# TODO: connaissances CC, opinions CC
}
prepare_s <- function(exclude_speeder=TRUE, exclude_screened=TRUE, only_finished=TRUE, only_known_agglo=T) { # , exclude_quotas_full=TRUE
# setwd("/home/adrien/Google Drive/Economie/Travail/enquete/codes")
# setwd("C:/Users/a.fabre/Google Drive/Economie/Travail/enquete/codes")
# pes <<- read.csv("fin.csv", sep=";")
# s <<- read.delim("politique.tsv", fileEncoding="UTF-16")
# f_data <- read.delim("fin.tsv", fileEncoding="UTF-16")
s <<- read_csv("survey.csv")
for (i in 1:length(s)) { label(s[[i]]) <<- toString(s[i][[1]][1]) } # Use the first line to create variable names labels then remove it - to run only once # TODO: bug
s <<- s[-c(1,2),c(1:91,94:115,117:235,241,247:310,313:319,92,93,116,311,312,236:240,242:246)]
# if (exclude_screened) { s <<- s[s$Q_TerminateFlag=="",] } # remove Screened
# if (exclude_speeder) { s <<- s[n(s$`Duration (in seconds)`) > 540,] } # remove speedest
# if (exclude_quotas_full) { s <<- s[s[101][[1]] %in% c(1:5),]  } # remove those with a problem for the taille d'agglo
# if (exclude_quotas_full) { s <<- s[s$Q_TerminateFlag=="",]  } # remove those with a problem for the taille d'agglo
# if (only_finished) { s <<- s[as.vector(s$Finished)=="True",] }
relabel_and_rename_s()
print(paste(length(which(s$exclu=="QuotaMet")), "QuotaMet"))
s$fini[s$exclu=="QuotaMet" | is.na(s$revenu)] <<- "False" # To check the number of QuotaMet that shouldn't have incremented the quota, comment this line and: decrit(s$each_strate[s$exclu=="QuotaMet" & s$csp=="Employé" & !grepl("2019-03-04 07", s$date)])
if (exclude_screened) { s <<- s[is.na(s$exclu),] } # remove Screened
if (exclude_speeder) { s <<- s[as.numeric(as.vector(s$duree)) > 420,] } # remove speedest /!\ was 540 before 22-02-11:00 (EST Coast time)
# if (exclude_quotas_full) { s <<- s[s[101][[1]] %in% c(1:5),]  } # remove those with a problem for the taille d'agglo
# if (exclude_quotas_full) { s <<- s[s$Q_TerminateFlag=="",]  } # remove those with a problem for the taille d'agglo
if (only_finished) { s <<- s[s$fini=="True",] }
agglos <- read.csv2('agglos.csv')
names(agglos) <- c("id", "taille_agglo2")
s <<- merge(s, agglos, by="id", all.x=T)
s$taille_agglo[is.na(s$taille_agglo)] <<- s$taille_agglo2[is.na(s$taille_agglo)]
s <<- s[, which(names(s)!="taille_agglo2")]
print(paste(length(which(is.na(s$taille_agglo))), "tailles d'agglo sont manquantes"))
# id_agglo_manquante <- s$id[is.na(s$taille_agglo)]
# write.csv(id_agglo_manquante, "ID_agglo_manquante.csv")
if (only_known_agglo) s <<- s[!is.na(s$taille_agglo),]
convert_s()
s$sample <<- "a"
s$sample[s$fini=="True"] <<- "e"
s$sample[s$fini=="True" & n(s$duree) > 540] <<- "p"
s$sample[s$fini=="True" & n(s$duree) > 540 & s$test_qualite=='Un peu'] <<- "f" # "q"? excluded because out of quotas
s$sample[s$fini=="True" & n(s$duree) > 540 & s$exclu==""] <<- "r"
# s <<- s[-which(is.element(s$id, s$id[duplicated(s$id)]) & !duplicated(s$id)),] # remove doublons
s$weight <<- weighting_s(s)
s$weight[is.element(s$id, s$id[duplicated(s$id)])] <<- s$weight[is.element(s$id, s$id[duplicated(s$id)])] / 2
}
prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE, only_finished=T) # TODO: let only_finished = FALSE
sa <- s
# prepare_s(exclude_screened=FALSE, exclude_speeder=FALSE)
# se <- s
# prepare_s(exclude_screened=FALSE)
# sp <- s
prepare_s()
decrit(s$Elasticite_chauffage_perso)
decrit(s$elasticite_chauffage_perso)
